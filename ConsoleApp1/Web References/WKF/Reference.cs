//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace ConsoleApp1.WKF {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WkfSoap", Namespace="http://tempuri.org/")]
    public partial class Wkf : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignNextOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignNext2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExternalFormListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormStructureByFormIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRelayFormDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TerminateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimulationFlowByScriptOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Wkf() {
            this.Url = global::ConsoleApp1.Properties.Settings.Default.ConsoleApp1_WKF_Wkf;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendFormCompletedEventHandler SendFormCompleted;
        
        /// <remarks/>
        public event SignNextCompletedEventHandler SignNextCompleted;
        
        /// <remarks/>
        public event SignNext2CompletedEventHandler SignNext2Completed;
        
        /// <remarks/>
        public event GetFormListCompletedEventHandler GetFormListCompleted;
        
        /// <remarks/>
        public event GetExternalFormListCompletedEventHandler GetExternalFormListCompleted;
        
        /// <remarks/>
        public event GetFormStructureCompletedEventHandler GetFormStructureCompleted;
        
        /// <remarks/>
        public event GetFormStructureByFormIdCompletedEventHandler GetFormStructureByFormIdCompleted;
        
        /// <remarks/>
        public event GetTaskDataCompletedEventHandler GetTaskDataCompleted;
        
        /// <remarks/>
        public event SetRelayFormDataCompletedEventHandler SetRelayFormDataCompleted;
        
        /// <remarks/>
        public event TerminateTaskCompletedEventHandler TerminateTaskCompleted;
        
        /// <remarks/>
        public event GetTaskResultCompletedEventHandler GetTaskResultCompleted;
        
        /// <remarks/>
        public event SimulationFlowByScriptCompletedEventHandler SimulationFlowByScriptCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendForm(string token, string xmlFormInfo) {
            object[] results = this.Invoke("SendForm", new object[] {
                        token,
                        xmlFormInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFormAsync(string token, string xmlFormInfo) {
            this.SendFormAsync(token, xmlFormInfo, null);
        }
        
        /// <remarks/>
        public void SendFormAsync(string token, string xmlFormInfo, object userState) {
            if ((this.SendFormOperationCompleted == null)) {
                this.SendFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFormOperationCompleted);
            }
            this.InvokeAsync("SendForm", new object[] {
                        token,
                        xmlFormInfo}, this.SendFormOperationCompleted, userState);
        }
        
        private void OnSendFormOperationCompleted(object arg) {
            if ((this.SendFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFormCompleted(this, new SendFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignNext", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SignNext(string token, string taskId, string siteId, int nodeSeq, string signerGuid) {
            object[] results = this.Invoke("SignNext", new object[] {
                        token,
                        taskId,
                        siteId,
                        nodeSeq,
                        signerGuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SignNextAsync(string token, string taskId, string siteId, int nodeSeq, string signerGuid) {
            this.SignNextAsync(token, taskId, siteId, nodeSeq, signerGuid, null);
        }
        
        /// <remarks/>
        public void SignNextAsync(string token, string taskId, string siteId, int nodeSeq, string signerGuid, object userState) {
            if ((this.SignNextOperationCompleted == null)) {
                this.SignNextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignNextOperationCompleted);
            }
            this.InvokeAsync("SignNext", new object[] {
                        token,
                        taskId,
                        siteId,
                        nodeSeq,
                        signerGuid}, this.SignNextOperationCompleted, userState);
        }
        
        private void OnSignNextOperationCompleted(object arg) {
            if ((this.SignNextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignNextCompleted(this, new SignNextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignNext2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SignNext2(string token, string taskId, string siteId, int nodeSeq, string signerGuid) {
            object[] results = this.Invoke("SignNext2", new object[] {
                        token,
                        taskId,
                        siteId,
                        nodeSeq,
                        signerGuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SignNext2Async(string token, string taskId, string siteId, int nodeSeq, string signerGuid) {
            this.SignNext2Async(token, taskId, siteId, nodeSeq, signerGuid, null);
        }
        
        /// <remarks/>
        public void SignNext2Async(string token, string taskId, string siteId, int nodeSeq, string signerGuid, object userState) {
            if ((this.SignNext2OperationCompleted == null)) {
                this.SignNext2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignNext2OperationCompleted);
            }
            this.InvokeAsync("SignNext2", new object[] {
                        token,
                        taskId,
                        siteId,
                        nodeSeq,
                        signerGuid}, this.SignNext2OperationCompleted, userState);
        }
        
        private void OnSignNext2OperationCompleted(object arg) {
            if ((this.SignNext2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignNext2Completed(this, new SignNext2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormList(string token) {
            object[] results = this.Invoke("GetFormList", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormListAsync(string token) {
            this.GetFormListAsync(token, null);
        }
        
        /// <remarks/>
        public void GetFormListAsync(string token, object userState) {
            if ((this.GetFormListOperationCompleted == null)) {
                this.GetFormListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormListOperationCompleted);
            }
            this.InvokeAsync("GetFormList", new object[] {
                        token}, this.GetFormListOperationCompleted, userState);
        }
        
        private void OnGetFormListOperationCompleted(object arg) {
            if ((this.GetFormListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormListCompleted(this, new GetFormListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExternalFormList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExternalFormList(string token) {
            object[] results = this.Invoke("GetExternalFormList", new object[] {
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExternalFormListAsync(string token) {
            this.GetExternalFormListAsync(token, null);
        }
        
        /// <remarks/>
        public void GetExternalFormListAsync(string token, object userState) {
            if ((this.GetExternalFormListOperationCompleted == null)) {
                this.GetExternalFormListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExternalFormListOperationCompleted);
            }
            this.InvokeAsync("GetExternalFormList", new object[] {
                        token}, this.GetExternalFormListOperationCompleted, userState);
        }
        
        private void OnGetExternalFormListOperationCompleted(object arg) {
            if ((this.GetExternalFormListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExternalFormListCompleted(this, new GetExternalFormListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormStructure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormStructure(string token, string formVersionId) {
            object[] results = this.Invoke("GetFormStructure", new object[] {
                        token,
                        formVersionId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormStructureAsync(string token, string formVersionId) {
            this.GetFormStructureAsync(token, formVersionId, null);
        }
        
        /// <remarks/>
        public void GetFormStructureAsync(string token, string formVersionId, object userState) {
            if ((this.GetFormStructureOperationCompleted == null)) {
                this.GetFormStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormStructureOperationCompleted);
            }
            this.InvokeAsync("GetFormStructure", new object[] {
                        token,
                        formVersionId}, this.GetFormStructureOperationCompleted, userState);
        }
        
        private void OnGetFormStructureOperationCompleted(object arg) {
            if ((this.GetFormStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormStructureCompleted(this, new GetFormStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFormStructureByFormId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFormStructureByFormId(string token, string formId) {
            object[] results = this.Invoke("GetFormStructureByFormId", new object[] {
                        token,
                        formId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormStructureByFormIdAsync(string token, string formId) {
            this.GetFormStructureByFormIdAsync(token, formId, null);
        }
        
        /// <remarks/>
        public void GetFormStructureByFormIdAsync(string token, string formId, object userState) {
            if ((this.GetFormStructureByFormIdOperationCompleted == null)) {
                this.GetFormStructureByFormIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormStructureByFormIdOperationCompleted);
            }
            this.InvokeAsync("GetFormStructureByFormId", new object[] {
                        token,
                        formId}, this.GetFormStructureByFormIdOperationCompleted, userState);
        }
        
        private void OnGetFormStructureByFormIdOperationCompleted(object arg) {
            if ((this.GetFormStructureByFormIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormStructureByFormIdCompleted(this, new GetFormStructureByFormIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskData(string token, string taskId) {
            object[] results = this.Invoke("GetTaskData", new object[] {
                        token,
                        taskId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskDataAsync(string token, string taskId) {
            this.GetTaskDataAsync(token, taskId, null);
        }
        
        /// <remarks/>
        public void GetTaskDataAsync(string token, string taskId, object userState) {
            if ((this.GetTaskDataOperationCompleted == null)) {
                this.GetTaskDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskDataOperationCompleted);
            }
            this.InvokeAsync("GetTaskData", new object[] {
                        token,
                        taskId}, this.GetTaskDataOperationCompleted, userState);
        }
        
        private void OnGetTaskDataOperationCompleted(object arg) {
            if ((this.GetTaskDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskDataCompleted(this, new GetTaskDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRelayFormData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetRelayFormData(string token, string relayFormData) {
            object[] results = this.Invoke("SetRelayFormData", new object[] {
                        token,
                        relayFormData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetRelayFormDataAsync(string token, string relayFormData) {
            this.SetRelayFormDataAsync(token, relayFormData, null);
        }
        
        /// <remarks/>
        public void SetRelayFormDataAsync(string token, string relayFormData, object userState) {
            if ((this.SetRelayFormDataOperationCompleted == null)) {
                this.SetRelayFormDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRelayFormDataOperationCompleted);
            }
            this.InvokeAsync("SetRelayFormData", new object[] {
                        token,
                        relayFormData}, this.SetRelayFormDataOperationCompleted, userState);
        }
        
        private void OnSetRelayFormDataOperationCompleted(object arg) {
            if ((this.SetRelayFormDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRelayFormDataCompleted(this, new SetRelayFormDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TerminateTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TerminateTask(string token, string taskId, string account, string result, string reason) {
            object[] results = this.Invoke("TerminateTask", new object[] {
                        token,
                        taskId,
                        account,
                        result,
                        reason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TerminateTaskAsync(string token, string taskId, string account, string result, string reason) {
            this.TerminateTaskAsync(token, taskId, account, result, reason, null);
        }
        
        /// <remarks/>
        public void TerminateTaskAsync(string token, string taskId, string account, string result, string reason, object userState) {
            if ((this.TerminateTaskOperationCompleted == null)) {
                this.TerminateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTerminateTaskOperationCompleted);
            }
            this.InvokeAsync("TerminateTask", new object[] {
                        token,
                        taskId,
                        account,
                        result,
                        reason}, this.TerminateTaskOperationCompleted, userState);
        }
        
        private void OnTerminateTaskOperationCompleted(object arg) {
            if ((this.TerminateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TerminateTaskCompleted(this, new TerminateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTaskResult(string token, string taskId, string isContainFormData) {
            object[] results = this.Invoke("GetTaskResult", new object[] {
                        token,
                        taskId,
                        isContainFormData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskResultAsync(string token, string taskId, string isContainFormData) {
            this.GetTaskResultAsync(token, taskId, isContainFormData, null);
        }
        
        /// <remarks/>
        public void GetTaskResultAsync(string token, string taskId, string isContainFormData, object userState) {
            if ((this.GetTaskResultOperationCompleted == null)) {
                this.GetTaskResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskResultOperationCompleted);
            }
            this.InvokeAsync("GetTaskResult", new object[] {
                        token,
                        taskId,
                        isContainFormData}, this.GetTaskResultOperationCompleted, userState);
        }
        
        private void OnGetTaskResultOperationCompleted(object arg) {
            if ((this.GetTaskResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskResultCompleted(this, new GetTaskResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SimulationFlowByScript", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SimulationFlowByScript(string token, string content) {
            object[] results = this.Invoke("SimulationFlowByScript", new object[] {
                        token,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SimulationFlowByScriptAsync(string token, string content) {
            this.SimulationFlowByScriptAsync(token, content, null);
        }
        
        /// <remarks/>
        public void SimulationFlowByScriptAsync(string token, string content, object userState) {
            if ((this.SimulationFlowByScriptOperationCompleted == null)) {
                this.SimulationFlowByScriptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimulationFlowByScriptOperationCompleted);
            }
            this.InvokeAsync("SimulationFlowByScript", new object[] {
                        token,
                        content}, this.SimulationFlowByScriptOperationCompleted, userState);
        }
        
        private void OnSimulationFlowByScriptOperationCompleted(object arg) {
            if ((this.SimulationFlowByScriptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimulationFlowByScriptCompleted(this, new SimulationFlowByScriptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SendFormCompletedEventHandler(object sender, SendFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SignNextCompletedEventHandler(object sender, SignNextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignNextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignNextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SignNext2CompletedEventHandler(object sender, SignNext2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignNext2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignNext2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFormListCompletedEventHandler(object sender, GetFormListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetExternalFormListCompletedEventHandler(object sender, GetExternalFormListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExternalFormListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExternalFormListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFormStructureCompletedEventHandler(object sender, GetFormStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetFormStructureByFormIdCompletedEventHandler(object sender, GetFormStructureByFormIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormStructureByFormIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormStructureByFormIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTaskDataCompletedEventHandler(object sender, GetTaskDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SetRelayFormDataCompletedEventHandler(object sender, SetRelayFormDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRelayFormDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRelayFormDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void TerminateTaskCompletedEventHandler(object sender, TerminateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TerminateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TerminateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTaskResultCompletedEventHandler(object sender, GetTaskResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void SimulationFlowByScriptCompletedEventHandler(object sender, SimulationFlowByScriptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimulationFlowByScriptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimulationFlowByScriptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591