//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace WSAPI.Album {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AlbumSoap", Namespace="http://tempuri.org/")]
    public partial class Album : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryClassListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAlbumListOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPhotoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPhotoSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPhotoSize2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClass2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAlbum2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPhoto2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhotoDescOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePhotoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Album() {
            this.Url = global::WSAPI.Properties.Settings.Default.WSAPI_Album_Album;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryClassListCompletedEventHandler QueryClassListCompleted;
        
        /// <remarks/>
        public event QueryAlbumListCompletedEventHandler QueryAlbumListCompleted;
        
        /// <remarks/>
        public event QueryPhotoListCompletedEventHandler QueryPhotoListCompleted;
        
        /// <remarks/>
        public event GetPhotoCompletedEventHandler GetPhotoCompleted;
        
        /// <remarks/>
        public event QueryPhotoSizeCompletedEventHandler QueryPhotoSizeCompleted;
        
        /// <remarks/>
        public event QueryPhotoSize2CompletedEventHandler QueryPhotoSize2Completed;
        
        /// <remarks/>
        public event AddClassCompletedEventHandler AddClassCompleted;
        
        /// <remarks/>
        public event AddClass2CompletedEventHandler AddClass2Completed;
        
        /// <remarks/>
        public event AddAlbumCompletedEventHandler AddAlbumCompleted;
        
        /// <remarks/>
        public event AddAlbum2CompletedEventHandler AddAlbum2Completed;
        
        /// <remarks/>
        public event AddPhotoCompletedEventHandler AddPhotoCompleted;
        
        /// <remarks/>
        public event AddPhoto2CompletedEventHandler AddPhoto2Completed;
        
        /// <remarks/>
        public event UpdatePhotoDescCompletedEventHandler UpdatePhotoDescCompleted;
        
        /// <remarks/>
        public event MovePhotoCompletedEventHandler MovePhotoCompleted;
        
        /// <remarks/>
        public event DeletePhotoCompletedEventHandler DeletePhotoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryClassList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryClassList(string token, string classPath) {
            object[] results = this.Invoke("QueryClassList", new object[] {
                        token,
                        classPath});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryClassListAsync(string token, string classPath) {
            this.QueryClassListAsync(token, classPath, null);
        }
        
        /// <remarks/>
        public void QueryClassListAsync(string token, string classPath, object userState) {
            if ((this.QueryClassListOperationCompleted == null)) {
                this.QueryClassListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryClassListOperationCompleted);
            }
            this.InvokeAsync("QueryClassList", new object[] {
                        token,
                        classPath}, this.QueryClassListOperationCompleted, userState);
        }
        
        private void OnQueryClassListOperationCompleted(object arg) {
            if ((this.QueryClassListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryClassListCompleted(this, new QueryClassListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAlbumList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryAlbumList(string token, string classPath) {
            object[] results = this.Invoke("QueryAlbumList", new object[] {
                        token,
                        classPath});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAlbumListAsync(string token, string classPath) {
            this.QueryAlbumListAsync(token, classPath, null);
        }
        
        /// <remarks/>
        public void QueryAlbumListAsync(string token, string classPath, object userState) {
            if ((this.QueryAlbumListOperationCompleted == null)) {
                this.QueryAlbumListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAlbumListOperationCompleted);
            }
            this.InvokeAsync("QueryAlbumList", new object[] {
                        token,
                        classPath}, this.QueryAlbumListOperationCompleted, userState);
        }
        
        private void OnQueryAlbumListOperationCompleted(object arg) {
            if ((this.QueryAlbumListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAlbumListCompleted(this, new QueryAlbumListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPhotoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryPhotoList(string token, string classPath, string albumTopic) {
            object[] results = this.Invoke("QueryPhotoList", new object[] {
                        token,
                        classPath,
                        albumTopic});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPhotoListAsync(string token, string classPath, string albumTopic) {
            this.QueryPhotoListAsync(token, classPath, albumTopic, null);
        }
        
        /// <remarks/>
        public void QueryPhotoListAsync(string token, string classPath, string albumTopic, object userState) {
            if ((this.QueryPhotoListOperationCompleted == null)) {
                this.QueryPhotoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPhotoListOperationCompleted);
            }
            this.InvokeAsync("QueryPhotoList", new object[] {
                        token,
                        classPath,
                        albumTopic}, this.QueryPhotoListOperationCompleted, userState);
        }
        
        private void OnQueryPhotoListOperationCompleted(object arg) {
            if ((this.QueryPhotoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPhotoListCompleted(this, new QueryPhotoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPhoto(string token, string photoGuid) {
            object[] results = this.Invoke("GetPhoto", new object[] {
                        token,
                        photoGuid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhotoAsync(string token, string photoGuid) {
            this.GetPhotoAsync(token, photoGuid, null);
        }
        
        /// <remarks/>
        public void GetPhotoAsync(string token, string photoGuid, object userState) {
            if ((this.GetPhotoOperationCompleted == null)) {
                this.GetPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhotoOperationCompleted);
            }
            this.InvokeAsync("GetPhoto", new object[] {
                        token,
                        photoGuid}, this.GetPhotoOperationCompleted, userState);
        }
        
        private void OnGetPhotoOperationCompleted(object arg) {
            if ((this.GetPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhotoCompleted(this, new GetPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPhotoSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long QueryPhotoSize(string token, string photoGuid) {
            object[] results = this.Invoke("QueryPhotoSize", new object[] {
                        token,
                        photoGuid});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPhotoSizeAsync(string token, string photoGuid) {
            this.QueryPhotoSizeAsync(token, photoGuid, null);
        }
        
        /// <remarks/>
        public void QueryPhotoSizeAsync(string token, string photoGuid, object userState) {
            if ((this.QueryPhotoSizeOperationCompleted == null)) {
                this.QueryPhotoSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPhotoSizeOperationCompleted);
            }
            this.InvokeAsync("QueryPhotoSize", new object[] {
                        token,
                        photoGuid}, this.QueryPhotoSizeOperationCompleted, userState);
        }
        
        private void OnQueryPhotoSizeOperationCompleted(object arg) {
            if ((this.QueryPhotoSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPhotoSizeCompleted(this, new QueryPhotoSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPhotoSize2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long QueryPhotoSize2(string token, string classPath) {
            object[] results = this.Invoke("QueryPhotoSize2", new object[] {
                        token,
                        classPath});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPhotoSize2Async(string token, string classPath) {
            this.QueryPhotoSize2Async(token, classPath, null);
        }
        
        /// <remarks/>
        public void QueryPhotoSize2Async(string token, string classPath, object userState) {
            if ((this.QueryPhotoSize2OperationCompleted == null)) {
                this.QueryPhotoSize2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPhotoSize2OperationCompleted);
            }
            this.InvokeAsync("QueryPhotoSize2", new object[] {
                        token,
                        classPath}, this.QueryPhotoSize2OperationCompleted, userState);
        }
        
        private void OnQueryPhotoSize2OperationCompleted(object arg) {
            if ((this.QueryPhotoSize2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPhotoSize2Completed(this, new QueryPhotoSize2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddClass(string token, string parentClassGuid, string classGuid, string className) {
            this.Invoke("AddClass", new object[] {
                        token,
                        parentClassGuid,
                        classGuid,
                        className});
        }
        
        /// <remarks/>
        public void AddClassAsync(string token, string parentClassGuid, string classGuid, string className) {
            this.AddClassAsync(token, parentClassGuid, classGuid, className, null);
        }
        
        /// <remarks/>
        public void AddClassAsync(string token, string parentClassGuid, string classGuid, string className, object userState) {
            if ((this.AddClassOperationCompleted == null)) {
                this.AddClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClassOperationCompleted);
            }
            this.InvokeAsync("AddClass", new object[] {
                        token,
                        parentClassGuid,
                        classGuid,
                        className}, this.AddClassOperationCompleted, userState);
        }
        
        private void OnAddClassOperationCompleted(object arg) {
            if ((this.AddClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClassCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddClass2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddClass2(string token, string classPath) {
            object[] results = this.Invoke("AddClass2", new object[] {
                        token,
                        classPath});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddClass2Async(string token, string classPath) {
            this.AddClass2Async(token, classPath, null);
        }
        
        /// <remarks/>
        public void AddClass2Async(string token, string classPath, object userState) {
            if ((this.AddClass2OperationCompleted == null)) {
                this.AddClass2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClass2OperationCompleted);
            }
            this.InvokeAsync("AddClass2", new object[] {
                        token,
                        classPath}, this.AddClass2OperationCompleted, userState);
        }
        
        private void OnAddClass2OperationCompleted(object arg) {
            if ((this.AddClass2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClass2Completed(this, new AddClass2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAlbum(string token, string classGuid, string albumGuid, string albumTopic, string albumDesc) {
            this.Invoke("AddAlbum", new object[] {
                        token,
                        classGuid,
                        albumGuid,
                        albumTopic,
                        albumDesc});
        }
        
        /// <remarks/>
        public void AddAlbumAsync(string token, string classGuid, string albumGuid, string albumTopic, string albumDesc) {
            this.AddAlbumAsync(token, classGuid, albumGuid, albumTopic, albumDesc, null);
        }
        
        /// <remarks/>
        public void AddAlbumAsync(string token, string classGuid, string albumGuid, string albumTopic, string albumDesc, object userState) {
            if ((this.AddAlbumOperationCompleted == null)) {
                this.AddAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAlbumOperationCompleted);
            }
            this.InvokeAsync("AddAlbum", new object[] {
                        token,
                        classGuid,
                        albumGuid,
                        albumTopic,
                        albumDesc}, this.AddAlbumOperationCompleted, userState);
        }
        
        private void OnAddAlbumOperationCompleted(object arg) {
            if ((this.AddAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAlbumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAlbum2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddAlbum2(string token, string classPath, string albumTopic, string albumDesc) {
            object[] results = this.Invoke("AddAlbum2", new object[] {
                        token,
                        classPath,
                        albumTopic,
                        albumDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddAlbum2Async(string token, string classPath, string albumTopic, string albumDesc) {
            this.AddAlbum2Async(token, classPath, albumTopic, albumDesc, null);
        }
        
        /// <remarks/>
        public void AddAlbum2Async(string token, string classPath, string albumTopic, string albumDesc, object userState) {
            if ((this.AddAlbum2OperationCompleted == null)) {
                this.AddAlbum2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAlbum2OperationCompleted);
            }
            this.InvokeAsync("AddAlbum2", new object[] {
                        token,
                        classPath,
                        albumTopic,
                        albumDesc}, this.AddAlbum2OperationCompleted, userState);
        }
        
        private void OnAddAlbum2OperationCompleted(object arg) {
            if ((this.AddAlbum2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAlbum2Completed(this, new AddAlbum2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddPhoto(string token, string albumGuid, string photoGuid, string photoTopic, string photoDesc, string fileName, string contentType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content) {
            this.Invoke("AddPhoto", new object[] {
                        token,
                        albumGuid,
                        photoGuid,
                        photoTopic,
                        photoDesc,
                        fileName,
                        contentType,
                        content});
        }
        
        /// <remarks/>
        public void AddPhotoAsync(string token, string albumGuid, string photoGuid, string photoTopic, string photoDesc, string fileName, string contentType, byte[] content) {
            this.AddPhotoAsync(token, albumGuid, photoGuid, photoTopic, photoDesc, fileName, contentType, content, null);
        }
        
        /// <remarks/>
        public void AddPhotoAsync(string token, string albumGuid, string photoGuid, string photoTopic, string photoDesc, string fileName, string contentType, byte[] content, object userState) {
            if ((this.AddPhotoOperationCompleted == null)) {
                this.AddPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPhotoOperationCompleted);
            }
            this.InvokeAsync("AddPhoto", new object[] {
                        token,
                        albumGuid,
                        photoGuid,
                        photoTopic,
                        photoDesc,
                        fileName,
                        contentType,
                        content}, this.AddPhotoOperationCompleted, userState);
        }
        
        private void OnAddPhotoOperationCompleted(object arg) {
            if ((this.AddPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPhoto2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPhoto2(string token, string classPath, string albumTopic, string photoTopic, string photoDesc, string fileName, string contentType, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] content) {
            object[] results = this.Invoke("AddPhoto2", new object[] {
                        token,
                        classPath,
                        albumTopic,
                        photoTopic,
                        photoDesc,
                        fileName,
                        contentType,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddPhoto2Async(string token, string classPath, string albumTopic, string photoTopic, string photoDesc, string fileName, string contentType, byte[] content) {
            this.AddPhoto2Async(token, classPath, albumTopic, photoTopic, photoDesc, fileName, contentType, content, null);
        }
        
        /// <remarks/>
        public void AddPhoto2Async(string token, string classPath, string albumTopic, string photoTopic, string photoDesc, string fileName, string contentType, byte[] content, object userState) {
            if ((this.AddPhoto2OperationCompleted == null)) {
                this.AddPhoto2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPhoto2OperationCompleted);
            }
            this.InvokeAsync("AddPhoto2", new object[] {
                        token,
                        classPath,
                        albumTopic,
                        photoTopic,
                        photoDesc,
                        fileName,
                        contentType,
                        content}, this.AddPhoto2OperationCompleted, userState);
        }
        
        private void OnAddPhoto2OperationCompleted(object arg) {
            if ((this.AddPhoto2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPhoto2Completed(this, new AddPhoto2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePhotoDesc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePhotoDesc(string token, string photoGuid, string photoDesc) {
            this.Invoke("UpdatePhotoDesc", new object[] {
                        token,
                        photoGuid,
                        photoDesc});
        }
        
        /// <remarks/>
        public void UpdatePhotoDescAsync(string token, string photoGuid, string photoDesc) {
            this.UpdatePhotoDescAsync(token, photoGuid, photoDesc, null);
        }
        
        /// <remarks/>
        public void UpdatePhotoDescAsync(string token, string photoGuid, string photoDesc, object userState) {
            if ((this.UpdatePhotoDescOperationCompleted == null)) {
                this.UpdatePhotoDescOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhotoDescOperationCompleted);
            }
            this.InvokeAsync("UpdatePhotoDesc", new object[] {
                        token,
                        photoGuid,
                        photoDesc}, this.UpdatePhotoDescOperationCompleted, userState);
        }
        
        private void OnUpdatePhotoDescOperationCompleted(object arg) {
            if ((this.UpdatePhotoDescCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhotoDescCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MovePhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MovePhoto(string token, string sourcePhotoGuid, string targetClassPath, string targetAlbumTopic, string targetPhotoTopic, string targetPhotoDesc) {
            this.Invoke("MovePhoto", new object[] {
                        token,
                        sourcePhotoGuid,
                        targetClassPath,
                        targetAlbumTopic,
                        targetPhotoTopic,
                        targetPhotoDesc});
        }
        
        /// <remarks/>
        public void MovePhotoAsync(string token, string sourcePhotoGuid, string targetClassPath, string targetAlbumTopic, string targetPhotoTopic, string targetPhotoDesc) {
            this.MovePhotoAsync(token, sourcePhotoGuid, targetClassPath, targetAlbumTopic, targetPhotoTopic, targetPhotoDesc, null);
        }
        
        /// <remarks/>
        public void MovePhotoAsync(string token, string sourcePhotoGuid, string targetClassPath, string targetAlbumTopic, string targetPhotoTopic, string targetPhotoDesc, object userState) {
            if ((this.MovePhotoOperationCompleted == null)) {
                this.MovePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovePhotoOperationCompleted);
            }
            this.InvokeAsync("MovePhoto", new object[] {
                        token,
                        sourcePhotoGuid,
                        targetClassPath,
                        targetAlbumTopic,
                        targetPhotoTopic,
                        targetPhotoDesc}, this.MovePhotoOperationCompleted, userState);
        }
        
        private void OnMovePhotoOperationCompleted(object arg) {
            if ((this.MovePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePhoto(string token, string photoGuid) {
            this.Invoke("DeletePhoto", new object[] {
                        token,
                        photoGuid});
        }
        
        /// <remarks/>
        public void DeletePhotoAsync(string token, string photoGuid) {
            this.DeletePhotoAsync(token, photoGuid, null);
        }
        
        /// <remarks/>
        public void DeletePhotoAsync(string token, string photoGuid, object userState) {
            if ((this.DeletePhotoOperationCompleted == null)) {
                this.DeletePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePhotoOperationCompleted);
            }
            this.InvokeAsync("DeletePhoto", new object[] {
                        token,
                        photoGuid}, this.DeletePhotoOperationCompleted, userState);
        }
        
        private void OnDeletePhotoOperationCompleted(object arg) {
            if ((this.DeletePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryClassListCompletedEventHandler(object sender, QueryClassListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryClassListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryClassListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryAlbumListCompletedEventHandler(object sender, QueryAlbumListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAlbumListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAlbumListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryPhotoListCompletedEventHandler(object sender, QueryPhotoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPhotoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPhotoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetPhotoCompletedEventHandler(object sender, GetPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryPhotoSizeCompletedEventHandler(object sender, QueryPhotoSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPhotoSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPhotoSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryPhotoSize2CompletedEventHandler(object sender, QueryPhotoSize2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPhotoSize2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPhotoSize2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddClassCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddClass2CompletedEventHandler(object sender, AddClass2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClass2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClass2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddAlbumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddAlbum2CompletedEventHandler(object sender, AddAlbum2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAlbum2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAlbum2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddPhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddPhoto2CompletedEventHandler(object sender, AddPhoto2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPhoto2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPhoto2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdatePhotoDescCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void MovePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void DeletePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591