<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GrapeCity.Documents.Pdf</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm">
            <summary>
            Defines properties of AcroForm within PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.SigFlags">
            <summary>
            A set of flags specifying various document-level characteristics related to signature fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.DefaultResources">
            <summary>
            Default resources specified in DR entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.AcroForm.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.AcroForm.Fields">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/> collection containing document fields.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm.DefaultResourceDictionary">
            <summary>
            Represents default resources "DR" entry in acroforms dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.SigFlagsConstants.SignaturesExist">
            <summary>
            If set, the document contains at least one signature field.
            This flag allows a viewer application to enable user interface items (such as menu items or pushbuttons)
            related to signature processing without having to scan the entire document for the presence of
            signature fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.SigFlagsConstants.AppendOnly">
            <summary>
            If set, the document contains signatures that may be invalidated if the file is saved (written)
            in a way that alters its previous contents, as opposed to an incremental update.
            Merely updating the file by appending new information to the end of the previous version
            is safe (see Section G.6, “Updating Example”).
            Viewer applications can use this flag to present a user requesting a full save with an additional
            alert box warning that signatures will be invalidated and requiring explicit confirmation before
            continuing with the operation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField">
            <summary>
            Represents CheckBox AcroForm field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultValue">
            <summary>
            Gets or sets the default value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem">
            <summary>
            Represents an item displayed in <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
            <param name="text">The item's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
            <param name="text">The item's text.</param>
            <param name="value">The item's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Text">
            <summary>
            Gets or sets the text used to display an item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Value">
            <summary>
            Gets or sets the value of item, if not specified then <see cref="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Text"/> will be used as value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField">
            <summary>
            Base class for choice fields: ComboBox and ListBox.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Items">
            <summary>
            Gets the list of items displayed in field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.SelectedIndex">
            <summary>
            Gets or sets the index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.DefaultSelectedIndex">
            <summary>
            Gets or sets the index of item selected by default.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Sort">
            <summary>
            Gets or sets a value indicating whether the field’s option items should be sorted alphabetically.
            This flag is intended for use by form authoring tools, not by PDF viewer applications.
            Viewers should simply display the options in the order in which they occur in the Opt array
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether the text entered in the field is spell-checked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.CommitOnSelChange">
            <summary>
            Gets or sets a value indicating whether the new value is committed as soon as a selection is made
            with the pointing device.
            This option enables applications to perform an action once a selection is made,
            without requiring the user to exit the field.
            If false, the new value is not committed until the user exits the field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField">
            <summary>
            Represents the ComboBox field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            value is specified as index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.DefaultValue">
            <summary>
            Gets or sets the default value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            value is specified as index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether the combo box includes an editable text box as well as a drop-down list.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.CombTextField">
            <summary>
            Represents the text field divided into as many equally spaced positions, or combs, as the value of MaxLen,
            and the text is laid out into those combs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CombTextField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CombTextField"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner">
            <summary>
            Should be implemented by the class owning <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> containing this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.FindByName(System.String)">
            <summary>
            Searches <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> with specified name, search is case sensitive.
            </summary>
            <param name="fieldName">The field's name.</param>
            <returns>Returns found <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> or null if not found.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> with specified name, throws an exception if field not found.
            </summary>
            <param name="fieldName">The field's name.</param>
            <returns>Returns the field with specified name.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.HasSignatures">
            <summary>
            Gets a value indicating whether collection contains Signature fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.AcroForm">
            <summary>
            Gets the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Field">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldType">
            <summary>
            Defines possible field types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Btn">
            <summary>
            Button field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Tx">
            <summary>
            Text field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Ch">
            <summary>
            Choice field, ComboBox or ListBox.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Sig">
            <summary>
            Signature field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldWidgetCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> objects owned by <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldWidgetCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldFlags">
            <summary>
            Defines possible values of the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field.
            Any associated widget annotations will not interact with the user;
            that is, they will not respond to mouse clicks or change their appearance in response to mouse motions.
            This flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.NoToggleToOff">
            <summary>
            (Radio buttons only) If set, exactly one radio button must be selected at all times;
            clicking the currently selected button has no effect.
            If clear, clicking the selected button deselects it, leaving no button selected.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Radio">
            <summary>
            If set, the field is a set of radio buttons; if clear, the field is a check box.
            This flag is meaningful only if the Pushbutton flag is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Pushbutton">
            <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.RadiosInUnison">
            <summary>
            (PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value
            for the on state will turn on and off in unison; that is if one is checked, they are all checked.
            If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Multiline">
            <summary>
            If set, the field can contain multiple lines of text; if clear, the field’s text is restricted to a single line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen.
            Characters typed from the keyboard should instead be echoed in some unreadable form,
            such as asterisks or bullet characters.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.FileSelect">
            <summary>
            If set, the text entered in the field represents the pathname of a file whose contents
            are to be submitted as the value of the field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.DoNotSpellCheck">
            <summary>
            If set, text entered in the field is not spell-checked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.DoNotScroll">
            <summary>
            If set, the field does not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text than fits within its annotation rectangle.
            Once the field is full, no further text is accepted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Comb">
            <summary>
            Meaningful only if the MaxLen entry is present in the text field dictionary and if the
            Multiline, Password, and FileSelect flags are clear.
            If set, the field is automatically divided into as many equally spaced positions, or combs,
            as the value of MaxLen, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.RichText">
            <summary>
            If set, the value of this field should be represented as a rich text string.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Combo">
            <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a drop-down list;
            if clear, it includes only a drop-down list. This flag is meaningful only if the <see cref="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Combo"/> flag is set.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Sort">
            <summary>
            If set, the field’s option items should be sorted alphabetically.
            This flag is intended for use by form authoring tools, not by PDF viewer applications.
            Viewers should simply display the options in the order in which they occur in the Opt array.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.MultiSelect">
            <summary>
            If set, more than one of the field’s option items may be selected simultaneously;
            if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.CommitOnSelChange">
            <summary>
            If set, the new value is committed as soon as a selection is made with the pointing device.
            This option enables applications to perform an action once a selection is made,
            without requiring the user to exit the field. If clear,
            the new value is not committed until the user exits the field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field">
            <summary>
            Defines AcroForm field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetSingleAnnotation">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> object from <see cref="F:GrapeCity.Documents.Pdf.AcroForms.Field._widgets"/> collection
            which has same DocID as this Field, returns null if there are not one such annotations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.OnRemove">
            <summary>
            Called when field removed from document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetFlag(GrapeCity.Documents.Pdf.AcroForms.FieldFlags)">
            <summary>
            For internal use.
            Returns a value indicating whether the specified flag in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> is set.
            </summary>
            <param name="flag"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetFlag(GrapeCity.Documents.Pdf.AcroForms.FieldFlags,System.Boolean)">
            <summary>
            For internal use.
            Sets specified flag in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> to specified value.
            </summary>
            <param name="flag"></param>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetValue(System.Object)">
            <summary>
            Sets the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Value"/> without resetting appearance of linked annotations.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetValueProp(System.Object)">
            <summary>
            Called from setter of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Value"/> property.
            Can be overridden by default class if required.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetDefValue">
            <summary>
            Returns default field value used to initialize <see cref="F:GrapeCity.Documents.Pdf.AcroForms.Field.m_Value"/> and <see cref="F:GrapeCity.Documents.Pdf.AcroForms.Field.m_DefaultValue"/>. 
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.ParseValues(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Reads "V" and "DV" entries.
            Default implementation uses <see cref="M:GrapeCity.Documents.Pdf.AcroForms.Field.ParseValue(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetMixedAnnotation">
            <summary>
            Returns a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> object which should be mixed with this Field in a single PDF dictionary object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Type">
            <summary>
            Gets or sets type of the field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags">
            <summary>
            Gets or sets the field's flags, change this property carefully.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.UserData">
            <summary>
            Gets or sets arbitrary data associated with the current field.
            <para>Note that this data is runtime only and is not persisted in the PDF.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the field’s text.
            <para>Note that this field is used only if <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification"/> is not specified.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.ActualJustification">
            <summary>
            Gets the actual justification to be used when displaying the field’s text.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Children">
            <summary>
            Gets the list of child fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Parent">
            <summary>
            Gets the parent field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.AcroForm">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/> containing this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets">
            <summary>
            Gets the list of widgets linked with this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Name">
            <summary>
            Gets or sets the field's name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.AlternateName">
            <summary>
            Gets or sets an alternate field name to be used in place of the actual field name wherever
            the field must be identified in the user interface (such as in error or status messages referring to the field).
            This text is also useful when extracting the document’s contents in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form field data from the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Events">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents"/> object defining events of this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Value">
            <summary>
            Gets or sets the field's value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.DefaultValue">
            <summary>
            Gets or sets the default field's value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the user may not change the value of the field.
            Any associated widget annotations will not interact with the user; that is,
            they will not respond to mouse clicks or change their appearance in response to mouse motions.
            This flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Required">
            <summary>
            Gets or sets a value indicating whether the field must have a value at the time it is
            exported by a <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Export">
            <summary>
            Gets or sets a value indicating whether the field must not be exported by a <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.CalculationIndex">
            <summary>
            Gets or sets an index that is used to determine the field's calculation order.
            Fields with lower indices are calculated before fields with higher indices.
            <para>
            If several fields have the same CalculationIndex, the calculation order is determined
            by the order of fields in the collection.
            </para>
            <para>
            <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.RecalculateValue"/> can be used to specify JavaScript that is used to calculate the field's value.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.HasGcProps">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.GcProps"/> is not empty
            (i.e. whether this filed has any associated custom properties).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.GcProps">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> object that can be used to associate
            arbitrary data with this field.
            <para>
            Note that for text values, in most cases the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> type should be used
            rather than <see cref="T:System.String"/>.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents">
            <summary>
            Defines events common for acroform fields with value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.OnActionChanged(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.KeyPress">
            <summary>
            Gets or sets a JavaScript action to be performed when the user types a keystroke into a
            text field or combo box or modifies the selection in a scrollable list box.
            This action can check the keystroke for validity and reject or modify it.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.FormatValue">
            <summary>
            Gets or sets a JavaScript action to be performed before the field is formatted to display its current value.
            This action can modify the field’s value before formatting.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.ValueChanged">
            <summary>
            Gets or sets a JavaScript action to be performed when the field’s value is changed.
            This action can check the new value for validity.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.RecalculateValue">
            <summary>
            Gets or sets a JavaScript action to be performed to recalculate the value of this field when
            that of another field changes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxWriter.AnalyzeWidgets(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation@,System.String@,System.Action{GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation},System.Action{GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String})">
            <summary>
            Analyze field's widgets
            <paramref name="baseWidget"/> and <paramref name="onState"/> contains
            WidgetAnnotation and its onState which will be used for whole field, i.e. for all other annotations.
            
            widgetWithInvalidAppearance called for each widget which appearance should be rebuild
            widgetWithValidAppearance called for each widget with VALID appearance which can be reused
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.BuildDefaultAnnotationAppearance(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Builds default appearance for specified widget.
            </summary>
            <param name="field"></param>
            <param name="wa"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.GetAnnotationRenderFromXObject(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Builds default appearance for specified widget.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.DrawAnnotation(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Draws field's annotation on specified graphics.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonWriter.AnalyzeWidgets(GrapeCity.Documents.Pdf.AcroForms.Field,System.Action{GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation},System.Action{GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation})">
            <summary>
            Analyze field's widgets
            
            widgetWithInvalidAppearance called for each widget which appearance should be rebuild
            widgetWithValidAppearance called for each widget with VALID appearance which can be reused
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ListBoxField">
            <summary>
            Represents the ListBoxField field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ListBoxField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.TopIndex">
            <summary>
            Gets or sets the index of top visible item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.SelectedIndexes">
            <summary>
            Gets or sets the indexes of selected items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.DefaultSelectedIndexes">
            <summary>
            Gets or sets the indexes of default selected items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether more than one of the field’s option items may be selected simultaneously.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField">
            <summary>
            Represents push button AcroForm field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.PushButtonField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.PushButtonField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the button.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField">
            <summary>
            Represents group of radio buttons.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.AddItem(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.CheckStyle,GrapeCity.Documents.Pdf.Annotations.BorderStyle)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> and adds it to the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> collection.
            </summary>
            <param name="page">The page on which the new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> will be placed.</param>
            <param name="bounds">The bounds of the new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> on <paramref name="page"/>.</param>
            <param name="checkStyle">The check mark style.</param>
            <param name="borderStyle">The border style.</param>
            <returns>Returns the created <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> object.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt">
            <summary>
            Gets or sets an array of strings containing one entry for each widget annotation.
            Defines export values for its constituent radio buttons
            Please read more details in PDF specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            Value can be specified as index of the widget in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> list,
            as string containing name of the widget.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.DefaultValue">
            <summary>
            Gets or sets the default value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            Default value can be specified as index of the widget in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> list,
            as string containing name of the widget.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.RadiosInUnison">
            <summary>
            Gets or sets a value indicating whether a group of radio buttons within a radio button field
            that use the same value for the on state will turn on and off in unison;
            that is if one is checked, they are all checked.
            If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.All">
            <summary>
            All fields should be processed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.SpecifiedOnly">
            <summary>
            Fields which names are specified in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames"/> are processed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.AllButSpecified">
            <summary>
            Fields which names are NOT specified in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames"/> are submitted.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields">
            <summary>
            Defines range of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> objects to be locked when <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/> is signed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.#ctor(GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> class.
            </summary>
            <param name="type">The type of range.</param>
            <param name="fieldNames">The list of fields' names to include / exclude.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.EnumerateFields(GrapeCity.Documents.Pdf.AcroForms.FieldCollection,GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.EnumerateFieldDelegate)">
            <summary>
            Enumerates fields processed by this object.
            </summary>
            <param name="fieldCollection"></param>
            <param name="method"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type">
            <summary>
            Gets or sets the type of the range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames">
            <summary>
            Gets the list of fields' names which should be included / excluded from processing depending on <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type"/> property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField">
            <summary>
            Represents the signature field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.LockedFields">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> object defining
            a set of form fields to be locked when this signature field is signed,
            if null then no fields are locked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Value">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object that defines this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/>.
            <para>Setting this property to null removes the signature from the document.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.TextField">
            <summary>
            Represents the text field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichTextValue">
            <summary>
            Gets or sets the rich text to be displayed in the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            This text can be formatted using html tags, see PDF specification for details.
            <para>Note that GcPdf does not automatically regenerates appearance streams for text fields containg RTF text.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.DefaultStyleString">
            <summary>
            Gets or sets the default style string used when the field value is specified using <see cref="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichTextValue"/>.
            See PDF specification for details.
            <para>Note that GcPdf does not automatically regenerates appearance streams for text fields containg RTF text.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.DefaultValue">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            applied when the field is reset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.MaxLen">
            <summary>
            Gets or sets the maximum length of the field’s text, in characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Multiline">
            <summary>
            Gets or sets a value indicating whether the field can contain multiple lines of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Password">
            <summary>
            Gets or sets a value indicating whether the field is intended for entering a secure password that
            should not be echoed visibly to the screen.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether the text entered in the field is spell-checked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Scrollable">
            <summary>
            Gets or sets a value indicating whether the field is scrollable to accommodate more text than
            fits within its annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichText">
            <summary>
            Gets or sets a value indicating whether the value of this field should be represented as a rich text string.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.IAction">
            <summary>
            Defines a common interface for <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> and <see cref="T:GrapeCity.Documents.Pdf.Destination"/>
            that allows using both in the same way.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionBase">
            <summary>
            Base class for PDF actions which can be performed when user clicks links, document outlines etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionBase.Indirect">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> serialized as DIRECT by default.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionBase.ReferencedObjectsAreMerged(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Returns a value indicating whether ALL objects referenced by this <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/>
            will be merged during merge operation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionBase.Next">
            <summary>
            Gets or sets the next <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> or sequence of actions to be performed after this action.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo">
            <summary>
            Defines a go-to action changes the view to a specified destination (page, location, and magnification factor),
            defined by the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoTo.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoTo.#ctor(GrapeCity.Documents.Pdf.DestinationBase)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/> class.
            </summary>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoTo.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR">
            <summary>
            Defines a remote go-to action is similar to an ordinary go-to action <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/>
            but jumps to a destination in another PDF file instead of the current file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor(System.String,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
            <param name="fileName">The name of another file.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
            <param name="newWindow">A flag specifying whether to open the destination document in a new window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor(GrapeCity.Documents.Pdf.FileSpecification,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
            <param name="file">The <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining another file.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
            <param name="newWindow">A flag specifying whether to open the destination document in a new window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining the another file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.Dest">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.NewWindow">
            <summary>
            Gets a value indicating whether to open the destination document in a new window.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch">
            <summary>
            Defines a launch action launches an application or opens or prints a document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining application to be launched
            or the document to be opened or printed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.Win">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs"/> object defining windows-specific parameters of the launch action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.NewWindow">
            <summary>
            Gets or sets a value indicating whether to open the destination document in a new window.
            This property is ignored if this action is not a PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs">
            <summary>
            Defines windows-specific launch parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.FileName">
            <summary>
            Gets or sets the file name of the application to be launched or the document to be opened or printed,
            in standard Windows pathname format.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Directory">
            <summary>
            Gets or sets the directory in standard DOS syntax.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Operation">
            <summary>
            Gets or sets the operation to perform.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Parameter">
            <summary>
            Gets or sets the parameter to be passed to the application.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType">
            <summary>
            Defines possible operations for windows platform.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType.Open">
            <summary>
            Open a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType.Print">
            <summary>
            Print a document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionHide">
            <summary>
            Represents a hide action, hides or shows one or more <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s on
            screen by setting or clearing their Hidden flag.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionHide.LinkedObjects">
            <summary>
            Gets or sets an array of objects which are linked with this <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionHide"/>.
            It can be an <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object or a string defining the fully qualified field name of an
            interactive form field whose associated widget annotation or annotations are to be affected.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionHide.Hide">
            <summary>
            Gets or sets a flag indicating whether to hide the annotation (if property is true) or show it.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionURI">
            <summary>
            Defines an URI action causes navigation to specified URI.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionURI.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionURI"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionURI.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionURI"/> class,
            specifying the URI to navigate to.
            <para>
            Note that if the <paramref name="uri"/> includes non-ASCII characters, it should be encoded
            as a URL, using methods such as System.Web.HttpUtility.UrlPathEncode or similar.
            </para>
            </summary>
            <param name="uri">The URI to navigate to.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionURI.URI">
            <summary>
            Gets or sets the URI to navigate.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionURI.IsMap">
            <summary>
            Gets or sets a value indicating whether to track the mouse position when the URI is resolved.
            </summary>
            <remarks>
            This property applies only to actions triggered by the user’s clicking an annotation;
            it is ignored for actions associated with <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> or with a <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OpenAction"/>
            property.
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript">
            <summary>
            Defines an action causes a script to be compiled and executed by the JavaScript interpreter.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript"/> class.
            </summary>
            <param name="javaScript">The JavaScript to execute.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.JavaScript">
            <summary>
            Gets or sets the JavaScript to execute.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> and <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionResetForm"/>,
            which operates over set of specified fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.FieldNames">
            <summary>
            Gets the list of names of fields that should be processed 
            (or excluded from processing, see <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields"/>) by this action.
            If empty then all fields will be processed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields">
            <summary>
            Gets or sets a value indicating whether to exclude the fields specified in <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.FieldNames"/>
            from processing (by default, this property is false and the specified fields are included).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm">
            <summary>
            Defines an action transmits the names and values of selected interactive form fields to a specified
            uniform resource locator (URL), presumably the address of a Web server that will process them and send back a response.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/>.
            </summary>
            <param name="uri">The URL of the script at the Web server that will process the submission.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.URI">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining URL of the script at the Web server that will process the submission.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.IncludeFieldsWithNoValue">
            <summary>
            Gets or sets a value indicating whether the fields without a value should be included in request.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.FieldNames"/>
            <seealso cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.CanonicalDateFormat">
            <summary>
            Gets or sets a value indicating whether any submitted field values representing dates are converted to
            the standard format described in PDF specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat">
            <summary>
            Gets or sets the format which should be used in request.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.HtmlForm"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.FDF"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.PDF"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.HtmlForm">
            <summary>
            Field names and values are submitted in HTML Form format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.FDF">
            <summary>
            Field names and values are submitted in Forms Data Format (FDF).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.XFDF">
            <summary>
            Field names and values are submitted as XFDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.PDF">
            <summary>
            Document is submitted as PDF, using the MIME content type "application/pdf".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags.GetMethod">
            <summary>
            Indicates whether field names and values are submitted using an HTTP GET request,
            otherwise they are submitted using a POST request.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags.SubmitCoordinates">
            <summary>
            Indicates whether the coordinates of the mouse click that caused the submit-form
            action are transmitted as part of the form data.
            </summary>
            <remarks>
            The coordinate values are relative to the upper-left corner of the field’s rectangle.
            They are represented in the data in the format
            name.x = xval &amp; name.y = yval
            where name is the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName"/> if present; otherwise, name is the field name.
            If the value of the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName"/> is a single space character,
            both the name and the dot following it are suppressed, resulting in the format
            x = xval &amp; y = yval
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAppendSaves">
            <summary>
            If set, the submitted FDF file includes the contents of all incremental updates to the underlying PDF document,
            as contained in the Differences entry in the FDF dictionary.
            If clear, the incremental updates are not included.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAnnotations">
            <summary>
            If set, the submitted FDF file includes all markup annotations in the underlying PDF document.
            If clear, markup annotations are not included.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.ExclNonUserAnnots">
            <summary>
            Meaningful only when the <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAnnotations"/> flag is set.
            If set, it includes only those markup annotations whose <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName"/> matches the name of the current user,
            as determined by the remote server to which the form is being submitted.
            This allows multiple users to collaborate in annotating a single remote PDF document
            without affecting one another’s annotations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.ExclFKey">
            <summary>
            If set, the submitted FDF excludes the F entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.EmbedForm">
            <summary>
            If set, the F entry of the submitted FDF is a file specification containing an embedded file stream
            representing the PDF file from which the FDF is being submitted.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormatFlags.GetMethod">
            <summary>
            Indicates whether the PDF document submitted using an HTTP GET request,
            otherwise it is submitted using a POST request.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionResetForm">
            <summary>
            Defines an action resets selected interactive form fields to their default values;
            If no default value is defined for a field, its value is cleared.
            For fields that can have no value (such as <see cref="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField"/>), the action has no effect.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionImportData">
            <summary>
            Defines an action imports Forms Data Format (FDF) data into the document’s interactive form from a specified file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionImportData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionImportData"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionImportData.#ctor(GrapeCity.Documents.Pdf.FileSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionImportData"/>.
            </summary>
            <param name="file">The <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining FDF file from which to import data.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionImportData.File">
            <summary>
            Gets or sets the FDF file from which to import the data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionNamed">
            <summary>
            Defines an action performs some viewer application action: Go to next / previous page, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.NextPage">
            <summary>
            Go to the next page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.PrevPage">
            <summary>
            Go to the previous page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.FirstPage">
            <summary>
            Go to the first page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.LastPage">
            <summary>
            Go to the last page of the document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionNamed.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionNamed"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionNamed.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionNamed"/>.
            </summary>
            <param name="name">The name of the action.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionNamed.Indirect">
            <summary>
            ActionNamed serialized as indirect object if it was just created, it was done to fix a problem
            in Mozilla Firefox, see: https://jira.grapecity.io/browse/DOC-1634
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionNamed.Name">
            <summary>
            Gets or sets the name of action.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.HighlightingMode">
            <summary>
            Specifies the possible highlighting modes for various annotations, <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.None">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Invert">
            <summary>
            Invert the contents of the annotation rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Outline">
            <summary>
            Invert the annotation’s border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Push">
            <summary>
            Display the annotation as if it were being pushed below the surface of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> objects owned by the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection">
            <summary>
            Defines collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects referenced from <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.RemoveAllExcept(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Removes all items from this collection except <paramref name="item"/>.
            </summary>
            <param name="item">The item what should not be removed.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags">
            <summary>
            Specifies the various characteristics of an <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.None">
            <summary>
            Empty.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Invisible">
            <summary>
            Do not display the annotation if it does not belong to one of the standard annotation types and no annotation handler
            is available. If clear, display such an unknown annotation using an appearance stream specified by its
            appearance dictionary, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Hidden">
            <summary>
            Do not display or print the annotation or allow it to interact with the user,
            regardless of its annotation type or whether an annotation handler is available.
            In cases where screen space is limited, the ability to hide and show annotations selectively
            can be used in combination with appearance streams to display auxiliary pop-up information similar
            in function to online help systems.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Print">
            <summary>
            Print the annotation when the page is printed.
            If clear, never print the annotation, regardless of whether it is displayed on the screen.
            This can be useful, for example, for annotations representing interactive pushbuttons,
            which would serve no meaningful purpose on the printed page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoZoom">
            <summary>
            Do not scale the annotation’s appearance to match the magnification of the page.
            The location of the annotation on the page (defined by the upper-left corner of its annotation rectangle) remains fixed,
            regardless of the page magnification.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoRotate">
            <summary>
            Do not rotate the annotation’s appearance to match the rotation of the page.
            The upper-left corner of the annotation rectangle remains in a fixed location on the page,
            regardless of the page rotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoView">
            <summary>
            Do not display the annotation on the screen or allow it to interact with the user.
            The annotation may be printed (depending on the setting of the Print flag) but should be considered hidden
            for purposes of on-screen display and user interaction.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.ReadOnly">
            <summary>
            Do not allow the annotation to interact with the user.
            The annotation may be displayed or printed (depending on the settings of the NoView and Print flags)
            but should not respond to mouse clicks or change its appearance in response to mouse motions.
            This flag is ignored for widget annotations; its function is subsumed by the ReadOnly flag of the associated form field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Locked">
            <summary>
            Do not allow the annotation to be deleted or its properties (including position and size) to be modified by the user.
            However, this flag does not restrict changes to the annotation’s contents, such as the value of a form field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.ToggleNoView">
            <summary>
            Invert the interpretation of the NoView flag for certain events.
            A typical use is to have an annotation that appears only when a mouse cursor is held over it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.LockedContents">
            <summary>
            Do not allow the contents of the annotation to be modified by the user.
            This flag does not restrict deletion of the annotation or changes to other annotation properties,
            such as position and size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle">
            <summary>
            Specifies the possible line ending styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.None">
            <summary>
            No line ending.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Square">
            <summary>
            A square filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Circle">
            <summary>
            A circle filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Diamond">
            <summary>
            A diamond shape filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.OpenArrow">
            <summary>
            Two short lines meeting in an acute angle to form an open arrowhead.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.ClosedArrow">
            <summary>
            Two short lines meeting in an acute angle as in the OpenArrow style and connected by a third line to form
            a triangular closed arrowhead filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Butt">
            <summary>
            A short line at the endpoint perpendicular to the line itself.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.ROpenArrow">
            <summary>
            Two short lines in the reverse direction from OpenArrow.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.RClosedArrow">
            <summary>
            A triangular closed arrowhead in the reverse direction from ClosedArrow.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Slash">
            <summary>
            A short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase">
            <summary>
            The abstract base class for all PDF annotation types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.mi_UnknownProps">
            <summary>
            Contains unsupported properties of annotation dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.m_AutoBuildAppearance">
            <summary>
            Indicates whether appearance properties (appearance streams, default appearance string etc) should be auto generated
            for this annotation when document saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.UseColorAsBorderColor">
            <summary>
            Gets a value indicating whether to use <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Color"/> property to store <see cref="P:GrapeCity.Documents.Pdf.Annotations.Border.Color"/>.
            True by default, can be overridden in descendant class, <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> overrides it for example.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Color">
            <summary>
            Gets or sets the annotation's color, used for the following purposes:
            <list type="bullet">
            <item>The background of the annotation’s icon when closed.</item>
            <item>The title bar of the annotation’s pop-up window.</item>
            <item>The border of a link annotation.</item>
            </list>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Border">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Border"/> object defining annotation's border.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Opacity">
            <summary>
            Gets or sets the opacity value to be used in painting the annotation.
            This value applies to all visible elements of the annotation in its closed state
            (including its background and border) but not to the pop-up window that appears when the annotation is opened.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.UpdateCoords">
            <summary>
            Called after reading annotation from PDF stream when it
            added to the page, used to update its coordinates so they become relative
            to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.WriteDictProps(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes dictionary properties common for all annotation, specified on the
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> level.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetOnState">
            <summary>
            Gets the name of the appearance state that is used to show
            RadioButtonField or CheckBoxField in the checked state.
            </summary>
            <returns>The name of the checked appearance state.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.BuildAppearance">
            <summary>
            Builds widgets appearance streams and other appearance properties.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.OnPropertyAffectingAppearanceChanged">
            <summary>
            Called when property affecting annotation's appearance was changed.
            This method sets <see cref="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.m_AutoBuildAppearance"/> to true, so annotation's appearance
            properties will be automatically regenerated when document saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.OnAppearancePropertyChanged">
            <summary>
            Called when property defining annotation's appearance was changed.
            This method sets <see cref="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.m_AutoBuildAppearance"/> to false so annotation's appearance
            properties will NOT automatically regenerated.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.DrawOverPageContent">
            <summary>
            Gets a value indicating whether the annotation should be drawn over page content,
            some annotations like <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> with 
            <see cref="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.MarkupType"/> == <see cref="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Highlight"/>
            should be rendered before page content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.CreateAppearanceContentStream">
            <summary>
            Creates an instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> that can be used
            to define the annotation's appearance stream.
            <para>
            Note that when this method is called, the annotation must already 
            have been added to the document, otherwise an exception will be thrown.
            </para>
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ResetAppearance">
            <summary>
            Forces regeneration of the annotation's appearance streams
            next time the document is saved.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rotate">
            <summary>
            For internal use only.
            <para>
            Gets or sets the annotation rotation angle in degrees.
            </para>
            <para>
            Note 1: This angle does NOT affect the area occupied by the annotation area on a page,
            it only affects the image inside the annotation bounds.
            </para>
            <para>
            Note 2: This property is not documented in the PDF specification, 
            but it has been experimentally found that this property is used by Acrobat
            for some kinds of annotations, currently it works for <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/>.
            </para>
            <para>
            Note 3: The <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> has a similar property
            Orientation that can have values 0, 90, 180 or 270, and is stored
            as a property in the MK sub-dictionary.
            The <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rotate"/> property does not affect <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Layer">
            <summary>
            Gets or sets an object that specifies the layer to which this annotation belongs.
            <para>
            This can be either an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ModifiedDate">
            <summary>
            Gets or sets the date and time when the annotation was modified.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.UserData">
            <summary>
            Gets or sets arbitrary data associated with the current annotation.
            <para>Note that this data is runtime only and is not persisted in the PDF.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Contents">
            <summary>
            Gets or sets the text to be displayed for the annotation or,
            if this type of annotation does not display text,
            an alternate description of the annotation’s contents in human-readable form.
            In either case, this text is useful when extracting the document’s contents in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect">
            <summary>
            Gets or sets the annotation rectangle, defining the location of the annotation on a page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Flags">
            <summary>
            Gets or sets the flags specifying various characteristics of the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Pages">
            <summary>
            Gets the list of pages that reference this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> that contains this annotation.
            <para>
            Note that an annotation may be referenced by several pages.
            In that case this property returns the first element in the 
            <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Pages"/> collection.
            </para>
            <para>
            When setting this property, the following applies:
            <list type="bullet">
            <item>If the new value is null, this annotation is removed from all pages.</item>
            <item>Otherwise, this annotation is assigned exclusively to the specified page.</item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Name">
            <summary>
            Gets or sets the annotation name, a text string uniquely identifying it among all annotations on its page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceStreams">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams"/> object that allows defining this annotation's appearance streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceState">
            <summary>
            Gets or sets the annotation’s appearance state, which selects the applicable appearance stream
            from an appearance sub-dictionary.
            Note! If you change this property then GcPdf will NOT automatically generates appearance
            content streams in <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceStreams"/>.
            See PDF specification for more details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Locked">
            <summary>
            Gets or sets a value indicating whether the annotation can be deleted or its properties (including position and size) can be modified by the user.
            However, this flag does not restrict changes to the annotation’s contents, such as the value of a form field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.LockedContents">
            <summary>
            Gets or sets a value indicating whether the contents of the annotation can be modified by the user.
            This flag does not restrict deletion of the annotation or changes to other annotation properties,
            such as position and size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.Appearance">
            <summary>
            Represents the appearance of an annotation in normal, rollover and down states.
            <para>
            In the simplest case the appearance can be defined by a single <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> 
            specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Default"/> property.
            </para>
            <para>
            In more complex cases it can be defined as a subdictionary
            specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Item(System.String)"/> property.
            For example, an annotation representing an interactive check box might have two appearance states named On and Off.
            </para>
            <para>See PDF specification for details.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.Clear">
            <summary>
            Clears all defined appearances.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.GetStates">
            <summary>
            Gets the names of the appearance streams specified for the AnnotationBase
            </summary>
            <returns>A string array containing the appearance streams' names.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.GetOnState">
            <summary>
            Gets the name of the appearance state that is used to show
            RadioButtonField or CheckBoxField in the checked state.
            </summary>
            <returns>The name of the checked appearance state.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Annotation">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Default">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> that is used when the widget has separate states.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object for a specified state.
            </summary>
            <param name="state">The state of the annotation.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> associated with the specified state.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams">
            <summary>
            Represents a PDF Appearance Streams object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Clear">
            <summary>
            Clears all appearances.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Normal">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining normal appearance,
            used when the annotation is not interacting with the user.
            This appearance is also used for printing the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Rollover">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining rollover appearance,
            used when the user moves the cursor into the annotation’s active area without pressing the mouse button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Down">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining down appearance,
            used when the mouse button is pressed or held down within the annotation’s active area.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderStyle">
            <summary>
            Defines possible border styles for fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Solid">
            <summary>
            Solid border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Dashed">
            <summary>
            Dashed border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Beveled">
            <summary>
            Beveled, a simulated embossed rectangle that appears to be raised above the surface of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Inset">
            <summary>
            Inset, a simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Underline">
            <summary>
            Underline, a single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.Border">
            <summary>
            Defines properties of the annotation's border.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Border.IsVisible(System.Nullable{System.Drawing.Color})">
            <summary>
            Returns true if border is visible and should be rendered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Border.AssignFrom(GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Copies all property values from another object.
            Note! This method does not raise <see cref="E:GrapeCity.Documents.Common.NotifyObject.PropertyChanged"/> event.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Width">
            <summary>
            Gets or sets the border's width in points (1/72 inch).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Style">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.DashPattern">
            <summary>
            Gets or sets the dash pattern, used if <see cref="P:GrapeCity.Documents.Pdf.Annotations.Border.Style"/> == <see cref="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Dashed"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Color">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderEffectType">
            <summary>
            Enumerates the possible types of border effects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderEffectType.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderEffectType.Cloudy">
            <summary>
            The border should appear "cloudy".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect">
            <summary>
            Represents an effect to be applied to the border of an annotations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.BorderEffect.AssignFrom(GrapeCity.Documents.Pdf.Annotations.BorderEffect)">
            <summary>
            Copies all property values from another object.
            Note! This method does not raise <see cref="E:GrapeCity.Documents.Common.NotifyObject.PropertyChanged"/> event.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.BorderEffect.Intensity">
            <summary>
            Gets or sets a number describing the intensity of the effect. Suggested values range from 0 to 2.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.BorderEffect.Type">
            <summary>
            Gets or sets the border effect type.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CircleAnnotation">
            <summary>
            Represents a circle annotation, which displays a circle on a page.
            When opened, they display a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance">
            <summary>
            Represents the default appearance of an annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.Text">
            <summary>
            Gets or sets the text representing the appearance as it will be stored in a PDF stream
            (e.g. "/DF0 10 Tf 0 0 0 rg").
            <para>Please see the PDF specification for details.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.Font">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.Font"/> object.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            <para>
            When setting this property, you may use <see cref="M:GrapeCity.Documents.Text.FontCollection.FindFamilyName(System.String,System.Boolean,System.Boolean)"/>
            or other <see cref="T:GrapeCity.Documents.Text.FontCollection"/> methods to find a suitable font.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.FontSize">
            <summary>
            Gets or sets the font size in points.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.ForeColor">
            <summary>
            Gets or sets the foreground color.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon">
            <summary>
            Specifies the type of attachment icon to use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Paperclip">
            <summary>
            Paper Clip attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.PushPin">
            <summary>
            Pushpin attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Tag">
            <summary>
            Tag attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Graph">
            <summary>
            Graph attachment icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation">
            <summary>
            Represents a reference to a file which typically is embedded in the PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.Icon">
            <summary>
            Gets or sets the type of the icon used to display the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object that defines the referenced file.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation">
            <summary>
            Represents a free text annotation that displays text directly on a page.
            Unlike an ordinary text annotation (see <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation"/>),
            a free text annotation has no open or closed state.
            Instead of being displayed in a pop-up window, the text is always visible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.DefaultAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the content of the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.TextOffsets">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> structure that defines
            the numerical differences between two rectangles:
            the <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/> and an inner rectangle contained within that rectangle.
            The inner rectangle is where the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>’s text should be displayed.
            <para>Note that if this rectangle is not specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/>
            is used as the text rectangle.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Opacity">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the annotation’s text.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Color">
            <summary>
            Gets or sets the annotation color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.StyleString">
            <summary>
            Gets or sets the default style string.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.CalloutLine">
            <summary>
            Gets or sets an array of four or six numbers specifying a callout line attached to the free text annotation.
            Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending coordinates of the line in default user space.
            Four numbers [ x1 y1 x2 y2 ] represent the starting and ending coordinates of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of end callout line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.InkAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.InkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.Paths">
            <summary>
            Gets the list of array of points each array representing a stroked path.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition">
            <summary>
            Specifies the possible positions of a text for <see cref="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.None">
            <summary>
            Text is not shown.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.Inline">
            <summary>
            Text is centered inside the line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.Top">
            <summary>
            Text is on top of the line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.Start">
            <summary>
            Gets or sets the start point of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.End">
            <summary>
            Gets or sets the end point of the line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineStartStyle">
            <summary>
            Gets or sets the style of line start.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of line end.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineEndingsFillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLinesLength">
            <summary>
            Gets or sets the length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself.
            A positive value means that the leader lines appear in the direction that is clockwise when traversing
            the line from its starting point to its ending point.
            A negative value indicates the opposite direction.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLinesExtension">
            <summary>
            Gets or sets a non-negative number representing the length of leader line extensions that extend
            from the line proper 180 degrees from the leader lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLineOffset">
            <summary>
            Gets or sets a non-negative number representing the length of the leader line offset,
            which is the amount of empty space between the endpoints of the annotation and the beginning
            of the leader lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.TextPosition">
            <summary>
            Gets or sets the annotation's text positioning.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.HorizontalTextOffset">
            <summary>
            Gets or sets the horizontal offset along the annotation line from its midpoint,
            with a positive value indicating offset to the right and a negative value indicating offset to the left.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.VerticalTextOffset">
            <summary>
            Gets or sets the vertical offset perpendicular to the annotation line, with a positive value
            indicating a shift up and a negative value indicating a shift down.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation">
            <summary>
            Represents a hypertext link.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.DestinationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
            <param name="rect">The bounds of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> on the containing page.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when the annotation is activated.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Actions.ActionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
            <param name="rect">The bounds of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> on the containing page.</param>
            <param name="action">The <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be activated when the annotation is activated.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when this <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> is activated.
            If both this property and <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action"/> are specified, then <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action"/> takes precedence
            and will be written into the PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be performed when this <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> is activated.
            If both <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Dest"/> and this property are specified, then this property takes precedence
            and will be written into the PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Highlighting">
            <summary>
            Gets or sets the annotation’s highlighting mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Border">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType">
            <summary>
            Specifies the possible relationships between related annotations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType.Reply">
            <summary>
            The current annotation is a reply to a referenced annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType.Group">
            <summary>
            The current annotation and a referenced annotation is a single group.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation">
            <summary>
            The abstract base class for annotations that are used primarily to mark up PDF documents.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName">
            <summary>
            Gets or sets the text label to be displayed in the title bar of the annotation’s pop-up window
            when open and active. By convention, this entry identifies the user who added the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Opacity">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.RichText">
            <summary>
            Gets or sets the text to be displayed in the pop-up window when the annotation is opened.
            This text can be formatted using html tags, see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate">
            <summary>
            Gets or sets the date and time when the annotation was created.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Subject">
            <summary>
            Gets or sets the text representing a short description of the subject being addressed by the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation">
            <summary>
            Gets or sets the annotation referenced by this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceType">
            <summary>
            Gets or sets the relationship (reference type) between this annotation and the annotation specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation"/> property.
            The referenced annotation should be on the same page with the current annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Popup">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation"/> annotation for entering or editing text associated with this annotation.
            Setting this property changes the <see cref="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Parent"/> property.
            A separate <see cref="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation"/> allows defining additional properties of 
            the popup window: color, position etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Color">
            <summary>
            Gets or sets the annotation color,
            it used as color of popup window, lines color etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation">
            <summary>
            Represents a polygon annotation that displays a polygon on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation.BorderEffect">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect"/> object defining the effect applied to the polygon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/> and <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.FillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation's elements.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.Points">
            <summary>
            Gets or sets the points of polygon or polyline.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation">
            <summary>
            Represents a polyline annotation.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineStartStyle">
            <summary>
            Gets or sets the style of line start.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of line end.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineEndingsFillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            Note! This property is a same as <see cref="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.FillColor"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation">
            <summary>
            The base class for annotations which are used primarily to mark up PDF documents.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation"/> of the current annotation.
            This property changes when the <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation"/> is changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Open">
            <summary>
            Gets or sets a value specifying whether the pop-up annotation should initially
            be displayed open.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Color">
            <summary>
            Gets or sets the popup window color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Area">
            <summary>
            Gets a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the annotation area.
            If not empty, these quadrilaterals denote the content region that is intended to be removed.
            If this entry is empty, the <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/> entry denotes the content region that is intended to be removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayFillColor">
            <summary>
            Gets or sets the overlay fill color with which to fill the redacted region after the affected
            content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayText">
            <summary>
            Gets or sets the overlay text that should be drawn over the redacted region
            after the affected content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayTextRepeat">
            <summary>
            Gets or sets a value indicating whether the text specified by <see cref="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayText"/> should be repeated
            to fill the redacted region after the affected content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the overlay text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the overlay text.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.MarkBorderColor">
            <summary>
            Gets or sets the outline color used to highlight the annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.MarkFillColor">
            <summary>
            Gets or sets the color used to fill the annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayAppearanceStream">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.AddPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.FillMode)">
            <summary>
            Tessellates a polygon specified by its vertices into triangles,
            and adds those triangles to this annotation's <see cref="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Area"/>.
            </summary>
            <param name="points">The array of points that specify the vertices of the polygon.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon">
            <summary>
            Specifies the predefined icons used by <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Speaker">
            <summary>
            The speaker icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Mic">
            <summary>
            The microphone icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Ear">
            <summary>
            The "ear" icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/> is analogous to a text annotation except that instead of a text note,
            it contains sound recorded from the computer’s microphone or imported from a file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation.Icon">
            <summary>
            Gets or sets a string specifying the name of an icon used to display the annotation.
            <para>
            The PDF specification provides a predefined set of icons, those are provided by the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon"/> class.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation.Sound">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> defining the sound to be played when the annotation is activated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation">
            <summary>
            Represents a square annotation which displays a rectangle on a page.
            When opened, a square annotation displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.BorderEffect">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect"/> object defining effect applied to the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon">
            <summary>
            Specifies the possible icons used to display a <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Approved">
            <summary>
            Approved icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.AsIs">
            <summary>
            AsIs icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Confidential">
            <summary>
            Confidential icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Departmental">
            <summary>
            Departmental icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Draft">
            <summary>
            Draft icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Experimental">
            <summary>
            Experimental icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Expired">
            <summary>
            Expired icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Final">
            <summary>
            Final icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.ForComment">
            <summary>
            ForComment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.ForPublicRelease">
            <summary>
            ForPublicRelease icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.NotApproved">
            <summary>
            NotApproved icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.NotForPublicRelease">
            <summary>
            NotForPublicRelease icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Sold">
            <summary>
            Sold icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.TopSecret">
            <summary>
            TopSecret icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation">
            <summary>
            Represents an annotation that displays text or graphics
            intended to look as if they were stamped on the page with a rubber stamp.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.RotationAngle">
            <summary>
            Gets the angle, in degrees, by which the stamp is rotated.
            Positive values indicate counterclockwise rotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.Icon">
            <summary>
            Gets or sets a string specifying the name of an icon used to display the annotation.
            <para>
            The PDF specification provides a predefined set of icons, those are provided by the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon"/> enumeration.
            </para>
            <para>
            In practice though this entry often contains names of custom icons specific to the application that created the document,
            hence this property is a string so it can accommodate arbitrary values.
            </para>
            To assign a predefined icon, use code like the following:
            <code>
            Icon = StampAnnotationIcon.Approved.ToString();
            </code>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.Font">
            <summary>
            Gets or sets a font to draw the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.ShowUserName">
            <summary>
            Gets or sets a value indicating whether to show <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName"/> on the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.ShowCreationDate">
            <summary>
            Gets or sets a value indicating whether to show <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate"/> on the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.CreationDateFormat">
            <summary>
            Gets or sets the format which should be used to display <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.RotateContent(System.Single)">
            <summary>
            Rotates the annotation content by the specified angle.
            Positive values indicate counterclockwise rotation.
            <para>
            Note that the annotation must be added to a document before calling this method.
            </para>
            </summary>
            <param name="angleDegrees">The rotation angle in degrees.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon">
            <summary>
            Specifies the possible icons used to display a <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Note">
            <summary>
            Note icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Comment">
            <summary>
            Comment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Key">
            <summary>
            Key icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Help">
            <summary>
            Help icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.NewParagraph">
            <summary>
            New paragraph icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Paragraph">
            <summary>
            Paragraph icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Insert">
            <summary>
            Insert icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation">
            <summary>
            Represents a sticky note attached to a point in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.Open">
            <summary>
            Gets or seta a flag specifying whether the annotation should initially be displayed open.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.Icon">
            <summary>
            Gets or sets the type of the icon used to display the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State">
            <summary>
            Gets or sets the state to which the original annotation shall be set.
            <para>
            The following describes the predefined combinations of State and StateModel, and their meanings:
            </para>
            
            <list type="bullet">
            <term>StateModel "Marked", State "Marked"</term>
            <description>The annotation has been marked by the user.</description>
            <term>StateModel "Marked", State "Unmarked"</term>
            <description>The annotation has not been marked by the user (the default).</description>
            
            <term>StateModel "Review", State "Accepted"</term>
            <description>The user agrees with the change.</description>
            <term>StateModel "Review", State "Rejected"</term>
            <description>The user disagrees with the change.</description>
            <term>StateModel "Review", State "Cancelled"</term>
            <description>The change has been cancelled.</description>
            <term>StateModel "Review", State "Completed"</term>
            <description>The change has been completed.</description>
            <term>StateModel "Review", State "None"</term>
            <description>The user has indicated nothing about the change (the default).</description>
            </list>
            See PDF specification for more details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.StateModel">
            <summary>
            Gets or sets the state model corresponding to <see cref="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State"/>.
            <para>
            See <see cref="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State"/> and PDF specification for details.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupType">
            <summary>
            Defines possible text markup types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Highlight">
            <summary>
            Highlighting markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Underline">
            <summary>
            Underline markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Squiggly">
            <summary>
            Squiggly markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.StrikeOut">
            <summary>
            Strikeout markup.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> appear as highlights, underlines, strikeouts, or jagged (“squiggly”) underlines in the text of a document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.#ctor(GrapeCity.Documents.Pdf.Annotations.TextMarkupType)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> class.
            </summary>
            <param name="markupType"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.MarkupType">
            <summary>
            Gets or sets the markup type.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.Area">
            <summary>
            Gets a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the markup area.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation">
            <summary>
            Represents an annotation of a type that is not currently supported by GcPdf.
            <para>
            An instance of this type cannot be created by user code.
            Instances of this type will be created if a PDF containing annotations
            of unsupported types is loaded into a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation.Subtype">
            <summary>
            Gets the annotation type according to the PDF specification.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation">
            <summary>
            Defines a graphics that are expected to be printed at a fixed size and position on a page,
            regardless of the dimensions of the printed page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text">
            <summary>
            Gets or sets the text of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/>,
            if both <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text"/> and <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/> are specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/>
            is used as watermark content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.TextFormat">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object
            that specifies the formatting of the annotation's text.
            <para>
            Note that this object itself is not persisted in the PDF, 
            just its properties are used to generate the appearance of
            this watermark annotation.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image">
            <summary>
            Gets or sets the image if <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/>,
            if both <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text"/> and <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/> are specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/>
            is used as watermark content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Matrix">
            <summary>
            Gets or sets the matrix used to transform the annotation’s rectangle before rendering.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.HorzTranslate">
            <summary>
            Gets or sets the amount to translate the associated content horizontally,
            as a percentage of the width of the target media (or if unknown,
            the width of the page’s MediaBox). 1.0 represents 100% and 0.0 represents 0%.
            Negative values are not recommended, since they may cause content to be drawn off the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.VertTranslate">
            <summary>
            Gets or sets the amount to translate the associated content vertically, as a percentage of
            the height of the target media (or if unknown, the height of the page’s MediaBox).
            1.0 represents 100% and 0.0 represents 0%. Negative values are not recommended,
            since they may cause content to be drawn off the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CheckStyle">
            <summary>
            Defines possible check mark styles for <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> and <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Check">
            <summary>
            The check mark looks like a check.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Circle">
            <summary>
            The check mark looks like a circle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Cross">
            <summary>
            The check mark looks like a cross.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Diamond">
            <summary>
            The check mark looks like a diamond.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Square">
            <summary>
            The check mark looks like a square.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Star">
            <summary>
            The check mark looks like a star.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation">
            <summary>
            Specifies the relative positions of text and image in an annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionOnly">
            <summary>
            No image; caption only.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.ImageOnly">
            <summary>
            No caption; image only.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionBelowIcon">
            <summary>
            Caption below the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAboveIcon">
            <summary>
            Caption above the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAtRight">
            <summary>
            Caption to the right of the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAtLeft">
            <summary>
            Caption to the left of the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionOverlaid">
            <summary>
            Caption overlaid directly on the image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode">
            <summary>
            Specifies the circumstances under which the image should be scaled inside the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Always">
            <summary>
            Always scale.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Bigger">
            <summary>
            Scale only when the image is bigger than the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Smaller">
            <summary>
            Scale only when the image is smaller than the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Never">
            <summary>
            Never scale.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance">
            <summary>
            Represents the appearance attributes for a <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/>
            used when the state of a button field is changed: user presses the button, mouse is over the button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StateAppearance.Caption">
            <summary>
            Gets or sets the button caption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StateAppearance.Image">
            <summary>
            Gets or sets the image, it can be specified as <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or as <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ImageScale">
            <summary>
            Represents image alignment within a rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.ImageScale.AssignFrom(GrapeCity.Documents.Pdf.Annotations.ImageScale)">
            <summary>
            Copies all property values from another object.
            Note! This method does not raise <see cref="E:GrapeCity.Documents.Common.NotifyObject.PropertyChanged"/> event.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Mode">
            <summary>
            Gets or sets the scaling mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Proportional">
            <summary>
            Gets or sets a value indicating whether an image should be scaled proportionally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Position">
            <summary>
            Gets or sets the position of an image.
            <para>
            The two numbers between 0.0 and 1.0 indicate the fraction of leftover space to allocate at the left and bottom of an image.
            A value of (0.0, 0.0) positions the image at the bottom-left corner of the button rectangle.
            A value of (0.5, 0.5) centers it within the rectangle.
            </para>
            This value is used only if the image is scaled proportionally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.IgnoreBorder">
            <summary>
            Gets or sets a value indicating whether a button's appearance should be scaled to fit fully
            within the bounds of the annotation without taking into consideration the line width of the border.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance">
            <summary>
            Represents the appearance of a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> when it is linked with a pushbutton or a signature field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Caption">
            <summary>
            Gets or sets the button's caption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Image">
            <summary>
            Gets or sets the button’s image, it can be specified as <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or as <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.CaptionImageRelation">
            <summary>
            Gets or sets a value indicating how to position the button's caption relative to image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.DownAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance"/> object defining the button attributes
            used when the mouse button is pressed within its active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.RolloverAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance"/> object defining the button attributes
            used when the user rolls the cursor into its active area without pressing the mouse button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.ImageScale">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ImageScale"/> object defining attributes of image scaling.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation">
            <summary>
            Represents a widget annotation used in interactive forms to represent the appearance of fields and
            to manage user interactions.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> class.
            </summary>
            <param name="page">The page containing created annotation.</param>
            <param name="rect">The annotation's bounds on the page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.DefaultAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the content of this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TextFormat">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object that specifies the
            font, font size and color used to format the content of this annotation.
            <para>
            Note that only <see cref="P:GrapeCity.Documents.Text.TextFormat.Font"/>, <see cref="P:GrapeCity.Documents.Text.TextFormat.FontSize"/> and 
            <see cref="P:GrapeCity.Documents.Text.TextFormat.ForeColor"/> will be used when building appearance streams,
            all other TextFormat properties will be ignored.
            Note also that if a property is specified on <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.DefaultAppearance"/>,
            the corresponding TextFormat property will also be ignored.
            </para>
            This property is deprecated, <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.DefaultAppearance"/> should be used instead.
            <para>
            An appropriate font can be found for example by using methods such as
            <see cref="M:GrapeCity.Documents.Text.FontCollection.FindFamilyName(System.String,System.Boolean,System.Boolean)"/>
            on the <see cref="P:GrapeCity.Documents.Text.FontCollection.SystemFonts"/> collection.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.CheckStyle">
            <summary>
            Gets or sets the style of check mark that is used if this <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>
            is linked with a <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> or a <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            <para>
            Note that this property works over the <see cref="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Caption"/> property, 
            for example if <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.CheckStyle"/> is <see cref="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Cross"/>,
            then ButtonAppearance.Caption will be "8".
            </para>
            If the value of this property is null, it indicates that ButtonAppearance.Caption
            contains an unknown value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the annotation’s text.
            <para>Note that if this property is not specified (the value is null) then <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification"/> is used.
            See PDF specification for details.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.ActualJustification">
            <summary>
            Gets the actual justification to be used in displaying the annotation’s text.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Name">
            <summary>
            Gets or sets the name of the annotation.
            If <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> is used with <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> then
            <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Name"/> is used as a value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Field">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> associated with this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Highlighting">
            <summary>
            Gets or sets the annotation’s highlighting mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Border">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.RotationAngle">
            <summary>
            Gets or sets the angle, in degrees, by which the widget annotation
            is rotated counterclockwise relative to the page.
            The value must be a multiple of 90.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.BackColor">
            <summary>
            Gets or sets the annotation's background color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Events">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents"/> object that specifies the events for this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.ButtonAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/> object that specifies the look of the widget
            if it is linked with a push button field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents">
            <summary>
            Defines events common for all acroform fields.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.OnActionChanged(System.String)">
            <inheriteddoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Activate">
            <summary>
            Gets or sets an action to be performed when the annotation is activated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseEnter">
            <summary>
            Gets or sets an action to be performed when the mouse enters the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseLeave">
            <summary>
            Gets or sets an action to be performed when the cursor exits the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseDown">
            <summary>
            Gets or sets an action to be performed when the mouse button is pressed inside the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseUp">
            <summary>
            Gets or sets an action to be performed when the mouse button is released inside the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Enter">
            <summary>
            Gets or sets an action to be performed when the annotation receives the input focus.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Leave">
            <summary>
            Gets or sets an action to be performed when the annotation loses the input focus.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageOpened">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is opened
            (for example, when the user navigates to it from the next or previous page or by means of a link annotation
            or outline item).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageClosed">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is closed
            (for example, when the user navigates to the next or previous page, or follows a link annotation or outline item).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageShow">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation becomes visible in
            the viewer application’s user interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageHide">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is no longer visible in
            the viewer application’s user interface.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ArticleBead">
            <summary>
            Represents a bead of a PDF article thread.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Articles.ArticleBead.ThreadInt">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> object that owns this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Articles.ArticleBead.PageInt">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> is displayed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Articles.ArticleBead.NextBeadInt">
            <summary>
            The next <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Articles.ArticleBead.PreviousBeadInt">
            <summary>
            The previous <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
            <param name="page">The bead's page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
            <param name="page">The bead's page.</param>
            <param name="bounds">The bead's bounds on the page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> containing this bead.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Thread">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> object containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> is displayed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Bounds">
            <summary>
            Gets or sets the location of this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> on the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ArticleThread">
            <summary>
            Represents a PDF article thread.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Articles.ArticleThread.FirstBeadInt">
            <summary>
            The first <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> in the thread.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.FirstBead">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> object defining first bead in the thread.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Doc">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Beads">
            <summary>
            Gets a collection of the thread's beads.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Info">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object
            containing information about the thread, such as its title, author, and creation date.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Metadata">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> object
            containing information about the thread, such as its title, author, and creation date.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects owned by an <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.EnumerateItems(System.Func{GrapeCity.Documents.Pdf.Articles.ArticleBead,System.Boolean})">
            <summary>
            Enumerates items in the collection, returns item where enumeration was stopped,
            i.e. <paramref name="callback"/> returned false, and null if all collection was enumerated.
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.CopyTo(GrapeCity.Documents.Pdf.Articles.ArticleBead[],System.Int32)">
            <summary>
            Copies the entire collection into a one-dimensional array,
            starting at the specified index in the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.</param>
            <param name="index">The zero-based index in the array at which copying begins.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at a specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Add(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Insert(System.Int32,GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Remove(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item was actually removed, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Contains(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.IndexOf(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AssociatedFiles">
            <summary>
            Represets the Associated Files collection. 
            This is collection of <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> objects associated with some document object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.AiffStreamReader">
            <summary>
            The AIFF stream reader.
            Note! AIFC (compressed AIFF) not supported.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.AiffStreamReader.GetStreamInfo(System.IO.Stream,System.Boolean)">
            <summary>
            Parses AIFF stream and returns <see cref="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo"/> object describing it.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.Utils.IEEE">
            <summary>
            Methods for converting between IEEE 80-bit extended double precision
            and standard C# double precision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.Utils.IEEE.ConvertToIeeeExtended(System.Double)">
            <summary>
            Converts a C# double precision number to an 80-bit
            IEEE extended double precision number (occupying 10 bytes).
            </summary>
            <param name="num">The double precision number to convert to IEEE extended.</param>
            <returns>An array of 10 bytes containing the IEEE extended number.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.Utils.IEEE.ConvertFromIeeeExtended(System.Byte[])">
            <summary>
            Converts an IEEE 80-bit extended precision number to a
            C# double precision number.
            </summary>
            <param name="bytes">The 80-bit IEEE extended number (as an array of 10 bytes).</param>
            <returns>A C# double precision number that is a close representation of the IEEE extended number.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding">
            <summary>
            Summary description for WaveFormatEncoding.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Unknown">
            <summary>WAVE_FORMAT_UNKNOWN,	Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Pcm">
            <summary>WAVE_FORMAT_PCM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Adpcm">
            <summary>WAVE_FORMAT_ADPCM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.IeeeFloat">
            <summary>WAVE_FORMAT_IEEE_FLOAT Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vselp">
            <summary>WAVE_FORMAT_VSELP		Compaq Computer Corp.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.IbmCvsd">
            <summary>WAVE_FORMAT_IBM_CVSD	IBM Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ALaw">
            <summary>WAVE_FORMAT_ALAW		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MuLaw">
            <summary>WAVE_FORMAT_MULAW		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Dts">
            <summary>WAVE_FORMAT_DTS		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Drm">
            <summary>WAVE_FORMAT_DRM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WmaVoice9">
            <summary>WAVE_FORMAT_WMAVOICE9 </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.OkiAdpcm">
            <summary>WAVE_FORMAT_OKI_ADPCM	OKI</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DviAdpcm">
            <summary>WAVE_FORMAT_DVI_ADPCM	Intel Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ImaAdpcm">
            <summary>WAVE_FORMAT_IMA_ADPCM  Intel Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MediaspaceAdpcm">
            <summary>WAVE_FORMAT_MEDIASPACE_ADPCM Videologic</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.SierraAdpcm">
            <summary>WAVE_FORMAT_SIERRA_ADPCM Sierra Semiconductor Corp </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G723Adpcm">
            <summary>WAVE_FORMAT_G723_ADPCM Antex Electronics Corporation </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiStd">
            <summary>WAVE_FORMAT_DIGISTD DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiFix">
            <summary>WAVE_FORMAT_DIGIFIX DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DialogicOkiAdpcm">
            <summary>WAVE_FORMAT_DIALOGIC_OKI_ADPCM Dialogic Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MediaVisionAdpcm">
            <summary>WAVE_FORMAT_MEDIAVISION_ADPCM Media Vision, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.CUCodec">
            <summary>WAVE_FORMAT_CU_CODEC Hewlett-Packard Company </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.YamahaAdpcm">
            <summary>WAVE_FORMAT_YAMAHA_ADPCM Yamaha Corporation of America</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.SonarC">
            <summary>WAVE_FORMAT_SONARC Speech Compression</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DspGroupTrueSpeech">
            <summary>WAVE_FORMAT_DSPGROUP_TRUESPEECH DSP Group, Inc </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.EchoSpeechCorporation1">
            <summary>WAVE_FORMAT_ECHOSC1 Echo Speech Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AudioFileAf36">
            <summary>WAVE_FORMAT_AUDIOFILE_AF36, Virtual Music, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Aptx">
            <summary>WAVE_FORMAT_APTX Audio Processing Technology</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AudioFileAf10">
            <summary>WAVE_FORMAT_AUDIOFILE_AF10, Virtual Music, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Prosody1612">
            <summary>WAVE_FORMAT_PROSODY_1612, Aculab plc</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Lrc">
            <summary>WAVE_FORMAT_LRC, Merging Technologies S.A. </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DolbyAc2">
            <summary>WAVE_FORMAT_DOLBY_AC2, Dolby Laboratories</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Gsm610">
            <summary>WAVE_FORMAT_GSM610, Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MsnAudio">
            <summary>WAVE_FORMAT_MSNAUDIO, Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AntexAdpcme">
            <summary>WAVE_FORMAT_ANTEX_ADPCME, Antex Electronics Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ControlResVqlpc">
            <summary>WAVE_FORMAT_CONTROL_RES_VQLPC, Control Resources Limited </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiReal">
            <summary>WAVE_FORMAT_DIGIREAL, DSP Solutions, Inc. </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiAdpcm">
            <summary>WAVE_FORMAT_DIGIADPCM, DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ControlResCr10">
            <summary>WAVE_FORMAT_CONTROL_RES_CR10, Control Resources Limited</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_NMS_VBXADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CS_IMAADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ECHOSC3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_DIGITALK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_XEBEC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G721_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G728_CELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSG723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Mpeg">
            <summary>WAVE_FORMAT_MPEG, Microsoft Corporation </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PAC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MpegLayer3">
            <summary>WAVE_FORMAT_MPEGLAYER3, ISO/MPEG Layer3 Format Tag </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_LUCENT_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CIRRUS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ESPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CANOPUS_ATRAC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G726_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G722_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DSAT_DISPLAY">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_BYTE_ALIGNED">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC8">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC10">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC16">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC20">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29HW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR12">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR18">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ40">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SOFTSOUND">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ60">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSRT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G729A">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MVI_MVI2">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DF_G726">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DF_GSM610">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ISIAUDIO">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ONLIVE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SBC24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DOLBY_AC3_SPDIF">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MEDIASONIC_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PROSODY_8KBPS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ZYXEL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PHILIPS_LPCBB">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PACKED">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MALDEN_PHONYTALK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Gsm">
            <summary>WAVE_FORMAT_GSM</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G729">
            <summary>WAVE_FORMAT_G729</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G723">
            <summary>WAVE_FORMAT_G723</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Acelp">
            <summary>WAVE_FORMAT_ACELP</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.RawAac">
            <summary>
            WAVE_FORMAT_RAW_AAC1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RHETOREX_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IRAT">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VIVO_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VIVO_SIREN">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DIGITAL_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SANYO_LD_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACEPLNET">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP4800">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP8V3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729A">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_KELVIN">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G726ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_PUREVOICE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_HALFRATE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_TUBGSM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSAUDIO1">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudio">
            <summary>
            Windows Media Audio, WAVE_FORMAT_WMAUDIO2, Microsoft Corporation
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioProfessional">
            <summary>
            Windows Media Audio Professional WAVE_FORMAT_WMAUDIO3, Microsoft Corporation
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioLosseless">
            <summary>
            Windows Media Audio Lossless, WAVE_FORMAT_WMAUDIO_LOSSLESS
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioSpdif">
            <summary>
            Windows Media Audio Professional over SPDIF WAVE_FORMAT_WMASPDIF (0x0164)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ULAW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ALAW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_16K">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH8">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH10">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UHER_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUARTERDECK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ILINK_VC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RAW_SPORT">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ESST_AC3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IPI_HSX">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IPI_RPELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CS2">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SONY_SCX">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_FM_TOWNS_SND">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_BTV_DIGITAL">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QDESIGN_MUSIC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VME_VMPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_TPC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIGSM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLICELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLISBC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIOPR">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_LH_CODEC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_NORRIS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_ADTS_AAC">
            <summary>
            Advanced Audio Coding (AAC) audio in Audio Data Transport Stream (ADTS) format.
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_ADTS_AAC.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral band replication (SBR) or parametric stereo (PS) tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_RAW_AAC">
            <summary></summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_LOAS">
            <summary>
            MPEG-4 audio transport stream with a synchronization layer (LOAS) and a multiplex layer (LATM).
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_LOAS.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral SBR or PS tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.NOKIA_MPEG_ADTS_AAC">
            <summary>NOKIA_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.NOKIA_MPEG_RAW_AAC">
            <summary>NOKIA_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.VODAFONE_MPEG_ADTS_AAC">
            <summary>VODAFONE_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.VODAFONE_MPEG_RAW_AAC">
            <summary>VODAFONE_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_HEAAC">
            <summary>
            High-Efficiency Advanced Audio Coding (HE-AAC) stream.
            The format block is an HEAACWAVEFORMAT structure.
            </summary>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DVM">
            <summary>WAVE_FORMAT_DVM</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis1">
            <summary>WAVE_FORMAT_VORBIS1 "Og" Original stream compatible</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis2">
            <summary>WAVE_FORMAT_VORBIS2 "Pg" Have independent header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis3">
            <summary>WAVE_FORMAT_VORBIS3 "Qg" Have no codebook header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis1P">
            <summary>WAVE_FORMAT_VORBIS1P "og" Original stream compatible</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis2P">
            <summary>WAVE_FORMAT_VORBIS2P "pg" Have independent headere</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis3P">
            <summary>WAVE_FORMAT_VORBIS3P "qg" Have no codebook header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Extensible">
            <summary>WAVE_FORMAT_EXTENSIBLE</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DEVELOPMENT">
            <summary></summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStream">
            <summary>
            Base class for all AudioStream classes.
            Derives from stream.
            All read and seek operations aligned to BitsPerSample / 8.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo">
            <summary>
            Defines the Wave format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.Format">
            <summary>
            The format type.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.Channels">
            <summary>
            The number of channels.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.SamplingRate">
            <summary>
            The sample rate.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.AverageBytesPerSecond">
            <summary>
            The average number of bytes used per second.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.BlockAlign">
            <summary>
            The block alignment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.BitsPerSample">
            <summary>
            The number of bits per sample (usually 16 or 32, sometimes 24 or 8).
            Can be 0 for some codecs.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.DataOffset">
            <summary>
            The offset of audio data from the start of the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.DataLength">
            <summary>
            The length of audio data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStreamReader">
            <summary>
            The WAV stream reader.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.WaveStreamReader.GetStreamInfo(System.IO.Stream,System.Boolean)">
            <summary>
            Parses WAV stream and returns <see cref="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo"/> object describing it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.fillOrder">
            The logical order of bits within a byte.
            <pre>
            1 = MSB-to-LSB
            2 = LSB-to-MSB (flipped)
            </pre>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.uncompressedMode">
            Uncompressed mode flag: 1 if uncompressed, 0 if not.
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.fillBits">
            EOL padding flag: 1 if fill bits have been added before an EOL such
            that the EOL ends on a byte boundary, 0 otherwise.
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.oneD">
            Coding dimensionality: 1 for 2-dimensional, 0 for 1-dimensional.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.SetOptions(System.Int32,System.Int32,System.Int32,System.Int32)">
            Invokes the superclass method and then sets instance variables on
            the basis of the metadata set on this decompressor.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Codecs.Tiff.CCITTFaxDecoder.#ctor(System.Int32,System.Int32,System.Int32)">
            @param fillOrder
                       The fill order of the compressed data bytes.
            @param w
            @param h
        </member>
        <member name="T:GrapeCity.Documents.Pdf.VariableTextJustification">
            <summary>
            Specifies text justification to be used when displaying variable text in <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.LeftJustified">
            <summary>
            Text is left justified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.Centered">
            <summary>
            Text is centered.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.RightJustified">
            <summary>
            Text is right justified.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfObjID">
            <summary>
            Defines full ID of PDF object including ID and generation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfObjID.Empty">
            <summary>
            The empty <see cref="T:GrapeCity.Documents.Pdf.PdfObjID"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfObjID.ObjID">
            <summary>
            The object's id.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfObjID.Gen">
            <summary>
            The object's generation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfObjID"/> structure.
            </summary>
            <param name="objID"></param>
            <param name="gen"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.IsEmpty">
            <summary>
            Returns a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfObjID"/> struct contains empty object ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.op_Equality(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            For internal use.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfObjID.op_Inequality(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            For internal use.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ContentStream">
            <summary>
            Base abstract class for classes representing content streams in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ContentStream.m_StreamObject">
            <summary>
            The content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/>, initialized during PDF parsing.
            <see cref="F:GrapeCity.Documents.Pdf.ContentStream.m_Stream"/> and <see cref="F:GrapeCity.Documents.Pdf.ContentStream.m_Writer"/> created from
            <see cref="F:GrapeCity.Documents.Pdf.ContentStream.m_StreamObject"/> when requested.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.HasContent">
            <summary>
            Returns a value indicating whether this content stream is not empty, i.e. it contains
            some PDF operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.GetStream">
            <summary>
            Gets the System.IO.Stream object containing the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/>.
            <para>It is the caller's responsibility to dispose the returned stream after usage.</para>
            <para>Important: this method returns null if the current ContentStream object is empty.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.SetContent(System.IO.Stream,System.Boolean)">
            <summary>
            For internal use.
            Sets the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/> from the specified stream.
            Note! The <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/> will not own the passed <see cref="T:System.IO.Stream"/>
            object so it should be disposed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationBase">
            <summary>
            Base class for classes defining destination within document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationBase.ReferencedObjectsAreMerged(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Returns a value indicating whether ALL objects referenced by this <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/>
            will be merged during merge operation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Destination">
            <summary>
            The abstract base class for types representing a destination 
            that defines a particular view of a document.
            A destination consists of:
            <list type="bullet">
            <item>The page of the document to be displayed.</item>
            <item>The location of the document window on that page.</item>
            <item>The magnification (zoom factor) to use when displaying the page.</item>
            </list>
            <para>Important note about vertical coordinates:</para>
            In PDFs, all coordinates are specified relative to the bottom left corner,
            with the Y axis going up. 
            GcPdf uses the more convenient coordinate system with the origin
            in the top left corner, with the Y axis going down.
            In most situations the Y coordinates are automatically converted by GcPdf.
            In classes derived from <see cref="T:GrapeCity.Documents.Pdf.Destination"/> this is also done if
            the destination's target page is specified as the <see cref="T:GrapeCity.Documents.Pdf.Page"/>
            object.
            But if the destination's target page is specified by index,
            automatic conversion of the Y coordinate cannot be done, and it should be
            specified relative to the bottom left corner as per the PDF spec.
            <para>
            When the Y coordinate is specified relative to the page bottom,
            it is noted in the parameter's description.
            (It is recommended that constructors accepting a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object
            are used instead.)
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Destination._page">
            <summary>
            Page can be specified as integer - page's index, or as <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Destination.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Destination"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Destination.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Destination"/> class.
            </summary>
            <param name="page">The target page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.NamedLinearized">
            <summary>
            Gets or sets a value indicating whether the destination 
            is an item in the document's named destination list.
            It should be written as indirect dictionary object in case of linearized document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.TopLeftCoords">
            <summary>
            Gets or sets a value indicating whether the coords are specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.PageIndex">
            <summary>
            Gets the index of this destination's target page.
            Returns null if the target page was specified as a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            <para>
            Note that if this property is not null, then any Y coordinate is
            relative to the bottom left corner (see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.Page">
            <summary>
            Gets this destination's target <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            Returns null if the target page was specified by index.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationXYZ">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner
            of the window and the contents of the page magnified by the factor zoom.
            A null value for any of the parameters left, top, or zoom specifies that the current value
            of that parameter is to be retained unchanged. A zoom value of 0 has the same meaning as a null value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window relative to the bottom of the page.</param>
            <param name="zoom">The zoom factor of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window relative to the bottom of the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="top">The top coordinate of the document window relative to the bottom of the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window.</param>
            <param name="zoom">The zoom factor of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Zoom">
            <summary>
            Gets the zoom factor of the document window, if null or zero then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFit">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit the entire page
            within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the page within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFit.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFit"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFit.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFit"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window
            and the contents of the page magnified just enough to fit the entire width of the page within the window.
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitH.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitH"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="top">The top coordinate of the document window relative to page bottom.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitH.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitH"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitH.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitV">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window
            and the contents of the page magnified just enough to fit the entire height of the page within the window.
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitV.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitV"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitV.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitV"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitV.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitR">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit the rectangle
            specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the rectangle within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitR.#ctor(System.Int32,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitR"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="bounds">The rectangle to fit relative to the bottom left corner.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitR.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitR"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="page">The target page.</param>
            <param name="bounds">The rectangle to fit (relative to the top left corner).</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitR.Bounds">
            <summary>
            Gets the rectangle to fit.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns a rectangle relative to the bottom left corner.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns a rectangle relative to the top left corner.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitB">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit its bounding box
            entirely within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the bounding box within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitB.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitB"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitB.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitB"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitBH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window
            and the contents of the page magnified just enough to fit the entire width of its bounding box within the window.
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBH.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBH"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="top">The top coordinate of the document window relative to page bottom.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBH.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBH"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitBH.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitBV">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and
            the contents of the page magnified just enough to fit the entire height of its bounding box within the window.
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBV.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBV"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBV.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBV"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitBV.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationRef">
            <summary>
            Defines destination as reference to another destination, referenced destination
            can be in Dests dictionary of PDF document or in Dests subtree of Name Tree.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationRef.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> class.
            </summary>
            <param name="name">The name of referenced destination.</param>
            <param name="nameTree">Specifies where referenced destination is in Dests dictionary of document or in Dests subtree of Name Tree.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationRef.Name">
            <summary>
            Gets the name of referenced destination in the Dests dictionary of PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationRef.NameTree">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> references 
            destination in Dests dictionary of PDF document or in Dests subtree of document's Name Tree.
            If this property is null then place of referenced destination determinated on the base of
            *current* document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestsEntry">
            <summary>
            Base abstract class for classes representing a Dests entry in PDF catalog.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentCatalogDestsEntry">
            <summary>
            Represents Dests entry in document's catalog.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NamedDestinations">
            <summary>
            Represents dictionary of document's named destinations.
            This object saved to PDF as Dests entry in Document Catalog or
            as Dests entry in Names dictinary of Document Catalog.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NamesDestsEntry">
            <summary>
            Represents Dests entry in the Names dictionary of Document Catalog.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentInfo">
            <summary>
            Contains information about the document. This information includes 
            the document author, title, keywords, etc.
            </summary>
            <remarks>
            <para>You don't have to provide this information, it is optional. If provided, 
            it is saved with the document and is available to the reader application.</para>
            <para>Some reader applications may allow users to search documents by author, 
            subject, or keyword.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Creator">
            <summary>
            Gets or sets the name of the application that created the original document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Producer">
            <summary>
            Gets or sets the name of the application that created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Author">
            <summary>
            Gets or sets the name of the person that created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Subject">
            <summary>
            Gets or sets the subject of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Keywords">
            <summary>
            Gets or sets keywords (separated by comma) associated with the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.CreationDate">
            <summary>
            Gets or sets the creation date and time of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.ModifyDate">
            <summary>
            Gets or sets the date and time the document was most recently modified.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentInfo.Reset">
            <summary>
            Resets properties of this <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object to default values.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.EmbeddedFilesEntry">
            <summary>
            Represents the EmbeddedFiles entry of Names dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.EmbeddedFileStream">
            <summary>
            Represents embedded file stream in PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.GetStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> containing content of this <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>,
            stream should be disposed after usage.
            NOTE! Method can return null if this <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> is empty.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.CreationDate">
            <summary>
            Gets or sets the date and time when the embedded file was created.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.ModificationDate">
            <summary>
            Gets or sets the date and time when the embedded file was last modified.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.CheckSum">
            <summary>
            Gets or sets a 16-byte string that is the checksum of the bytes of the uncompressed embedded file.
            The checksum is calculated by applying the standard MD5 message-digest algorithm
            to the bytes of the embedded file stream.
            Checksum calculated automatically when <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> created with 
            <see cref="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromFile(GrapeCity.Documents.Pdf.GcPdfDocument,System.String)"/> or <see cref="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromBytes(GrapeCity.Documents.Pdf.GcPdfDocument,System.Byte[])"/> methods.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.Size">
            <summary>
            Gets or sets the size of the embedded file, in bytes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.MimeType">
            <summary>
            Gets or sets the file's MIME type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromFile(GrapeCity.Documents.Pdf.GcPdfDocument,System.String)">
            <summary>
            Creates a new instance of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> from the specified file name.
            <para>The file data will be read when the GcPdfDocument is saved.</para>
            </summary>
            <param name="doc">The owner document.</param>
            <param name="fileName">The file name.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromBytes(GrapeCity.Documents.Pdf.GcPdfDocument,System.Byte[])">
            <summary>
            Creates a new instance of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> from the specified array of bytes.
            </summary>
            <param name="doc">The owner document.</param>
            <param name="bytes">The file data.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfBlendMode">
            <summary>
            For internal use.
            Specifies how to render images into a rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Normal">
            <summary>Selects the source color, ignoring the backdrop.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Multiply">
            <summary>Multiplies the backdrop and source color values.</summary>
            <remarks>
            The result color is always at least as dark as either of the two constituent colors.
            Multiplying any color with black produces black; multiplying with white leaves the
            original color unchanged. Painting successive overlapping objects with a color other
            than black or white produces progressively darker colors.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Screen">
            <summary>Multiplies the complements of the backdrop and source color values, then complements the result.</summary>
            <remarks>
            The result color is always at least as light as either of the two constituent colors.
            Screening any color with white produces white; screening with black leaves
            the original color unchanged. The effect is/ similar to projecting multiple
            photographic slides simultaneously onto a single screen.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Overlay">
            <summary> Multiplies or screens the colors, depending on the backdrop color.</summary>
            <remarks>
            Source colors overlay the backdrop while preserving its highlights and shadows. The backdrop color
            is not replaced but is mixed with the source color to reflect the lightness or darkness of the backdrop.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Darken">
            <summary>Selects the darker of the backdrop and source colors.</summary>
            <remarks>
            The backdrop is replaced with the source where the source is darker; otherwise, it is left unchanged.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Lighten">
            <summary>Selects the lighter of the backdrop and source colors.</summary>
            <remarks>
            The backdrop is replaced with the source where the source is lighter; otherwise, it is left unchanged.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.ColorDodge">
            <summary>Brightens the backdrop color to reflect the source color. Painting with black produces no change.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.ColorBurn">
            <summary>Darkens the backdrop color to reflect the source color. Painting with white produces no change.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.HardLight">
            <summary>Multiplies or screens the colors, depending on the source color value.</summary>
            <remarks>
            If the source color is lighter than 0.5, the backdrop is lightened as if it were screened; this is useful for adding highlights to a scene.
            If the source color is darker than 0.5, the backdrop is darkened; this is useful for adding shadows to a scene.
            The degree of lightening or darkening is proportional to the difference between the source color and 0.5; if it is equal to 0.5, the backdrop is unchanged.
            Painting with pure black or white produces pure black or white. The effect is similar to shining a harsh spotlight on the backdrop.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.SoftLight">
            <summary>Darkens or lightens the colors, depending on the source color value.</summary>
            <remarks>
            If the source color is lighter than 0.5, the backdrop is lightened as if it were dodged; this is useful for adding highlights to a scene.
            If the source color is darker than 0.5, the backdrop is darkened as if it were burned in. The degree of lightening or darkening is proportional.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Difference">
            <summary>Subtracts the darker of the two constituent colors from the lighter color.</summary>
            <remarks>
            Painting with white inverts the backdrop color; painting with black produces no change.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Exclusion">
            <summary>Produces an effect similar to that of the Difference mode but lower in contrast.</summary>
            <remarks>
            Painting with white inverts the backdrop color; painting with black produces no change.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Compatible">
            <summary>
            This mode does not exist in specification but exists in PDF files :(.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.LineCapStyle">
            <summary>
            Specifies the shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.Butt">
            <summary>
            The stroke is squared off at the endpoint of the path.
            There is no projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.Round">
            <summary>
            A semicircular arc with a diameter equal to the line width is drawn around
            the endpoint and filled in.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.ProjectingSquare">
            <summary>
            The stroke continues beyond the endpoint of the path for a distance
            equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.LineJoinStyle">
            <summary>
            Specifies the shape to be used at the corners of paths that are stroked. 
            Join styles are significant only at points where consecutive segments of a path connect at an angle;
            segments that meet or intersect fortuitously receive no special treatment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Miter">
            <summary>
            The outer edges of the strokes for the two segments are extended until they meet at an angle,
            as in a picture frame.
            If the segments meet at too sharp an angle
            (as defined by the miter limit parameter—see “Miter Limit,” above), a bevel join is used instead.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn around the point where
            the two segments meet, connecting the outer edges of the strokes for the two segments.
            This pieslice-shaped figure is filled in, producing a rounded corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Bevel">
            <summary>
            The two segments are finished with butt caps (see “Line Cap Style” on page 216) and
            the resulting notch beyond the ends of the segments is filled with a triangle.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RenderingIntent">
            <summary>
            Defines possible PDF rendering intents.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.AbsoluteColorimetric">
            <summary>
            Colors are represented solely with respect to the light source;
            no correction is made for the output medium’s white point (such as the color of unprinted paper).
            Thus, for example, a monitor’s white point, which is bluish compared to that of a printer’s paper,
            would be reproduced with a blue cast. In-gamut colors are reproduced exactly;
            out-of-gamut colors are mapped to the nearest value within the reproducible gamut.
            This style of reproduction has the advantage of providing exact color matches from one output medium to another.
            It has the disadvantage of causing colors with Y values between the medium’s white point and 1.0 to be out of gamut.
            A typical use might be for logos and solid colors that require exact reproduction across different media.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.RelativeColorimetric">
            <summary>
            Colors are represented with respect to the combination of the light source and the output medium’s
            white point (such as the color of unprinted paper).
            Thus, for example, a monitor’s white point would be reproduced on a printer by simply leaving the paper unmarked,
            ignoring color differences between the two media. In-gamut colors are reproduced exactly;
            out-of-gamut colors are mapped to the nearest value within the reproducible gamut.
            This style of reproduction has the advantage of adapting for the varying white points of different output media.
            It has the disadvantage of not providing exact color matches from one medium to another.
            A typical use might be for vector graphics.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.Saturation">
            <summary>
            Colors are represented in a manner that preserves or emphasizes saturation.
            Reproduction of in-gamut colors may or may not be colorimetrically accurate.
            A typical use might be for business graphics, where saturation is the most important attribute of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.Perceptual">
            <summary>
            Colors are represented in a manner that provides a pleasing perceptual appearance.
            To preserve color relationships, both in-gamut and out-of-gamut colors are generally
            modified from their precise colorimetric values. A typical use might be for scanned images.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextRenderingMode">
            <summary>
            PDF text rendering mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Stroke">
            <summary>
            Stroke text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke">
            <summary>
            Fill, then stroke text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Invisible">
            <summary>
            Neither fill nor stroke text (invisible).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillClip">
            <summary>
            Fill text and add to path for clipping (see above).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.StrokeClip">
            <summary>
            Stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip">
            <summary>
            Fill, then stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Clip">
            <summary>
            Add text to path for clipping.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FillRule">
            <summary>
            Specifies how the intersecting areas of Path objects
            are combined to form the area of the Path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FillRule.EvenOdd">
            <summary>
            Rule that determines whether a point is in the fill region by drawing a ray
            from that point to infinity in any direction and counting the number of path
            segments within the given shape that the ray crosses. If this number is odd,
            the point is inside; if even, the point is outside.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FillRule.Nonzero">
            <summary>
            Rule that determines whether a point is in the fill region of the path by
            drawing a ray from that point to infinity in any direction and then examining
            the places where a segment of the shape crosses the ray. Starting with a
            count of zero, add one each time a segment crosses the ray from left to right
            and subtract one each time a path segment crosses the ray from right to left.
            After counting the crossings, if the result is zero then the point is outside
            the path. Otherwise, it is inside.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfException">
            <summary>
            Represents an exception that occurred while processing a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfException"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfException.Operations">
            <summary>
            Gets the currently executed operations' stack, see <see cref="T:GrapeCity.Documents.Pdf.Log.OperationStack"/> for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfSecurityException">
            <summary>
            Represents an exception that occurred while performing a security related
            task such as signing, encrypting, decrypting etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfSecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfSecurityException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfSecurityException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfPasswordException">
            <summary>
            Represents an exception that occurred if an invalid password was used while parsing PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfPasswordException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfPasswordException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileID">
            <summary>
            Defines ID of PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileID.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> class.
            </summary>
            <param name="permanentID">The permanent ID.</param>
            <param name="changingID">The changing ID.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileID.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileID.PermanentID">
            <summary>
            Gets or sets 16-byte array defining a permanent identifier based on the contents of the file at the time it was originally
            created and does not change when the file is incrementally updated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileID.ChangingID">
            <summary>
            Gets or sets 16-byte array defining  a changing identifier based on the file’s contents at the time it was last updated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AFRelationship">
            <summary>
            Contains string constants with predefined values for <see cref="P:GrapeCity.Documents.Pdf.FileSpecification.Relationship"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Source">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> is the original
            source material for the associated content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Data">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> represents information
            used to derive a visual presentation, such as for a table or a
            graph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Alternative">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> is an alternative
            representation of content, for example audio.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Supplement">
            <summary>
            Constant shall be used if this file specification represents a
            supplemental representation of the original source or data that
            may be more easily consumable(e.g.A MathML version of an
            equation).
            Note. Supplement is to be used only when the file is not the
            source or an alternative.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Unspecified">
            <summary>
            Constant shall be used when the relationship is not known
            or cannot be described using one of the other values.
            NOTE 2 Unspecified is to be used only when no other value correctly
            reflects the relationship.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification">
            <summary>
            Represents a PDF File Specification.
            <para>
            The complex architecture of this class is based on the PDF Specification,
            for full details please consult that spec.
            </para>
            <para>
            In many practical scenarios while generating PDFs, using the provided static ctors
            on the derived classes (<see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>, <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> etc.)
            may be enough though.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.HasEmbeddedFileStream">
            <summary>
            Gets a value indicating that this file specification has at least one
            <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> associated with it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileSystem">
            <summary>
            Gets or sets the file system to be used to interpret this file specification.
            </summary>
            <remarks>
            If this property is present, all other properties are interpreted by the designated file system.
            PDF defines only one standard file system name, URL;
            an application or plug-in extension can register other names.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.File">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object that specifies information about a referenced file.
            Note that this property should be used for files with names containing ASCII characters only,
            and is provided for backwards compatibility. For file names that contain non-ASCII characters,
            <see cref="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile"/> should be used instead.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object that specifies information about a referenced file.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.FileSpecification.File"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.DOSFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for DOS platform.
            NOTE: Using this property is not recomended beggininng with PDF 1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.MacFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for Mac OS platform.
            NOTE: Using this property is not recomended beggininng with PDF 1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.UnixFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for Unix platform.
            NOTE: Using this property is not recomended beggininng with PDF 1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.ID">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> object specifying the ID of the referenced file.
            </summary>
            <remarks>
            This property improves an application’s chances of finding the intended file and allows it to warn
            the user if the file has changed since the link was made.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Volatile">
            <summary>
            Gets or sets a value indicating whether the file referenced by the file specification is volatile
            (changes frequently with time). If the value is true, applications should never cache a copy of the file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Desc">
            <summary>
            Gets or sets the description of this File Specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Relationship">
            <summary>
            Gets or sets a value that represents the relationship of this object
            to the source that points to it.
            <para>
            Predefined values are <b>Source</b>, <b>Data</b>, <b>Alternative</b>,
            <b>Supplement</b> and <b>Unspecified</b>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromDOSFileName(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object from a DOS file name.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromEmbeddedStream(System.String,GrapeCity.Documents.Pdf.EmbeddedFileStream,System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object referencing a specified <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>.
            </summary>
            <param name="fileName"></param>
            <param name="embeddedFileStream"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromEmbeddedFile(GrapeCity.Documents.Pdf.EmbeddedFileStream,System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object referencing a specified <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>.
            </summary>
            <param name="embeddedFileStream"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromURI(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object representing an URI reference.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo">
            <summary>
            Represents information about a file for a particular platform.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.FileName">
            <summary>
            Gets or sets the file specification string of the form described in PDF Specification Section 3.10.1, “File Specification Strings”.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.EmbeddedFileStream">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> associated with this file specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.RelatedFiles">
            <summary>
            Gets the collection of related files, see PDF Specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile">
            <summary>
            Represents information about a related file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.#ctor(System.String,GrapeCity.Documents.Pdf.EmbeddedFileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/> class.
            </summary>
            <param name="fileName">The name of the related file.</param>
            <param name="embeddedFileStream">The file content.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileSpecification">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileName">
            <summary>
            Gets the file name of the related file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.EmbeddedFileStream">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> holding the file content.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection.#ctor(GrapeCity.Documents.Pdf.FileSpecification.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ASCII85DecodeFilter">
            <summary>
            ASCII85Decode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ASCIIHexDecodeFilter">
            <summary>
            ASCIIHexDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ImageFilterType">
            <summary>
            Defines PDF image filters.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Filters.ImageFilterType.Raw">
            <summary>
            No filter.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Filters.ImageFilterType.DCTDecode">
            <summary>
            JPEG baseline format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Filters.ImageFilterType.JBIG2Decode">
            <summary>
            JBIG2 encoding for monochrome (1 bit per pixel) image data.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Filters.ImageFilterType.JPXDecode">
            <summary>
            JPEG2000 compression method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Filters.ImageFilterType.CCITTFaxDecode">
            <summary>
            Group 3 or Group 4 CCITT facsimile (fax) encoding.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase">
            <summary>
            Base class for PDF decode filters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.DecodeStream(System.IO.Stream,System.IO.Stream,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Decodes stream.
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <param name="length"></param>
            <param name="pdh"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.ReadStream(System.IO.Stream,System.IO.Stream,System.Int32,System.String[],GrapeCity.Documents.Pdf.Spec.IPdfDictHolder[],GrapeCity.Documents.Pdf.Filters.ImageFilterType@,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@)">
            <summary>
            Reads stream content using appropriate filters and decodeParams.
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <param name="length"></param>
            <param name="filters"></param>
            <param name="decodeParams"></param>
            <param name="imageFilterType"></param>
            <param name="imageFilterDecodeParams"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.ReadStream(System.IO.Stream,System.IO.Stream,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfDict,GrapeCity.Documents.Pdf.Filters.ImageFilterType@,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@)">
            <summary>
            Reads stream content using appropriate filters.
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <param name="length"></param>
            <param name="pd"></param>
            <param name="imageFilterType"></param>
            <param name="imageFilterDecodeParams"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.FlateDecodeFilter">
            <summary>
            FlateDecode filter, uses ZIP compression.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ImageDecodeFilter">
            <summary>
            Dummy filter used in current implementation to read content
            encoded with Image filters:
            CCITTFaxDecode, JBIG2Decode, DCTDecode, JPXDecode.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.LZWDecodeFilter">
            <summary>
            LZWDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.Predictor">
            <summary>
            Based on code from old PdfParser, should be reviewed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doSubLine(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return the value of the Sub algorithm on the line (compare bytes to
            the previous byte of the same color on this line).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doUpLine(System.Byte[],System.Byte[])">
            <summary>
            Return the value of the up algorithm on the line (compare bytes to
            the same byte in the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doAverageLine(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return the value of the average algorithm on the line (compare
            bytes to the average of the previous byte of the same color and 
            the same byte on the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doPaethLine(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the value of the average algorithm on the line (compare
            bytes to the average of the previous byte of the same color and 
            the same byte on the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.paeth(System.Int32,System.Int32,System.Int32)">
            <summary>
            The paeth algorithm
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.RunLengthDecodeFilter">
            <summary>
            RunLengthDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontEmbedMode">
            <summary>
            Specifies available font embedding modes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed">
            <summary>
            The font is not embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset">
            <summary>
            A subset of the font is embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedFullFont">
            <summary>
            The whole font is embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubsetNoForms">
            <summary>
            A subset of the font is embedded for static content.
            <para>
            If the font is used in the Acroform, 
            a non-embedded PDF font will be associated with the form fields.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontHandlerCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandlerCollection.TryGetFontHandler(GrapeCity.Documents.Text.Font,GrapeCity.Documents.Pdf.FontHandler@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Text.Font"/>.
            </summary>
            <param name="font">The raw font.</param>
            <param name="pdfFont">OUT: the PdfFont object, or null.</param>
            <returns>True if a PdfFont was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandlerCollection.GetFontHandler(GrapeCity.Documents.Text.Font)">
            <summary>
            Gets an existing <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Text.Font"/>,
            or creates a new one if such font does not exist.
            </summary>
            <param name="font">The font.</param>
            <returns>The existing or newly created PdfFont.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandlerCollection.HasUsedFonts">
            <summary>
            Gets a value indicating whether the current collection contains
            at least one <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> object with the <see cref="P:GrapeCity.Documents.Pdf.FontHandler.UsedInDocument"/> property set.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandlerCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontHandler">
            <summary>
            Represents and manages a <see cref="T:GrapeCity.Documents.Text.Font"/>
            used in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.#ctor(GrapeCity.Documents.Text.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> class.
            </summary>
            <param name="font">The <see cref="T:GrapeCity.Documents.Text.Font"/> associated with the current FontHandler.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.BeforeSave">
            <summary>
            Called before saving the document.
            Can be used to prepare internal objects, for example embedded data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.HasPdfFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> owns specified PDF font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FontHandlerCollection"/> containing this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Text.Font"/> associated with this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.EmbedMode">
            <summary>
            Gets or sets the font embedding mode.
            <para>
            By default this property is unspecified (null), and the actual embedding mode depends on 
            whether or not the <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Font"/> is one of <see cref="T:GrapeCity.Documents.Pdf.StandardFonts"/>.</para>
            <para>For standard fonts, <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode"/> determines the embedding mode.</para>
            <para>For all other fonts, <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode"/> determines the embedding mode.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Text.Utf32CodeSet"/> object that specifies which
            Unicode characters will be included in the embedded subset in addition to the glyphs 
            used in the static document content.
            <para>By default this property is null.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.FontSubsetFlags">
            <summary>
            Gets or sets the flags that allow fine-tuning the creation of subset for this font.
            <para>By default this is null, which indicates that GcPdf will select appropriate flags automatically.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.UsedInDocument">
            <summary>
            Gets a value indicating whether the current font is actually used in the document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.Function">
            <summary>
            Base abstract class for objects defining PDF function object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.Function.InCount">
            <summary>
            Gets a count of input values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.Function.Domain">
            <summary>
            Gets or sets an array of 2 × m numbers, where m is the number of input values.
            For each i from 0 to m − 1, Domain2i must be less than or equal to Domain2i+1 ,
            and the ith input value, xi , must lie in the interval Domain2i ≤ xi ≤ Domain2i+1.
            Input values outside the declared domain are clipped to the nearest boundary value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.Function.Range">
            <summary>
            Gets or sets an array of 2 × n numbers, where n is the number of output values.
            For each j from 0 to n − 1, Range2j must be less than or equal to Range2j+1, and the jth output value, yj,
            must lie in the interval Range2j ≤ yj ≤ Range2j+1.
            Output values outside the declared range are clipped to the nearest boundary value.
            If this entry is absent, no clipping is done.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.Function.GetCalculator(System.Int32)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Functions.Function.ICalculator"/> object which can be used to calculate function's value,
            returns null if function definition is invalid or not supported.
            </summary>
            <param name="outCount">The count of out values which function should return.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.Function.IsSame(GrapeCity.Documents.Pdf.Functions.Function)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/>.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> object.</param>
            <returns>true if the provided <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/>; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.Function.IsSame(GrapeCity.Documents.Pdf.Functions.Function,GrapeCity.Documents.Pdf.Functions.Function)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.Function.ICalculator">
            <summary>
            Allows calculating the value of <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/>,
            returned by <see cref="M:GrapeCity.Documents.Pdf.Functions.Function.GetCalculator(System.Int32)"/> method.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.FunctionExponentialInterpolation">
            <summary>
            Defines PDF Exponential Interpolation function (Type 2 function).
            Defines an exponential interpolation of one input value and n output values:
            f(x) = y0 ... yn-1
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionExponentialInterpolation.C0">
            <summary>
            Gets or sets an array of n numbers defining the function result when x = 0.0.
            Default value: [ 0.0 ].
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionExponentialInterpolation.C1">
            <summary>
            Gets or sets an array of n numbers defining the function result when x = 1.0.
            Default value: [ 1.0 ].
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionExponentialInterpolation.Exponent">
            <summary>
            Gets or sets the interpolation exponent.
            Each input value x will return n values, given by:
            Yj = C0j + Xn × (C1j - C0j), for 0 &lt;= j &lt; n.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.FunctionExponentialInterpolation.IsSame(GrapeCity.Documents.Pdf.Functions.Function)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.FunctionPostScript">
            <summary>
            Defines PDF PostScript Calculator function (Type 4 function).
            PostScript Calculator functions is represented as a stream containing code written
            in a small subset of the PostScript language.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionPostScript.Script">
            <summary>
            Gets or sets the PostScript script used to calculate function.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.FunctionPostScript.IsSame(GrapeCity.Documents.Pdf.Functions.Function)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.InterpolationOrder">
            <summary>
            Defines possible interpolation orders.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.InterpolationOrder.Linear">
            <summary>
            Linear interpolation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.InterpolationOrder.CubicSpline">
            <summary>
            Cubic spline interpolation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.FunctionSampled">
            <summary>
            Defines PDF sampled function (Type 0 function).
            Sampled functions use a sequence of sample values (contained in a stream) to provide
            an approximation for functions whose domains and ranges are bounded.
            The samples are organized as an m-dimensional table in which each entry has n components.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.Size">
            <summary>
            Gets or sets an array of m positive integers specifying the number of samples in each input dimension
            of the sample table.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.BitsPerSample">
            <summary>
            Gets or sets the number of bits used to represent each sample.
            (If the function has multiple output values, each one occupies BitsPerSample bits.)
            Valid values are 1, 2, 4, 8, 12, 16, 24, and 32.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.InterpolationOrder">
            <summary>
            Gets or sets the interpolation order of interpolation between samples.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.Encode">
            <summary>
            Gets or sets an array of 2 × m numbers specifying the linear mapping of input values into the domain of
            the function’s sample table.
            Default value (if null): [ 0 (Size0 - 1) 0 (Size1 - 1) ... ].
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.Decode">
            <summary>
            Gets or sets an array of 2 × n numbers specifying the linear mapping of sample values into the range
            appropriate for the function’s output values.
            Default value: same as the value of <see cref="P:GrapeCity.Documents.Pdf.Functions.Function.Range"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionSampled.SamplesTable">
            <summary>
            Gets or sets the samples table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.FunctionSampled.IsSame(GrapeCity.Documents.Pdf.Functions.Function)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.FunctionStitching">
            <summary>
            Defines PDF Stitching function (Type 3 function).
            Define a stitching of the subdomains of several 1-input functions to produce a single new 1-input function.
            Since the resulting stitching function is a 1-input function,
            the domain is given by a two-element array, [ Domain0 Domain1 ].
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Functions">
            <summary>
            Gets or sets an array of k 1-input functions making up the stitching function.
            The output dimensionality of all functions must be the same,
            and compatible with the value of <see cref="P:GrapeCity.Documents.Pdf.Functions.Function.Range"/> if it is present.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Bounds">
            <summary>
            Gets or sets an array of k − 1 numbers that, in combination with <see cref="P:GrapeCity.Documents.Pdf.Functions.Function.Domain"/>,
            define the intervals to which each function from the <see cref="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Functions"/> array applies.
            <see cref="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Bounds"/> elements must be in order of increasing value, and each value must be within
            the domain defined by <see cref="P:GrapeCity.Documents.Pdf.Functions.Function.Domain"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Encode">
            <summary>
            Gets or sets an array of 2 × k numbers that, taken in pairs,
            map each subset of the domain defined by <see cref="P:GrapeCity.Documents.Pdf.Functions.Function.Domain"/> and the
            <see cref="P:GrapeCity.Documents.Pdf.Functions.FunctionStitching.Bounds"/> array to the domain of the corresponding function.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.FunctionStitching.IsSame(GrapeCity.Documents.Pdf.Functions.Function)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ICMapProvider">
            <summary>
            This interface is used by <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> to request predefined CMap tables
            from external sources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ICMapProvider.GetCMap(System.String)">
            <summary>
            Returns the predefined <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> object by name.
            </summary>
            <param name="name">The CMap name.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfAConformanceLevel">
            <summary>
            Defines the PDF conformance levels.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.None">
            <summary>
            Without PDF/A conformance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA1a">
            <summary>
            PDF/A 1a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA1b">
            <summary>
            PDF/A 1b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2a">
            <summary>
            PDF/A 2a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2b">
            <summary>
            PDF/A 2b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2u">
            <summary>
            PDF/A 2u conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3a">
            <summary>
            PDF/A 3a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3b">
            <summary>
            PDF/A 3b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3u">
            <summary>
            PDF/A 3u conformance level.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDocumentState">
            <summary>
            Defines the possible states of a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.None">
            <summary>
            None, no special state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.Saving">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> currently executed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.Generating">
            <summary>
            The content of the document currently generated via StartDoc() / EndDoc() methods.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SaveMode">
            <summary>
            Defines the modes of saving a PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.Default">
            <summary>
            Default mode. In this mode, the PDF is not linearized and incremental update is not used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.Linearized">
            <summary>
            The document is saved as a linearized ("fast web view") PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.IncrementalUpdate">
            <summary>
            The document is saved using incremental update.
            <para>
            Note that this method is not applicable if the current PDF was created from scratch
            (i.e. an existing PDF was not loaded). In that case this value will be ignored
            and <see cref="F:GrapeCity.Documents.Pdf.SaveMode.Default"/> will be used.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IDocProvider">
            <summary>
            For internal use.
            Allows getting the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owner object implementing this interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IDocProvider.Doc">
            <summary>
            Gets the owner <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument">
             <summary>
             Represents a PDF document.
             <para>The object model provided by this class follows the PDF 1.7 Reference specification.</para>
             </summary>
             <remarks>
             <para>To create a PDF document, create an instance of the GcPdfDocument class.</para>
            
             Two approaches are possible for adding content and saving the document:
             <list type="bullet">
                 <item>
                     <term>Direct mode</term>
                     <description>In this mode, you add pages to the document and draw on them (see below) in arbitrary order.
                         In particular, you can modify pages that have been already created.
                         When done, use <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> method to save the document.
                         This mode is convenient but uses temporary files, so is somewhat less efficient than sequential mode described next.
                     </description>
                 </item>
                 <item>
                     <term>Sequential mode</term>
                     <description>
                         To use this mode, you call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> prior to any other operations on the document.
                         You can then add pages and draw on them, but you can only draw on the last (current) page.
                         All content is immediately added to the underlying stream without the use of temporary files.
                         To complete creating the document, you must call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/>.
                     </description>
                 </item>
             </list>
            
             The pages of the document are accessible via the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.Pages"/> collection.
             To add content, use <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/> property to get a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> for a page.
             (In sequential mode, only the currently last page of the document can be drawn on.)
             You can then use that graphics object to draw the desired content.
             </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.c_ValidDocID">
            <summary>
            The Doc ID which is interpreted as valid not depending on <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.DocID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.PartialGraphicsStateParams">
            <summary>
            The global, document level, collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite"/> objects which are shared between
            all document's pages, rendered with using <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.HatchTillingPatterns">
            <summary>
            The global dictionary of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingPattern"/> objects used to render <see cref="T:GrapeCity.Documents.Drawing.HatchBrush"/>
            objects. These objects shared between all document's pages, rendered with using <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.ObjIDs">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ObjIDs"/> object manages ID of offsets of PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.Writer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/> used to generate PDF content,
            initialized in the Save() method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.State">
            <summary>
            The document's state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument._externalStream">
            <summary>
            External stream passed in <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.EmptyResourceDictionary">
            <summary>
            The global empty <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> used by <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>, for example, it used
            then rendering uncolored tilling patterns.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_OutputIntents">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.IncrementalUpdate">
            <summary>
            Indicates whether the document is saved using incremental updates.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestionationsInt">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.NamedDestinations"/> dictionary contains document's named destinations,
            saved to PDF as Dests in Document Catalog or as Dests in Names.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.Dests">
            <summary>
            Represents Dests entry in Document Catalog.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.Names">
            <summary>
            The document's Names dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.DocID">
            <summary>
            The counter is incremented each time the document is saved.
            All document's objects have the same counters and they are incremented
            by <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetDocID(System.Int32)"/> method too, it allows determining
            "slate" references, that occur when a document's object references object which actually
            does not belong to the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.StartObjID">
            <summary>
            The starting ID, from what the ID's of indirect objects should be started.
            The value is updated when document is loaded and when document is saved,
            it allows to implement incremental update.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.PreviousXRefPos">
            <summary>
            The position of previous xref table, that should be used in case of incremental updates.
            The value is updated when document is loaded and when document is saved,
            it allows to implement incremental update.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> class,
            optionally specifying a license key.
            </summary>
            <param name="licenseKey">The license key to use.
            If null, and <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetLicenseKey(System.String)"/> has been called, the key set with that method is used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetDocID(System.Int32)">
            <summary>
            See comments for <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.WriteRoot(System.Int32@)">
            <summary>
            Writes root PDF document object, wit catalog also written:
            -) sRGB color profile
            -) Viewer preferences
            Both written immediate AFTER catalog object
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.BeforeSave">
            <summary>
            Called directly before writing the document, prepares internal objects,
            for example, generates appearance streams for annotations if they were not
            generated by the user.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.AfterSave">
            <summary>
            Called when document's writing is finished.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.WriteCrossReferenceTable(System.Int32,System.Int32)">
            <summary>
            Writes document's cross-reference table as XRef table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.WriteCrossReferenceStream(System.Int32,System.Int32)">
            <summary>
            Writes document's cross-reference table as Cross-Reference stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveDefault">
            <summary>
            Saves document in not linearized form.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OnSavingDocument(System.Single,System.Boolean)">
            <summary>
            Fires the <see cref="E:GrapeCity.Documents.Pdf.GcPdfDocument.SavingDocument"/> event.
            </summary>
            <param name="progress">The current saving progress from 0 to 1.</param>
            <param name="canCancel">Whether the operation can be canceled.</param>
            <returns>true if operation was no canceled; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects in this document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetMinPdfVersion(System.String)">
            <summary>
            Sets the minimum PDF version that supports a feature in this document.
            E.g. if a property being set on the document was introduced in PDF 1.4,
            the property setter should call this with "1.4" as the ver parameter.
            </summary>
            <param name="ver">The minimum PDF version required by the calling code, such as "1.3" or "1.7".</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetPdfVersion(GrapeCity.Documents.Pdf.PdfAConformanceLevel)">
            <summary>
            Gets text value of PDF file version.
            </summary>
            <param name="conformanceLevel">The PDF/A conformance level.</param>
            <returns>The text PDF file version.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.HasStructTreeRoot">
            <summary>
            Gets a value indicating whether the document has structure tree.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean)">
            <summary>
            Extracts and returns all text from the current document.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>All text in the current document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(System.Boolean)">
            <summary>
            Extracts and returns all text from the current document.
            </summary>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>All text in the current document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Clear">
            <summary>
            Clears the document, removing all content and resetting all properties and settings to their initial default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean,GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions"/> object that specifies recognition options.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(System.Single,System.Single,System.Boolean,GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions"/> object that specifies recognition options.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(System.Single,System.Single,System.Boolean)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage">
            <summary>
            Adds a blank page to the document.
            <para>The size of the new page is defined by the value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/> property.</para>
            <para>If you want the new page to have a different size than the rest of the document,
            create the new page first, then set the <see cref="P:GrapeCity.Documents.Pdf.Page.Size"/> property.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String)">
            <summary>
            Saves the current PDF document to a file
            using the default mode (no incremental update, not linearized).
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>
            using the default mode (no incremental update, not linearized).
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>
            using the specified save mode.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Saves the current PDF document to a file
            using the specified save mode.
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)">
            <summary>
            Saves the current PDF document to a file,
            optionally using incremental update mode.
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>,
            optionally using incremental update mode.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)">
            <summary>
            Starts document generation in sequential mode.
            <para>
            In this mode, the content of the document is written directly into the underlying stream
            as soon as it is created, without the use of temporary files.
            When all content has been added, call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/> to finish creating the document.
            </para>
            </summary>
            <param name="stream">The stream to which the PDF document will be written.</param>
            <remarks>
            <para>
            Sequential mode may provide better performance,
            but it does not allow modifying the already created pages
            (which is possible when <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> is not called,
            and the document is saved by <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
            after all content has been added instead.)
            </para>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc">
            <summary>
            Ends document generation in sequential mode.
            This call must be preceded by a call to <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/>.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.SecurityStore">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore"/> object associated with this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/> object that contains
            information about optional PDF content (layers) in this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OutputIntents">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> objects associated 
            with the current document.
            <para>
            Note that if the document is saved as PDF/A (see <see cref="T:GrapeCity.Documents.Pdf.PdfAConformanceLevel"/>)
            and this collection is empty, a default output intent will be automatically added
            to it.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageHandlers">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> objects associated with the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm">
            <summary>
            Gets or sets the type of algorithm that is used for PDF content recognition
            when building page text maps (see <see cref="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)"/>).
            <para>
            This property affects the behavior of methods such as <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(System.Boolean)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Common.OutputRange)"/>, <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)"/>
            and other APIs that rely on text maps.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.RecognitionOptions"/> object
            that specifies the options used to build text maps (<see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageLabelingRanges">
            <summary>
            Gets the dictionary of <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> objects.
            Each key in this dictionary is the index of the first page in a labeling range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ArticleThreads">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontCollection">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.IFontCollection"/> object used when the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>
            needs to find a <see cref="T:GrapeCity.Documents.Text.Font"/> (e.g. if it is not embedded in the PDF).
            If this property is null (the default), then the <see cref="P:GrapeCity.Documents.Text.FontCollection.SystemFonts"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontHandlers">
            <summary>
            Gets the collection of font handlers associated with the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode">
            <summary>
            Gets or sets the font embedding mode.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/>.</para>
            <para>Note that this property does not affect the 14 standard PDF fonts,
            their embedding is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode"/> property.</para>
            <para>Also note that if the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is saved as PDF/A,
            and the value of this property is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>,
            the fonts are embedded anyway using the <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/> mode.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode">
            <summary>
            Gets or sets the font embedding mode for the 14 standard PDF fonts.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>.</para>
            <para>Note that if the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is saved as PDF/A,
            and the value of this property is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>,
            the standard fonts are embedded anyway using the <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/> mode.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FormEmbedUtf32CodeSet">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Text.Utf32CodeSet"/> object that specifies which
            Unicode characters to include in embedded font subsets for fonts that are used in AcroForms.
            <para>
            This value will be used for a font if that font handler's <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet"/> is null.
            </para>
            <para>
            Note that if for a font, its <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet"/> is null,
            and <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FormEmbedUtf32CodeSet"/> is null,
            and the font is used in the AcroForm, then this whole font will be embedded
            even if partial embedding is specified by <see cref="P:GrapeCity.Documents.Pdf.FontHandler.EmbedMode"/> or
            <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.AssociatedFiles">
            <summary>
            Gets the collection of embedded files associated with whole document.
            Typically it is used to identify which embedded file was the source of the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Outlines">
            <summary>
            Gets the collection of the current document outlines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations">
            <summary>
            Gets the dictionary of destinations defined in the current document.
            The keys in this dictionary are the destinations' names.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.EmbeddedFiles">
            <summary>
            Gets the dictionary of document level file attachments.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Metadata">
            <summary>
            Gets or sets the metadata associated with this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm"/> object defining common properties of the AcroForms in this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PdfACompliant">
            <summary>
            Gets or sets a value indicating whether the document is PDF/A compliant.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageOptions">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.ImageOptions"/> object that contains options
            controlling how images are processed in the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentInfo">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object that contains information about
            this document (author, title, etc).
            <para>
            Note: this property is not null by default (when a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is created)
            but it can become null after a call to <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/>
            if the loaded document does not have a document info object.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> object that represents the current document's
            structure tree as defined by PDF structure tags.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.MarkInfo">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Structure.MarkInfo"/> object that provides additional information
            relevant to specialized uses of structured PDF documents.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OpenAction">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed or an <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/>
            to be performed when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ViewerPreferences">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.ViewerPreferences"/> object that contains information
            specifying how the current document should be displayed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Security">
            <summary>
            Gets the <see cref="N:GrapeCity.Documents.Pdf.Security"/> object that manages security for
            the current document (passwords, etc).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FileID">
            <summary>
            Gets or sets the <see cref="T:FileID"/> object defining ID of this PDF document.
            Note that this ID is automatically updated if the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Clear"/> method is called.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ConformanceLevel">
            <summary>
            Gets or sets the PDF/A conformance level.
            <para>The default is none (the document does not conform to PDF/A).</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.WriteComments">
            <summary>
            Gets or sets a value indicating whether comments and some optional linebreaks will be added to the generated PDF file.
            Primarily useful for debugging.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel">
            <summary>
            Gets or sets the compression level. Default value is <see cref="F:System.IO.Compression.CompressionLevel.Fastest"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.IsCompressed">
            <summary>
            Gets a value indicating whether compression is used when saving the document.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize">
            <summary>
            Gets or sets the default page size for the document (in points).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Landscape">
            <summary>
            Gets or sets a value indicating whether newly added pages have landscape orientation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PaperKind">
            <summary>
            Gets or sets the page size for the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageRectangle">
            <summary>
            Gets a rectangle that represents the surface of the current page (in points).
            </summary>
            <remarks>
            This property returns a rectangle located at point (0,0) with
            size equal to the size of the current page. It can be used as a starting
            point for building rectangles that will be used for drawing on the page.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Pages">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects that make up the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PdfVersion">
            <summary>
            Gets or sets the PDF Version of the generated document.
            <para>
            By default the version is determined automatically based on which features are used in this document.
            Setting this property to a non-null string in the format "1.X"
            (where X is a digit from 0 to 9) overrides the automatic value with the specified one.
            </para>
            <para>Setting this property to null or an empty string reverts to the default behavior.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Lang">
            <summary>
            Gets or sets a language identifier specifying the natural language
            for all text in the document except where overridden by language specifications
            for structure elements or marked content.
            If this entry is absent, the language is considered unknown.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.UseSingleWriteOperationWithStreams">
            <summary>
            For internal use.
            Gets or sets a value indicating whether streams should be compressed
            using single operation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.WriteNamedDestinationsToNames">
            <summary>
            For internal use.
            Gets or sets a value indicating whether <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> objects in <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations"/>
            dictionary should be saved in Dests entry of Names subdictionary of Document Catalog.
            Note! This flag is NOT used if loaded document contains named destinations.
            </summary>
        </member>
        <member name="E:GrapeCity.Documents.Pdf.GcPdfDocument.SavingDocument">
            <summary>
            Occurs periodically when the document is being saved or exported.
            Can be used to implement a progress indicator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.CMapProvider">
            <summary>
            Gets or sets an object that implements the <see cref="T:GrapeCity.Documents.Pdf.ICMapProvider"/> interface.
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> uses that interface to obtain an <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/>
            if it specified by name in the PDF file.
            <para>
            By default GcPdf tries to initialize this property automatically in the
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>'s constructor with the <b>CMapProvider.Instance</b>
            defined in the optional GrapeCity.Documents.Pdf.Resources package
            (which in this case needs to be explicitly referenced by the application).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FloatFormat">
            <summary>
            For internal use.
            Gets or sets the format string applied to float values written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetLicenseKey(System.String)">
            <summary>
            Sets the license key.
            </summary>
            <param name="key">The license key to set, or null to remove any previously set key.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetFontText(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Gets the set of unicode characters rendered with specified font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetEncodedFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns original <see cref="T:GrapeCity.Documents.Text.Font"/> object which represented in document by specified <paramref name="pdfFont"/>.
            Note! This method returns NOT null value only for fonts which were produced by <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetFonts">
            <summary>
            Gets the list of fonts in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
            <returns>The list of fonts present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetImages(System.Single,System.Single,System.Boolean)">
            <summary>
            Gets the list of images in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            <para>Note that for large documents this method can take a while to complete,
            as it enumerates the content streams of all pages in the document.</para>
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on pages.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on pages.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>The list of images present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetImages(System.Single,System.Single)">
            <summary>
            Gets the list of images in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            <para>Note that for large documents this method can take a while to complete,
            as it enumerates the content streams of all pages in the document.</para>
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on pages.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on pages.</param>
            <returns>The list of images present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in FDF format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in FDF format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in XFDF format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in XFDF format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in XML format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in XML format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXFDF(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in XFDF format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXFDF(System.String)">
            <summary>
            Imports the document's form data from a file in XFDF format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXML(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in XML format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXML(System.String)">
            <summary>
            Imports the document's form data from a file in XML format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromFDF(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in FDF format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromFDF(System.String)">
            <summary>
            Imports the document's form data from a file in FDF format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromCollection(System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IList{System.String}}[])">
            <summary>
            Imports the document's form data from a key/value collection.
            <para>
            The keys are field names, the values are collections of field values.</para>
            <para>
            For nested fields, the field's name should include
            all its parents' names delimited by dots, e.g.
            <b>TopParent.Parent.MyField</b>.</para>
            <para>
            This method may be especially useful when importing form data
            submitted by a web page.</para>
            </summary>
            <param name="fieldValues">The collection of field names and their values.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromCollection(System.Collections.Generic.KeyValuePair{System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}}[])">
            <summary>
            Imports the document's form data from a key/value collection.
            <para>
            The keys are collections of strings representing fully qualified
            field names including all parents if they exist,
            from the top parent to the field itself,
            e.g. <b>new string[] { "TopParent", "Parent", "MyField" }</b>.</para>
            <para>
            The values are collections of field values.</para>
            <para>
            This method may be especially useful when importing form data
            submitted by a web page.</para>
            </summary>
            <param name="fieldValues">The collection of field names and their values.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.LH">
            <summary>
            Gets the license handler for the current document.
            Use it to test whether to limit licensed actions.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.IsLicensed">
            <summary>
            Gets a value indicating whether the current document is fully licensed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.DrawLicenseWarning(GrapeCity.Documents.Pdf.GcPdfGraphics,System.String)">
            <summary>
            Draws licensed warning.
            </summary>
            <param name="graphics"></param>
            <param name="text"></param>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.c_GenericHintTableLength">
            <summary>
            The length of generic hint table in bytes,
            see page 1048 PDF1.7
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizedEmbeddedFileStreams">
            <summary>
            List of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> objects serialized separately in linearized mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetExtendedHintTableLength(System.Int32)">
            <summary>
            Returns length of the extended hint table in bytes.
            </summary>
            <param name="sharedObjectReferencesCount"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveLinearized">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/> int linearized form.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.IsLinearized">
            <summary>
            Internal method indicating whether generated document should be saved in linearized format,
            in current version GcPdf can only generate linearized documents from scratch.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Linearized">
            <summary>
            Gets a value indicating whether the PDF that was loaded into this GcPdfDocument was linearized ("fast web view").
            <para>Note that this value only indicates the linearization of the original PDF that was loaded,
            if the current document is saved its linearization is not affected by this property.
            To save the current document as linearized, pass <see cref="F:GrapeCity.Documents.Pdf.SaveMode.Linearized"/> when saving the PDF
            using one of the save methods:
            </para>
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.Page">
            <summary>
            The linked page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.PageLength">
            <summary>
            Length of page's objects in bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.PageObjectCount">
            <summary>
            Count of page's objects, including page's dict itself.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.ContentStreamOffset">
            <summary>
            Offset of the content stream object relative to page object offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.ContentStreamLength">
            <summary>
            Length of the content stream object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.FirstObjectID">
            <summary>
            The object number of the first object in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.FirstObjectOffset">
            <summary>
            The location of the first object in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.ObjectCount">
            <summary>
            The number of objects in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.Length">
            <summary>
            The length of the object group in bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog">
            <summary>
            For internal use.
            The <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> used to log PDF parser operations.
            By default this field is null, set it to instance of <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> if you want
            to get possible parser warnings, info messages etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument._documentCatalog">
            <summary>
            The Document Catalog PDF dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.Parser">
            <summary>
            Initialized when document loaded from a stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ReadDocumentCatalog(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Reads PDF Root dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])">
            <summary>
            Loads the current document from a specified input stream,
            overwriting the current content of the document.
            The stream should contain valid PDF data,
            and must be kept open while reading or modifying the document.
            If the document is modified, it can be saved using the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> method.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object used for loading the document content.</param>
            <param name="password">The password used to open the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)">
            <summary>
            Loads the current document from a specified input stream,
            overwriting the current content of the document.
            The stream should contain valid PDF data,
            and must be kept open while reading or modifying the document.
            If the document is modified, it can be saved using the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> method.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object used for loading the document content.</param>
            <param name="password">The password used to open the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetStreamObjectData(System.Int32)">
            <summary>
            For internal use.
            Returns the <see cref="T:System.IO.Stream"/> object representing data of specified PDF stream object,
            returns null if object with specified ID does not exist.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.LoadStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> object that was passed
            to the Load() method that was used to load this document,
            or null if Load() was not called.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,GrapeCity.Documents.Pdf.Security.PdfPassword)"/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)">
            <summary>
            Merges all or some pages from a specified <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>
            into the current document.
            </summary>
            <param name="sourceDoc">The source document which is to be merged into the current document.</param>
            <param name="options">Options controlling what and how to merge.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetDocumentStats">
            <summary>
            For internal use.
            Gets statistics describing the current PDF.
            </summary>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats"/> object containing the stats data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts">
            <summary>
            Optimizes font usage by merging subsets of same fonts and by removing duplicate
            and unused fonts.
            <para>This method uses the default values from <see cref="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions"/>.</para>
            </summary>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats"/> object that contains statistics about
            fonts usage prior to the optimization.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts(GrapeCity.Documents.Pdf.OptimizeFontsOptions)">
            <summary>
            Optimizes font usage by merging subsets of same fonts, and by removing duplicate
            and unused fonts.
            </summary>
            <param name="options">An <see cref="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions"/> object that specifies optimization options.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats"/> object that contains statistics about
            fonts usage prior to the optimization.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats">
            <summary>
            For internal use.
            Contains various statistics about a PDF document,
            such as total size of pages etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.PagesSize">
            <summary>
            Gets the total size of the pages' content streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.FormXObjectsSize">
            <summary>
            Gets the total size of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects' content streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.FontsSize">
            <summary>
            Gets the total size of embedded fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.ImagesSize">
            <summary>
            Gets the total size of images.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats">
            <summary>
            Represents statistical data about fonts and font optimizations.
            An instance of this class is created and returned by the 
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.Fonts">
            <summary>
            Gets the list of fonts that were processed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontReplacements">
            <summary>
            Gets a list of tuples describing font replacements.
            Each element is a pair of values:
            <list type="bullet">
            <item><term>Tuple.Item1</term><description>The font that has been replaced.</description></item>
            <item><term>Tuple.Item2</term><description>The font that replaced <b>Tuple.Item1</b>.</description></item>
            </list>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo">
            <summary>
            Represents information about a font and its usage in a PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.Name">
            <summary>
            Gets the font name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.Subsets">
            <summary>
            Gets the list of subsets.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.MergeInfos">
            <summary>
            Gets the list of fonts merge infos.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo">
            <summary>
            Represents information about fonts that were merged.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo.NewFont">
            <summary>
            Gets the data of the font created as the result of merging.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo.MergedFonts">
            <summary>
            Gets the list of PDF fonts that were merged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo">
            <summary>
            Represents a font subset and its usage in a PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.SubsetName">
            <summary>
            Gets the name of the subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object associated with this subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Same">
            <summary>
            Gets the list of font subsets that define the exact same set
            of characters as the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Contains">
            <summary>
            Gets the list of font subsets that define sets of characters
            which are fully contained in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.ContainedIn">
            <summary>
            Gets the list of font subsets that define sets of characters
            which contain all characters in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Intersects">
            <summary>
            Gets the list of font subsets that define sets of characters
            that intersect with the set of characters defined in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Conflicts">
            <summary>
            Gets the list of font subsets that define sets of characters
            which conflict with the set of characters defined in the current subset.
            A conflict occurs if the same PDF code is associated with different
            Unicode character or glyph in different font subsets.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Processor.ShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Called by text operators other than "TJ".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Processor.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Called by "TJ" operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies all <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.RedactAnnotation},GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies a list of specified <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactAnnotations">The list of <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> objects to apply.</param>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(GrapeCity.Documents.Pdf.Annotations.RedactAnnotation,GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies a specified <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactAnnotation">The <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> object to apply.</param>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate">
            <summary>
            Defines the method signature called for each page when <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)"/>
            is called.
            </summary>
            <param name="bitmap">The <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> generated for the page.</param>
            <param name="pageIndex">The index of the page in a document for which the bitmap was generated.</param>
            <param name="index">The index in order, changes from to 0 to the count of pages - 1.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)">
            <summary>
            Iterates over the document pages and generates a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> for 
            each page in the <paramref name="pageRange"/>.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="saveMethod">The callback method called for each page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)">
            <summary>
            Iterates other the document pages and generates a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> for 
            each page in the <paramref name="pageRange"/>.
            </summary>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="saveMethod">The callback method called for each page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in PNG format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in PNG format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in BMP format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in BMP format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in JPEG format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in JPEG format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in GIF format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file name.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in GIF format, one page per output file.
            <para>
            The <paramref name="fileName"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="fileName"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="fileName">The output file name.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a stream in TIFF format, one page per frame.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a stream in TIFF format, one page per frame.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a file in TIFF format, one page per frame.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a file in TIFF format, one page per frame.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.TimeSeedForTimeStamp">
            <summary>
            For internal use.
            The value used to generate time-stamp token, if null them it will be generated based on current time.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.SignatureContentsOffset">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains offset of Contents property of generated signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.SignatureContentSize">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains the size of reserved area for signature binary data.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.SignatureByteRangeOffset">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains offset of ByteRange property of generated signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.SignatureProperties">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object passed in Sign(...) method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStampProperties">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> object passed in TimeStamp(...) method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream)">
            <summary>
            Signs and saves the current document to a stream.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String)">
            <summary>
            Signs and saves the current document to a file.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Signs and saves the current document to a stream.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Signs and saves the current document to a file.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,System.Boolean)">
            <summary>
            Signs and saves the current document to a file.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,System.Boolean)">
            <summary>
            Signs and saves the current document to a stream.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream)">
            <summary>
            Adds a document time stamp and saves the current document to a stream.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="stream">The output stream. The stream must support read and seek operations.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.String)">
            <summary>
            Adds a document time stamp and saves the current document to a file.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Adds a document time stamp and saves the current document to a stream.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="stream">The output stream. The stream must support read and seek operations.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Adds a document time stamp and saves the current document to a file.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Common.OutputRange)">
            <summary>
            Searches for all occurrences of a text in a range of the document's pages.
            <para>
            Note that the results are affected by the value of <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/> property.
            </para>
            </summary>
            <param name="findTextParams">The text searching parameters.</param>
            <param name="searchRange">The search scope.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfImageInfo">
            <summary>
            Represents an image and its locations in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageInfo.Image">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.IPdfImage"/> object representing the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageInfo.Locations">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.PdfImageLocation"/> objects defining positions in the document where this image is present. 
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfImageLocation">
            <summary>
            Represents a position of an image in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageLocation.Page">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Page"/> that references the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageLocation.PageBounds">
            <summary>
            Gets the bounds of the image on <see cref="P:GrapeCity.Documents.Pdf.PdfImageLocation.Page"/> relative to top-left corner.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ExportFormDataOptions">
            <summary>
            Represents options used by
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/> and
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/> methods.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ExportFormDataOptions.ExportPasswordFields">
            <summary>
            Gets or sets a value indicating whether values of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/> fields with
            the property <see cref="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Password"/> set to <b>true</b> should be exported.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineMergeMode">
            <summary>
            Specifies how outlines are handled when merging two documents.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)"/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.None">
            <summary>
            Outlines from the source document are ignored.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.All">
            <summary>
            All outlines from the source document will be copied to the destination document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.LinkedWithMergedObjects">
            <summary>
            Only outlines linked with merged objects will be copied to the destination document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MergeDocumentOptions">
            <summary>
            Represents the various options controlling the behavior of the 
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.ForceDirectCopy">
            <summary>
            Gets or sets a value indicating whether do NOT parse content streams and copy all objects referenced
            from resource streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.Index">
            <summary>
            Gets or sets the starting position in the destination document
            at which the pages of the source document will be inserted.
            <para>-1 (the default) indicates that the pages will be added to the end of the document.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.PagesRange">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Common.OutputRange"/> object specifying the range of the pages
            in the source document that should be merged into the destination document.
            <para>Null (the default) indicates that all pages will be merged.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyNamedDestinations">
            <summary>
            Gets or sets a value indicating whether to copy <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations"/>.
            By default this property is false.
            <para>
            Note that if the source document contains destinations with same names
            as in the target document, then those destinations will be skipped.
            A more complex logic can be implemented programmatically.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyDocumentLevelEmbeddedFiles">
            <summary>
            Gets or sets a value indicating whether to copy files embedded in the source document
            to the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.EmbeddedFiles"/> collection.
            <para>The default is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyFields">
            <summary>
            Gets or sets a value indicating whether to copy Acroform fields.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.OutlineMergeMode">
            <summary>
            Gets or sets the outline merge mode.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.OutlineMergeMode.None"/>
            (in this mode, outlines from the source document are ignored).</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.DestinationOutlines">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/>
            to which the outlines from the source document linked to the merged pages
            will be copied.
            <para>
            This can be either the target document's root <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.Outlines"/> collection,
            or one of its nested nodes' <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Children"/> collections.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.MergeStructTree">
            <summary>
            Gets or sets a value indicating whether to merge structure trees.
            <para>The default is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.DestinationStructElements">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElementCollection"/>
            to which the structure elements from the source document
            will be copied.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ICloneForMergeImplementor">
            <summary>
            Indicates whether an object supports CreateForMerge() and AssignForMerge() methods.
            Note! All <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> implement this method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ICloneForMergeImplementor.CreateForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Creates a new instance of object to use in another document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ICloneForMergeImplementor.AssignForMerge(GrapeCity.Documents.Pdf.ICloneForMergeImplementor,GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Assigns properties to the object created by <see cref="M:GrapeCity.Documents.Pdf.ICloneForMergeImplementor.CreateForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)"/>
            from <paramref name="source"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IContentStreamsHolder">
            <summary>
            Common interface for objects owning content streams and resource dictionary used by these content streams.
            Used in documents merge operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IContentStreamsHolder.ResourceDictionary">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> owned by this <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IContentStreamsHolder.EnumerateContentStreams(System.Func{System.IO.Stream,System.Boolean})">
            <summary>
            Enumerates content streams owned by this <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MergeDocumentsData">
            <summary>
            For internal use.
            Contains information used in document's merge operation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Options">
            <summary>
            The merge options.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.SourceDoc">
            <summary>
            The source <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Doc">
            <summary>
            The destination <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.DifferedActions">
            <summary>
            List of <see cref="T:System.Action"/> delegates which will be called when merging finished.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.ObjectsMap">
            <summary>
            Used to map objects in source document to their copies in destination document (<see cref="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Doc"/>).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.IDsMap">
            <summary>
            Used to map <see cref="T:GrapeCity.Documents.Pdf.PdfObjID"/> in source document to detached objects in destination document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.ParseContentStreams">
            <summary>
            Indicates whether to parse content streams to determine objects which are really used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.CurrentResourceDictionary">
            <summary>
            The current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> which should be used if some <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/> object
            does not have resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MergeDocumentsData.CheckFieldName(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.AcroForms.FieldCollection)">
            <summary>
            Generates unique name for the field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MergeDocumentsData.DifferedActionInfo">
            <summary>
            Contains information about differed action which should be performed when merging finished.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.DifferedActionInfo.SrcObject">
            <summary>
            The source object in <see cref="F:GrapeCity.Documents.Pdf.MergeDocumentsData.SourceDoc"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.DifferedActionInfo.NewObject">
            <summary>
            The destination object in <see cref="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Doc"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.DifferedActionInfo.Callback">
            <summary>
            The callback delegate.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions">
            <summary>
            Represents options controlling the behavior of the
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts(GrapeCity.Documents.Pdf.OptimizeFontsOptions)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OptimizeFontsOptions.MergeSubsets">
            <summary>
            Gets or sets a value indicating whether to merge subsets of the same font into a single subset.
            The default is <see langword="true"/>.
            <para>Note that currently only TrueType fonts are supported.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OptimizeFontsOptions.RemoveUnusedGlyphs">
            <summary>
            Gets or sets a value indicating whether to remove unused glyphs from fonts.
            The default is <see langword="true"/>.
            <para>Note that currently only TrueType fonts are supported.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SaveAsImageOptions">
            <summary>
            Represents options used by the SaveAs* methods on <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> and <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            such as <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>, etc.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawingStopwatch">
            <summary>
            For internal use.
            Gets or sets the <see cref="T:System.Diagnostics.Stopwatch"/> object which is started when Page.Draw(...) is called.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Print">
            <summary>
            Gets or sets a value indicating whether the image is generated for printing.
            The visibility of PDF elements may depend on the output target,
            they can be visible in a preview but hidden when printed, and vice versa.
            <para>
            This property is now obsolete. All methods accepting <b>SaveAsImageOptions</b>
            as a parameter also now accept a <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.
            Its properties should be used instead.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Zoom">
            <summary>
            Gets or sets the zoom factor. The default is 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.BackColor">
            <summary>
            Gets or sets the background color. The default is white.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Resolution">
            <summary>
            Gets or sets the resolution of the generated images. The default is 96.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawAnnotations">
            <summary>
            Gets or sets a value indicating whether to render annotations. The default is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawFormFields">
            <summary>
            Gets or sets a value indicating whether to render form fields. The default is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache">
            <summary>
            Gets or sets a value indicating whether to use rendering cache.
            <para>
            This property is true by default. Setting this property to false reduces
            memory consumption, at the cost of slower rendering speed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseGlyphBitmapCache">
            <summary>
            Gets or sets a value indicating whether glyphs are cached as bitmaps rather than as glyph paths.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.EnableFontHinting">
            <summary>
            Gets or sets a value indicating whether font hinting should be enabled for TrueType fonts.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.AllowFontSbits">
            <summary>
            Gets or sets a value indicating whether bitmaps embedded in an OpenType font should be rendered.
            <para>The default is true.</para>
            <para>This property is ignored if either <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache"/> or <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.IgnoreErrors">
            <summary>
            Gets or sets a value indicating whether to ignore errors in PDF content stream if possible.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureAppearance">
            <summary>
            Represents properties used to generate signature appearance when a document is signed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureAppearance.DateFormat">
            <summary>
            For internal use.
            The date format used to build signature text when signing document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureAppearance.FormatProvider">
            <summary>
            For internal use.
            The <see cref="T:System.IFormatProvider"/> used to build signature text when signing document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.BackColor">
            <summary>
            Gets or sets the back color, if not specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.BackColor"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Border">
            <summary>
            Gets or sets the border, if null then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Border"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Caption">
            <summary>
            Gets or sets the signature's caption.
            This field can be empty, in this case caption is generated as:
            {SignatureProperties.SignerName} ({SignatureProperties.Location})\r\n{SignatureProperties.SigningDateTime}
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.TextFormat">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object defining text format.
            <see cref="P:GrapeCity.Documents.Text.TextFormat.FontSize"/> can be 0 in this case text will be fit in available bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Image">
            <summary>
            Gets or sets the signature’s image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.CaptionImageRelation">
            <summary>
            Gets or sets a value indicating how to position the signature's caption relative to image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStamp">
            <summary>
            Encapsulates the information that is used to include timestamps
            from a Time Stamping Authority into digital signatures in PDF documents.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TimeStamp.c_DefHashAlgorithm">
            <summary>
            The default HASH algorithm used if <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/> and <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/>
            are empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String,System.String,System.String,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
            <param name="userName">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.UserName"/>.</param>
            <param name="password">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.Password"/>.</param>
            <param name="hashAlgorithm">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/>, can be null, in this case SHA-256 will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String,System.String,System.String,GrapeCity.Documents.Pdf.TimeStamp.HashDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
            <param name="userName">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.UserName"/>.</param>
            <param name="password">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.Password"/>.</param>
            <param name="hashMethod">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm">
            <summary>
            Gets or sets the ID of the hash algorithm used to encode the time-stamp request.
            If set to <see langword="null"/>, defaults to <b>SHA-256</b>.
            This property is used only if <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/> is <see langword="null"/>.
            Note that the type of algorithm depends on the time-stamp server.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod">
            <summary>
            Gets or sets the delegate used to hash the time-stamp request.
            If this value is <see langword="null"/>, the <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl">
            <summary>
            Gets or sets the uniform resource identifier for the Time Stamping Authority (TSA) server providing the time-stamp.  
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.UserName">
            <summary>
            Gets or sets the user ID to send to the Time Stamping Authority (TSA) server.  
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.Password">
            <summary>
            Gets or sets the user password to send to the Time Stamping Authority (TSA) server.  
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStamp.HashDelegate">
            <summary>
            Represents a delegate used to calculate the hash over data.
            The data can be represented by an array of bytes or by a <see cref="T:System.IO.Stream"/>.
            <para>
            Outputs the hash value and the hash algorithm OID.
            </para>
            </summary>
            <param name="dataToHash">The byte array containing the data. If <see langword="null"/>, <paramref name="streamToHash"/> will be used.</param>
            <param name="streamToHash">The stream containing the data. If <see langword="null"/>, <paramref name="dataToHash"/> will be used.</param>
            <param name="hash">OUT: The data hash value.</param>
            <param name="hashAlgorithmOid">OUT: The hash algorithm OID.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ISignatureParser">
            <summary>
            Defines properties and methods that allow parsing and validating
            an existing PDF binary signature that is stored in the <b>/Contents</b> property
            of the PDF signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningCertificate">
            <summary>
            Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> object
            that represents the certificate used to create the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningCertificateChain">
            <summary>
            Gets the chain of certificates used to create the signature.
            The first certificate in the list is the signing certificate.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningTime">
            <summary>
            Gets the signing time that is stored in the signature,
            or <see langword="null"/> if the binary signature does not contain a signing time.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Security.Signature.SigningTime"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.HashAlgorithm">
            <summary>
            Gets the name of the HASH algorithm used in the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.EncryptionAlgorithm">
            <summary>
            Gets the name of the encryption algorithm used in the signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureParser.VerifySignatureValue">
            <summary>
            Verifies the signature by checking that embedded data digest corresponds to the calculated one.
            </summary>
            <returns><see langword="true"/> if the signature is correct and corresponds to the signed data,
            <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureParser.GetSignatureData">
            <summary>
            Returns the signature data.
            </summary>
            <returns>The signature data.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.IsTcp">
            <summary>
            Gets a value indicating whether the signature is a PAdES LTV time-stamp.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator">
            <summary>
            Defines properties and methods that are used
            to sign the attribute set in a PKCS#7 signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.HashAlgorithm">
            <summary>
            Gets the ID of the hash algorithm used by this <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.DigestEncryptionAlgorithm">
            <summary>
            Gets the ID of the encryption algorithm used by this <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.SignData(System.Byte[])">
            <summary>
            Signs the given message.
            </summary>
            <param name="digest">The message to sign.</param>
            <returns>The signature binary data.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ISignatureBuilder">
            <summary>
            Defines methods used to build the signature PDF dictionary and the binary signature container
            that is stored as <b>Contents</b> entry in the signature PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)">
            <summary>
            Prepares the signature builder.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object to sign.</param>
            <param name="filter">OUT: The name of the preferred signature handler to use when validating this signature.</param>
            <param name="subFilter">OUT: The name that describes the encoding of the signature value and key information in the signature dictionary.</param>
            <param name="approximateSize">OUT: The approximate size of the signature.</param>
            <param name="customData">OUT: The custom data that is passed to the <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)"/> method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)">
            <summary>
            Builds the binary signature for a specified content.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object to sign.</param>
            <param name="content">The stream representing the signed content.</param>
            <param name="customData">The custom data returned by the <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)"/> method.</param>
            <returns>The binary signature container.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureFormat">
            <summary>
            Defines signature formats supported by <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7Detached">
            <summary>
            No data is encapsulated in the PKCS#7 signed-data field.
            SubFilter value of PDF signature is "adbe.pkcs7.detached".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7SHA1">
            <summary>
            The SHA1 digest of the byte range is encapsulated in the PKCS#7 signed-data field with ContentInfo of type Data.
            SubFilter value of PDF signature is "adbe.pkcs7.sha1".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm">
            <summary>
            Defines digest algorithms used to generate signatures.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA1">
            <summary>
            The SHA1 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA256">
            <summary>
            The SHA256 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA384">
            <summary>
            The SHA384 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA512">
            <summary>
            The SHA512 algorithm.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureProperties">
            <summary>
            Represents properties used to sign a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureDigestAlgorithm">
            <summary>
            Gets or sets the signature digest algorithm.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            <para>
            If <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7SHA1"/>,
            then this property is ignored and <see cref="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA1"/> is used.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureFormat">
            <summary>
            Gets or sets the format of the signature.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Certificate">
            <summary>
            Gets or sets a certificate used to generate a digital signature.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.ISignatureBuilder"/> object used to build the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.TimeStamp">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> object used to include
            a time-stamp in the digital signature of a PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureField">
            <summary>
            Gets or sets an AcroForm field used to store a digital signature.
            <para>
            If <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Widget"/> is not <see langword="null"/>, 
            a visual appearance will be generated based on values of the properties
            <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SigningDateTime"/>, <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.Location"/> etc.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignerName">
            <summary>
            Gets or sets the name of the person or authority signing the document.
            <para>
            NOTE: This value is used only if it is not possible to extract the name from the signature,
            for example from the certificate of the signer.
            </para>
            <para>
            By default this property is initialized with <see cref="P:System.Environment.UserName"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SigningDateTime">
            <summary>
            Gets or sets the time of signing.
            <para>
            NOTE: This value is used only if the time of signing is not available in the signature.
            For example, a time stamp can be embedded in a PKCS#7 binary data object.
            </para>
            <para>
            By default this property is initialized with the current date and time.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Location">
            <summary>
            Gets or sets the CPU host name or physical location of the signing.
            <para>
            By default this property is initialized with <see cref="P:System.Environment.MachineName"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Reason">
            <summary>
            Gets or sets the reason for the signing, such as "I agree...".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.ContactInfo">
            <summary>
            Gets or sets the information provided by the signer to enable a recipient to contact the signer
            to verify the signature (for example, a phone number).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.DocumentAccessPermissions">
            <summary>
            Gets or sets a document's access permissions granted by this signature.
            This property can be specified only for one and first signature in the document,
            this signature will be "certification signature".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureAppearance">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> object defining the visual appearance
            of the generated signature.
            <para>
            By default this property is initialized with a default instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.CreatePAdES_B_B(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object and initializes it
            so that it will create a PAdES B-B signature.
            </summary>
            <param name="certificateChain">The certificate chain. The first certificate is used for signing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.CreatePAdES_B_T(GrapeCity.Documents.Pdf.TimeStamp,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object and initializes it
            so that it will create a PAdES B-T signature.
            </summary>
            <param name="timeStamp">The <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> object.</param>
            <param name="certificateChain">The certificate chain. The first certificate is used for signing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object.s</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStampProperties">
            <summary>
            Represents properties used to time stamp a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStampProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStampProperties.#ctor(GrapeCity.Documents.Pdf.TimeStamp)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> class.
            </summary>
            <param name="timeStamp">The value to assign to the <see cref="P:GrapeCity.Documents.Pdf.TimeStampProperties.TimeStamp"/> property.
            This cannot be <see langword="null"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.TimeStamp">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> object used to get 
            the time stamp server response to be included in the
            Document TimeStamp Signature.
            <para>This value cannot be set to <see langword="null"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.SignatureField">
            <summary>
            Gets or sets an AcroForm field used to store the digital signature.
            <para>
            If this value is set to <see langword="null"/>,
            the field with a unique name will be created automatically.
            That field will have no associated <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>,
            so the signature will be invisible.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.SignatureAppearance">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> object defining
            the visual appearance of the generated signature.
            <para>
            By default this property is initialized with a default instance
            of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FoundPosition">
            <summary>
            Defines a position in the page of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where a text was found.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FoundPosition._textMapFragment">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> defining the position of found text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FoundPosition.AreSame(GrapeCity.Documents.Pdf.FoundPosition,GrapeCity.Documents.Pdf.FoundPosition)">
            <summary>
            Compares two <see cref="T:GrapeCity.Documents.Pdf.FoundPosition"/> objects.
            </summary>
            <param name="fp1"></param>
            <param name="fp2"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.PageIndex">
            <summary>
            Gets the page index.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.NearText">
            <summary>
            Gets the text near the found position.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.PositionInNearText">
            <summary>
            Gets the zero-based position of the found string in <see cref="P:GrapeCity.Documents.Pdf.FoundPosition.NearText"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.TextMapFragment">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> defining the position of found text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.Bounds">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> defining the area of found text on the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FindTextParams">
            <summary>
            Represents find text parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.#ctor(System.String,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> class.
            </summary>
            <param name="text">The text to find.</param>
            <param name="wholeWord">Indicates whether to match whole words only.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="viewState">The <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <param name="regex">Indicates whether to interpret <paramref name="text"/> as a regular expression.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.#ctor(System.String,System.Boolean,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> class.
            </summary>
            <param name="text">The text to find.</param>
            <param name="wholeWord">Indicates whether to match whole words only.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <param name="regex">Indicates whether to interpret <paramref name="text"/> as a regular expression.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.ViewState">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.Regex">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.Text"/> should be interpreted as
            a regular expression.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.IgnoreErrors">
            <summary>
            Gets a value indicating whether to ignore errors in PDF content stream if possible.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.Text">
            <summary>
            Gets the text to find.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.WholeWord">
            <summary>
            Gets a value indicating whether to match whole words only.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.MatchCase">
            <summary>
            Gets a value indicating whether to match case.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.DpiX">
            <summary>
            Gets the horizontal resolution used to calculate bounds of the found text on the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.DpiY">
            <summary>
            Gets the vertical resolution used to calculate bounds of the found text on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.CreatRegex(System.String,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> object with the <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.Regex"/> property set to true.
            </summary>
            <param name="pattern">The Regex pattern to search.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ITextLayoutHandler">
            <summary>
            Provides a mechanism for receiving callback notifications when a 
            <see cref="T:GrapeCity.Documents.Text.TextLayout"/> is rendered on a <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.TextTagBegin(GrapeCity.Documents.Pdf.GcPdfGraphics,GrapeCity.Documents.Text.TextLayout,System.Object)">
            <summary>
            Called when a text block associated with the specified tag is started.
            </summary>
            <param name="graphics">The target graphics.</param>
            <param name="textLayout">The text layout.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.TextTagEnd(GrapeCity.Documents.Pdf.GcPdfGraphics,GrapeCity.Documents.Text.TextLayout,System.Object)">
            <summary>
            Called when a text block is finished.
            </summary>
            <param name="graphics">The target graphics.</param>
            <param name="textLayout">The text layout.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.AddTextArea(System.Drawing.RectangleF)">
            <summary>
            Adds a rectangular area associated with a text.
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfGraphics">
            <summary>
            Represents a graphics object that can be used to draw on a PDF page.
            <para>
            The origin (0,0) is in the top left corner of the page, the axis go right and down.
            </para>
            <para>
            All coordinates and sizes are expressed in printer points (1/72 of an inch) by default.
            This can be changed using the <see cref="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Resolution"/> property.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.c_MaxPdfStringByteLength">
            <summary>
            Looks like Adobe Acrobat does NOT support strings
            larger than 16382 see DOCXLS-5255
            This constant specifies maximum length of the PDF string
            generated by DrawTextLayout method
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._softMaskTransform">
            <summary>
            The value of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transform"/> when last not empty soft mask was applied,
            used when state is restored in <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._resourceDictionary">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> to use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> used to generate content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._activeMatrix">
            <summary>
            Current transformation matrix which is based on the base of _dpiX, _dpiY, _canvasSize, _transform
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._metricsMatrix">
            <summary>
            Matrix build on the base of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._resolution"/>, <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._canvasBounds"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._clipStack">
            <summary>
            Stack of applied clip regions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._needRestoreGraphicsState">
            <summary>
            Indicates whether "Q" operator should be written.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transformOrClipStackChanged">
            <summary>
            Indicates whether <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._metricsMatrix"/>, <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transform"/> or <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._clipStack"/>
            were changed and should be written.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._disposed">
            <summary>
            Called when <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> disposed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._getWriterDelegate">
            <summary>
            The method returns underlying <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._initialGraphicsState">
            <summary>
            The graphics state of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer"/> at the moment when it was returned using <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._getWriterDelegate"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.#ctor(GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics,GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.EventHandler,System.Func{GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter},GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> class.
            </summary>
            <param name="initialMetrics"></param>
            <param name="doc"></param>
            <param name="resourceDictionary"></param>
            <param name="disposed">Called when <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> disposed.</param>
            <param name="getWriterDelegate">The method returns <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> object to write data.</param>
            <param name="initialNonstrokeColor">Initial non stroke color.</param>
            <param name="initialStrokeColor">Initial stroke color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckWriter">
            <summary>
            Checks whether <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer"/> is not null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)">
            <summary>
            Called before any write operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.HorzSetPos(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for horizontal text.
            </summary>
            <param name="w"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="run"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.VertSetPos(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for vertical text when glyph are vertically oriented, for japan or chinese.
            </summary>
            <param name="w"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="run"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.VertSetPosRotated(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for vertical text when glyphs rotated by 90 degrees.
            </summary>
            <param name="w"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="run"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawGlyphs(GrapeCity.Documents.Text.Font,System.UInt16[],System.Single[],System.String[],System.Int32,System.Drawing.Color,System.Numerics.Matrix3x2)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawVertGlyphs(GrapeCity.Documents.Text.Font,System.UInt16[],System.Single[],System.Single[],System.Single[],System.String[],System.Int32,System.Drawing.Color,System.Numerics.Matrix3x2)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Flush">
            <summary>
            Flushes all unwritten content to underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetMetrics(GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics)">
            <summary>
            Sets metrics of this <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> object.
            </summary>
            <param name="metrics">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics"/> structure defining the metrics.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawSignature(System.Drawing.RectangleF,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.SignatureProperties)">
            <summary>
            Draws signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawTimeStamp(System.Drawing.RectangleF,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.TimeStampProperties)">
            <summary>
            Draws time-stamp.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawWatermark(System.Drawing.RectangleF,System.String,GrapeCity.Documents.Drawing.IImage,GrapeCity.Documents.Text.TextFormat)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/> content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Writer">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.ResourceDictionary">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> used by this graphics.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.GetBlendMode">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetBlendMode(GrapeCity.Documents.Drawing.BlendMode)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreateClipRegion(GrapeCity.Documents.Drawing.IPath)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreateClipRegion(System.Drawing.RectangleF)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreatePath">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawTextLayout(GrapeCity.Documents.Text.TextLayout,System.Drawing.PointF)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawLine(System.Drawing.PointF,System.Drawing.PointF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawLines(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawRectangle(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawEllipse(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawRoundRect(System.Drawing.RectangleF,System.Single,System.Single,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawPath(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillEllipse(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillEllipse(System.Drawing.RectangleF,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRoundRect(System.Drawing.RectangleF,System.Single,System.Single,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRoundRect(System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRectangle(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRectangle(System.Drawing.RectangleF,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Brush,GrapeCity.Documents.Drawing.FillMode,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPolygon(System.Drawing.PointF[],System.Drawing.Color,GrapeCity.Documents.Drawing.FillMode)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPath(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPath(GrapeCity.Documents.Drawing.IPath,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawImage(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.IImage,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalSetClip(GrapeCity.Documents.Drawing.IClipRegion)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalRemoveClip(GrapeCity.Documents.Drawing.IClipRegion)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.IsBlendModeSupported(GrapeCity.Documents.Drawing.BlendMode)">
            <summary>
            Indicates whether this graphics implementation supports a specified blend mode.
            <para>
            The following blend modes are supported by <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>:
            </para>
            <list type="bullet">
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Normal"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.ColorBurn"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.ColorDodge"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Darken"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Difference"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Exclusion"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.HardLight"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Lighten"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Multiply"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Overlay"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Screen"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.SoftLight"/></item>
            </list>
            </summary>
            <param name="blendMode">The blend mode to check.</param>
            <returns><see langword="true"/> if the specified blend mode is supported by the current graphics,
            <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CreateTransparencyGroup(System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Composite(GrapeCity.Documents.Drawing.IGcTransparencyGroup,System.Drawing.Rectangle,System.Drawing.Point,System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetTransparencyMask(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CreateTransparencyMask(GrapeCity.Documents.Drawing.IGcTransparencyGroup,GrapeCity.Documents.Drawing.TransparencyMaskType,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)">
            <summary>
            Begins Marked Content. Writes (BMC or BDC) operator to content stream,
            each call of <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)"/> should be enclosed with
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent"/>.
            </summary>
            <param name="markedContentTag">The tag indicating the role or significance of the marked-content element to the processing application.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(GrapeCity.Documents.Pdf.MarkedContent.TagBase)">
            <summary>
            Begins Marked Content. Writes (BMC or BDC) operator to content stream,
            each call of <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)"/> should be enclosed with
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent"/>.
            </summary>
            <param name="tag">The <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagBase"/> object indicating the role or significance of the marked-content element to the processing application.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent">
            <summary>
            Ends Marked Content. Writes EMC operator to content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawForm(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Drawing.RectangleF,System.Nullable{System.Drawing.RectangleF},GrapeCity.Documents.Drawing.ImageAlign,System.Drawing.RectangleF[]@)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> using specified bounds and image alignment.
            <para>The output parameter <paramref name="imageBounds"/> receives
            the actual bounds of the drawn object(s).</para>
            </summary>
            <param name="fxo">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to draw.</param>
            <param name="destBounds">The destination rectangle.</param>
            <param name="clipBounds">The clipping rectangle, or null for no clipping.</param>
            <param name="align">The image alignment.</param>
            <param name="imageBounds">OUT: The actual bounds of the drawn image(s) (can be more than one if the image is tiled).</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawForm(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Drawing.RectangleF,System.Nullable{System.Drawing.RectangleF},GrapeCity.Documents.Drawing.ImageAlign)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> using specified bounds and image alignment.
            </summary>
            <param name="fxo">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to draw.</param>
            <param name="destBounds">The destination rectangle.</param>
            <param name="clipBounds">The clipping rectangle, or null for no clipping.</param>
            <param name="align">The image alignment.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(System.String)">
            <summary>
            Begins rendering to a layer specified by <paramref name="layerName"/>.
            That name should match the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Name"/> of an existing
            <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/>
            collection of the current document's <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layerName">The name of the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Begins rendering to the specified <paramref name="layer"/>.
            That layer should already exist in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/>
            collection of the current document's <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> that defines the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentMembership)">
            <summary>
            Begins rendering to the specified <paramref name="layer"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/> that defines the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer">
            <summary>
            Ends rendering to the layer specified by a previous call
            to <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(System.String)"/>, <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)"/>
            or <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentMembership)"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Features">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this graphics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.ImageCanBeDisposedAfterDrawing">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.TextLayoutHandler">
            <summary>
            Gets or sets an <see cref="T:GrapeCity.Documents.Pdf.ITextLayoutHandler"/> object which will receive
            notifications from the <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> when <see cref="T:GrapeCity.Documents.Text.TextLayout"/> is rendered.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Resolution">
            <summary>
            Gets the resolution of the current graphics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.CanvasSize">
            <summary>
            Gets the size of the drawing area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Transform">
            <summary>
            Gets or sets the current transformation matrix. The default is Identity matrix.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.SoftMask">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining current Soft Mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.TextRenderingMode">
            <summary>
            For internal use.
            Sets the current PDF text rendering mode, see PDF specification for more details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.Vertical">
            <summary>
            Run is vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.VerticalGlyphs">
            <summary>
            Glyphs in run are vertically oriented, chinese, japanese.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.HasCustomAdvances">
            <summary>
            Run has glyphs with custom advances.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.HasPlacements">
            <summary>
            Run has glyphs with not zero XPlacement or YPlacement.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics">
            <summary>
            Defines metrics of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Dpi">
            <summary>
            The graphics resolution.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.CanvasBounds">
            <summary>
            The bounds of canvas in pixels, resolution specified by the <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Dpi"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Rotate">
            <summary>
            The rotation can be 0, 90, 180 and 270, see <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint">
            <summary>
            Define color point in CIE color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix">
            <summary>
            Define color matrix in CalRGB color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace">
            <summary>
            Abstract base class for CIE Color spaces.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase">
            <summary>
            Base class for colors in color spaces derived from <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/> of the color.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.Gray">
            <summary>
            The gray color value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/> of the color.</param>
            <param name="gray">The color gray value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color">
            <summary>
            Defines the color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.R">
            <summary>
            The red value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.G">
            <summary>
            The green value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.B">
            <summary>
            The blue value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB"/> of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.L">
            <summary>
            The L value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.A">
            <summary>
            The A value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.B">
            <summary>
            The B value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab"/> color space of the color.</param>
            <param name="l">The L value of the color.</param>
            <param name="a">The A value of the color.</param>
            <param name="b">The B value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.Components">
            <summary>
            The values of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased"/> color space of the color.</param>
            <param name="components">The values of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace">
            <summary>
            Abstract base class for PDF color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.GetDefaultColor">
            <summary>
            Used during parsing PDF Content Stream, returns default color for this color space,
            for example, <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB"/> returns <see cref="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Black"/>.
            See PDF 1.7 specification page 287 for details.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ReadColor(System.Collections.Generic.IList{System.Object},System.Int32,GrapeCity.Documents.Pdf.Parser.IResourceProvider)">
            <summary>
            Used during parsing a PDF Content Stream, builds a <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/>
            using arguments from the <paramref name="stack"/>.
            NOTE! Returns null if the <paramref name="stack"/> contains invalid / unsupported arguments.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.TryDecodeColor(System.Single[],System.UInt32,System.UInt32@)">
            <summary>
            Decodes the color specified by the <paramref name="colorComponents"/>.
            Note! Some color spaces do not support this operation, for example, <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.TryDecodeColor(System.Int32[],GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode[],System.UInt32@)">
            <summary>
            Called from image decoders and used to convert pixels's color components to a RGB color value.
            Note! Some color spaces do not support this operation, for example, <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.GetDefaultDecode(System.Int32)">
            <summary>
            Called from image decoders, returns default Decode entry for color space, 
            see PDF specification for details, PDF1.7 page 344.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorComponentCount">
            <summary>
            Gets the count of color components per pixel. 
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.OperandCount">
            <summary>
            Gets the count of operand defining the color value in content stream,
            -1 indicates error situation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.IsColorUseTillingPattern(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,System.Func{System.String,GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase})">
            <summary>
            Returns true if specified color is a pattern color and uses tilling pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Determines whether the provided color space is the same as the current color space.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> object.</param>
            <returns>true if the provided color space is the same as the current color space; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Determines whether the specified ColorSpace instances are considered same,
            if both cs1 and cs2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase">
            <summary>
            Base class for colors associated with some <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/>.
            Note! All derived classes override Equals(...) method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.Write(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean)">
            <summary>
            Writes an operator defining the color value to the PDF content stream.
            </summary>
            <param name="w">The destination content stream.</param>
            <param name="rd">The current resource dictionary.</param>
            <param name="stroke">Indicates whether color used for stroke operations or not.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.WriteValue(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes only color value to the PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Determines whether the provided color is the same as the current color.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> object.</param>
            <returns>true if the provided color is the same as the current color; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.Equals(System.Drawing.Color)">
            <summary>
            Compares this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> and <see cref="T:System.Drawing.Color"/> value.
            Note! Alpha channel of <paramref name="c"/> not analyzed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <summary>
            Tries to convert this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> to ARGB value.
            Note! Not all color spaces supports this operation, in this case method returns false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.ColorSpace">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> of this color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Determines whether the specified ColorBase instances are considered same,
            if both c1 and c2 are null, the method returns true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.AreEquals(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,System.Drawing.Color)">
            <summary>
            Returns a value indicating whether two color values represent same color.
            Note! Alpha channel of <paramref name="c2"/> not analyzed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceColorSpace">
            <summary>
            Abstract base class for Device Color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Gray">
            <summary>
            The gray value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color"/> value.
            </summary>
            <param name="gray"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Equals(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.R">
            <summary>
            The red value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.G">
            <summary>
            The green value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.B">
            <summary>
            The blue value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> class.
            </summary>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> class.
            </summary>
            <param name="color">The color value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ToCMYK">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> color to <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Equals(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.C">
            <summary>
            The C value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.M">
            <summary>
            The M value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Y">
            <summary>
            The Y value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.K">
            <summary>
            The K value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/> class.
            </summary>
            <param name="c">The C value of the color.</param>
            <param name="m">The M value of the color.</param>
            <param name="y">The Y value of the color.</param>
            <param name="k">The K value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ToRGB">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/> color to <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile">
            <summary>
            Represents a PDF ICC profile stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> is
            the same as the current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/>.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object.</param>
            <returns>true if the provided <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/>; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.GetMetadata">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the metadata for the color space.
            <para>Notes:</para>
            <list type="number">
            <item>The stream returned by this method should be disposed after use.</item>
            <item>This method can return <see langword="null"/> if the metadata is empty.</item>
            </list>
            </summary>
            <returns>A stream with the metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.SetMetadata(System.Byte[])">
            <summary>
            Sets the metadata for the color space.
            Note! The method does NOT update <see cref="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N"/>, it is user responsibility to set it to appropriate value.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N">
            <summary>
            Gets or sets the number of color components in the color space described by the
            ICC profile data.
            <para>
            This number shall match the number of components actually in the ICC profile.
            Valid values are 1, 3, or 4.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Alternate">
            <summary>
            Gets or sets an alternate color space that shall be used in case the one specified
            in the stream data is not supported.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Range">
            <summary>
            Gets or sets an array of 2 x <see cref="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N"/> numbers [min0 max0, min1 max1, ...] that shall
            specify the minimum and maximum valid values of the corresponding color components.
            These values shall match the information in the ICC profile.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Create(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object for the specified ICC profile metadata.
            <para>
            This method returns <see langword="null"/> if <paramref name="metadata"/> has invalid data or is in unknown format.
            </para>
            </summary>
            <param name="metadata">The ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object or <see langword="null"/> if <paramref name="metadata"/> contains invalid or unsupported data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Create(System.String)">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object for ICC profile metadata loaded from the specified file.
            <para>
            This method returns <see langword="null"/> if <paramref name="fileName"/> has invalid data or is in unknown format.
            </para>
            </summary>
            <param name="fileName">The file containing the ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object or <see langword="null"/> if <paramref name="fileName"/> contains invalid or unsupported data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> instances are considered the same.
            If both v1 and v2 are <see langword="null"/>, the method returns <see langword="true"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SpecialColorSpace">
            <summary>
            Abstract base class for CIE Color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color">
            <summary>
            Defines color in <see cref="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Pattern"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Empty">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.PatternName">
            <summary>
            Gets the name of pattern resource used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Pattern">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/> used by this color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.#ctor(System.String,GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color"/> class.
            </summary>
            <param name="patternName">The pattern resource name.</param>
            <param name="pattern">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SpecialColorSpaceEx">
            <summary>
            Same as <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SpecialColorSpace"/> but supports full <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.PatternName">
            <summary>
            Gets the name of pattern resource used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.Pattern">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.Underlying">
            <summary>
            Gets the color used by <see cref="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Underlying"/> color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern,System.String,GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space of the color.</param>
            <param name="patternName">The pattern resource name.</param>
            <param name="pattern">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/>.</param>
            <param name="underlying">The base color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color">
            <summary>
            Defines the color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.Index">
            <summary>
            Gets the index of the color value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space of the color.</param>
            <param name="index">The index of the color value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase"/> color space of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.ColorComponents">
            <summary>
            The color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase"/> color space of the color.</param>
            <param name="colorComponents">The values of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Separation.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceN.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.FormXObject">
            <summary>
            Represents a PDF Form XObject.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="bounds">The bounds of the FormXObject.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="bounds">The bounds of the FormXObject.</param>
            <param name="resourceDictionary">The resource dictionary.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class using a specified page as the source.
            <para>
            Note that <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix"/> and <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds"/> properties
            are automatically adjusted to take into account the <see cref="P:GrapeCity.Documents.Pdf.Page.UserUnit"/> property of the source page.
            </para>
            </summary>
            <param name="doc">The target <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="page">The source <see cref="T:GrapeCity.Documents.Pdf.Page"/> the content of which is copied to the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            The source page can belong to another document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.GetGraphicsWriter">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> used to build content of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            This method is called from the <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)"/>
            immediate before some writing operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.GetUsedFonts">
            <summary>
            Gets the list of fonts referenced by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
            <returns>The list of fonts referenced by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.CreateList(GrapeCity.Documents.Pdf.GcPdfDocument,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Page})">
            <summary>
            Creates a list of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects using a specified list of pages as the source.
            <para>
            Note that <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix"/> and <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds"/> properties
            are automatically adjusted to take into account the <see cref="P:GrapeCity.Documents.Pdf.Page.UserUnit"/> property of the source page.
            </para>
            </summary>
            <param name="doc">The target <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects will be used.</param>
            <param name="pages">The list of the source <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects. These pages can belong to another document.</param>
            <returns>The list of created <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Layer">
            <summary>
            Gets or sets an object that specifies the layer to which this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> belongs.
            <para>
            This can be either an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds">
            <summary>
            Gets or sets the bounds of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix">
            <summary>
            Gets or sets the <see cref="T:System.Numerics.Matrix3x2"/> that maps form space into user space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Graphics">
            <summary>
            Gets an instance of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> that can be used to generate content of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState">
            <summary>
            Represents graphics state during rendering PDF content.
            Do not mix up this with <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> it defines PDF Graphics State dictionary object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Matrix">
            <summary>
            Current transform matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineWidth">
            <summary>
            The line width.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineCapStyle">
            <summary>
            The shape of the endpoints for any open path that is stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineJoinStyle">
            <summary>
            The shape of joints between connected segments of a stroked path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.MiterLimit">
            <summary>
            The maximum length of mitered line joins for stroked paths.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineDashPattern">
            <summary>
            The dash pattern to be used when paths are stroked, null indicates solid line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineDashPhase">
            <summary>
            See PDF1.7 page 217 for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.BlendMode">
            <summary>
            The blend mode to be used in the transparent imaging model.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.StrokeAlpha">
            <summary>
            Currently alpha constant for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.NonstrokeAlpha">
            <summary>
            Current alpha constant for non stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.StrokeColor">
            <summary>
            Color used for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.NonstrokeColor">
            <summary>
            Color for nonstroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.RenderingIntent">
            <summary>
            The Rendering Intent, see PDF 1.7 for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FlatnessTolerance">
            <summary>
            The flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            This is a number in the range 0 to 100;
            a value of 0 specifies the output device’s default flatness tolerance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SmoothnessTolerance">
            <summary>
            The Smoothness Tolerance. See PDF 1.7 page 509.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.AutomaticStrokeAdjustment">
            <summary>
            The alpha source flag (“alpha is shape”), specifying whether the current soft mask and alpha constant
            are to be interpreted as shape values (true) or opacity values (false).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextKnockout">
            <summary>
            The text knockout flag, which determines the behavior of overlapping glyphs within a text object
            in the transparent imaging model (see Section 5.2.7, “Text Knockout”).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ApplyOverprint">
            <summary>
            Indicates whether to apply overprint. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ApplyNonStrokeOverprint">
            <summary>
            Indicates whether to apply overprint for non stroking operations. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.OverprintMode">
            <summary>
            The overprint mode, see specification for details. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.BlackGenerationFunction">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> object which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.UndercolorRemovalFunction">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> object which maps the interval [ 0.0 1.0 ] to the interval [ −1.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TransferFunction">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/> which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SoftMask">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining current Soft Mask.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Font">
            <summary>
            The font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FontName">
            <summary>
            The name of font resource.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FontSize">
            <summary>
            The font size.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextCharacterSpacing">
            <summary>
            "Tc" Character spacing.
            A number expressed in unscaled text space units.
            Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextWordSpacing">
            <summary>
            "Tw" Word spacing.
            A number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            Processed as <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextCharacterSpacing"/> but only for space character (character with code 32).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextHorizontalScaling">
            <summary>
            "Tz" The horizontal scaling.
            A number specifying the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextLeading">
            <summary>
            "Tl" Text leading.
            A number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextRenderingMode">
            <summary>
            "Tr" Text rendering mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextRise">
            <summary>
            "Ts" Text rise.
            The distance, in unscaled text space units, to move the baseline up or down from
            its default location.
            Positive values of text rise move the baseline up.
            Adjustments to the baseline are useful for drawing superscripts or subscripts.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextMatrix">
            <summary>
            "Tm" Current text matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextLineMatrix">
            <summary>
            Current text line matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTx(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates horizontal offset which should be applied to CurrentGraphicsState.TextMatrix after drawing a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTy(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates vertical offset which should be applied to CurrentGraphicsState.TextMatrix
            after drawing a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTextRenderingMatrix">
            <summary>
            Returns matrix which converts unscaled text coordinate space to device coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.CreateGlyphStrokePen(System.Drawing.Color)">
            <summary>
            Creates stroke pen to outline a text's glyphs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret current nonstroke color as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TryGetStrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret current stroke color as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.AssignFrom(GrapeCity.Documents.Pdf.Graphics.GraphicsState)">
            <summary>
            Copies properties from another <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Clone">
            <summary>
            Creates copy of this object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ResetToDefault">
            <summary>
            Resets properties of <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState"/> to default values as they described in PDF specification.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams">
            <summary>
            Base abstract class for classes representing PDF graphics state parameter dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.LineWidth">
            <summary>
            Gets or sets the thickness of the line used to stroke a path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.LineCapStyle">
            <summary>
            Gets or sets the shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.LineJoinStyle">
            <summary>
            Gets or sets the shape to be used at the corners of paths that are stroked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.MiterLimit">
            <summary>
            Gets or sets the miter limit imposes a maximum on the ratio of the miter length to the line width.
            When the limit is exceeded, the join is converted from a miter to a bevel.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.LineDashPattern">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.RenderingIntent">
            <summary>
            Gets or sets the PDF rendering intent. See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.ApplyOverprint">
            <summary>
            Gets or sets a value indicating whether to apply overprint specified by the <see cref="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.OverprintMode"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.ApplyNonStrokeOverprint">
            <summary>
            Gets or sets a value indicating whether to apply overprint specified by the <see cref="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.OverprintMode"/>
            for non stroke operations. If not specified then <see cref="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.ApplyOverprint"/> is used for 
            non stroke operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.OverprintMode">
            <summary>
            Gets or sets overprint mode, see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Font">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDef"/> defining font's properties.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.BlackGenerationFunction">
            <summary>
            Gets or sets <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> object which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.UndercolorRemovalFunction">
            <summary>
            Gets or sets <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> object which maps the interval [ 0.0 1.0 ] to the interval [ −1.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.TransferFunction">
            <summary>
            Gets or sets <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/> which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FlatnessTolerance">
            <summary>
            Gets or sets the maximum permitted distance in device pixels between the mathematically
            correct path and an approximation constructed from straight line segments.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.SmoothnessTolerance">
            <summary>
            Gets or sets the value controls the quality of smooth shading (type 2 patterns and the sh operator)
            and thus indirectly controls the rendering performance.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.AutomaticStrokeAdjustment">
            <summary>
            Gets or sets a value indicating whether to apply automatic stroke adjustment,
            see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.BlendMode">
            <summary>
            Gets or sets the blend mode, 
            see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.StrokeAlpha">
            <summary>
            Gets or sets the color alpha for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.NonstrokeAlpha">
            <summary>
            Gets or sets the color alpha for nonstroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.AlphaIsShape">
            <summary>
            Gets or sets the value indicating whether the current soft mask and alpha constant are to be interpreted as shape values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.TextKnockout">
            <summary>
            Gets or sets the flag flag, which determines the behavior of overlapping
            glyphs within a text object in the transparent imaging model.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.SoftMask">
            <summary>
            Gets or sets <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining Soft Mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray">
            <summary>
            Defines the array of PDF functions which can be used in Graphics State.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Default">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/> object used to specify Default value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Identity">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/> object used to specify Identity value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.#ctor(GrapeCity.Documents.Pdf.Functions.Function[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/> class.
            </summary>
            <param name="pdfFunctions"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.PdfFunctions">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> used in calculation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.ObjType">
            <summary>
            Gets the special type of the object <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type.Default"/>, <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type.Identity"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type">
            <summary>
            Defines possible custom values of <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type.Default">
            <summary>
            Denoting the transfer function that was in effect at the start of the page
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type.Identity">
            <summary>
            The identity function
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.Type.Standard">
            <summary>
            The <see cref="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.FunctionArray.PdfFunctions"/> property defines the functions used in calculation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function">
            <summary>
            Defines the PDF function which can be used in Graphics State.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function.Default">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> instance indicating "Default" value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function.#ctor(GrapeCity.Documents.Pdf.Functions.Function)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function"/> class.
            </summary>
            <param name="pdfFunction"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Function.PdfFunction">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/> used in calculation, if NULL
            then denoting the function that was in effect at the start of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict">
            <summary>
            Represents PDF graphics state parameter dictionary,
            instances of this class created during parsing PDF content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.LineWidth">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.LineCapStyle">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.LineJoinStyle">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.MiterLimit">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.LineDashPattern">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.RenderingIntent">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.ApplyOverprint">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.ApplyNonStrokeOverprint">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.OverprintMode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.Font">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.BlackGenerationFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.UndercolorRemovalFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.TransferFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.FlatnessTolerance">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.SmoothnessTolerance">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.AutomaticStrokeAdjustment">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.BlendMode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.StrokeAlpha">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.NonstrokeAlpha">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.AlphaIsShape">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.TextKnockout">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsDict.SoftMask">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite">
            <summary>
            Represents PDF graphics state parameters dictionary used
            by <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> when generating PDF content.
            This class supports limited set of properties (see <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Values"/> for details)
            required for <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
            <remarks>
            I have no idea why, but graphics state dictionary entries LW, LC, LJ, M, D
            do not work as expected, but same values specified via separate PDF commands like "d" or "J" - work.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Data">
            <summary>
            The graphics state parameter values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.LineWidth">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.LineCapStyle">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.LineJoinStyle">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.MiterLimit">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.LineDashPattern">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.RenderingIntent">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.ApplyOverprint">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.ApplyNonStrokeOverprint">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.OverprintMode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Font">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.BlackGenerationFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.UndercolorRemovalFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.TransferFunction">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.FlatnessTolerance">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.SmoothnessTolerance">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.AutomaticStrokeAdjustment">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.BlendMode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.StrokeAlpha">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.NonstrokeAlpha">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.AlphaIsShape">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.TextKnockout">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.SoftMask">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Values">
            <summary>
            Contains values supported by <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Values.StrokeAlpha">
            <summary>
            Current alpha constant for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Values.NonstrokeAlpha">
            <summary>
            Current alpha constant for non stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParamsLite.Values.SoftMask">
            <summary>
            Current Soft Mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GroupAttributesDict">
            <summary>
            Represents group attributes dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GroupTransparency">
            <summary>
            Represents transparency group attributes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GroupTransparency.ColorSpace">
            <summary>
            (Sometimes required, see PDF specification for details)
            The group color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GroupTransparency.Isolated">
            <summary>
            (Optional)
            A flag specifying whether the transparency group is isolated (see Section 7.3.4, "Isolated Groups").
            If this flag is true, objects within the group are composited against a fully transparent initial backdrop;
            if false, they are composited against the group's backdrop. Default value: false.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GroupTransparency.Knockout">
            <summary>
            (Optional)
            A flag specifying whether the transparency group is a knockout group (see Section 7.3.5, "Knockout Groups").
            If this flag is false, later objects within the group are composited with earlier ones with which they overlap;
            if true, they are composited with the group's initial backdrop and overwrite ("knock out")
            any earlier overlapping objects. Default value: false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask">
            <summary>
            Represents a PDF color mask object.  
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Items">
            <summary>
            Gets the list of color ranges defining the mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Item">
            <summary>
            Defines the color range, all colors fall in this range should not be painted.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Item.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Item"/> class.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Item.Min">
            <summary>
            Gets or sets the minimum of the color range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask.Item.Max">
            <summary>
            Gets or sets the maximum of the color range.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage">
            <summary>
            Used internally to generate Hatch Tilling patterns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.BitsPerPixel">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.ImageMask">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage">
            <summary>
            Represents PDF Image XObject loaded from PDF content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.BitsPerPixel">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.ImageMask">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Matte">
            <summary>
            Gets an array of component values specifying the matte color with which the image data in the parent image
            has been preblended. The array consists of numbers, where n is the number of components in the color space
            specified by the ColorSpace entry in the parent image’s image dictionary;
            the numbers must be valid color components in that color space. If this entry is absent,
            the image data is not preblended.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Decode">
            <summary>
            Gets an array of numbers describing how to map image samples into the range of values appropriate for
            the image’s color space. See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.BitsPerComponent">
            <summary>
            Gets the number of bits used to represent each color component in a sample.
            Valid values are 1, 2, 4, 8, and (in PDF 1.5) 16. Default value: 8.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.IsImageMask">
            <summary>
            Gets a flag indicating whether the image is to be treated as an image mask
            (see Section 4.8.5, “Masked Images”). If this flag is true, the value of
            BitsPerComponent must be 1 and Mask and ColorSpace should not be specified;
            unmasked areas are painted using the current nonstroking color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Mask">
            <summary>
            Gets image's mask, it can be defined by <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask"/> object or another <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.SoftMask">
            <summary>
            Gets image's soft mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.ColorSpace">
            <summary>
            Gets image's color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.GetStream">
            <summary>
            Gets an <see cref="T:GrapeCity.Documents.Pdf.IPdfStream"/> object containing image's data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase">
            <summary>
            For internal use.
            Base abstract class for classes defining PDF images.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.ImageMask">
            <summary>
            Gets a value indicating whether the image is defined as a stencil mask for painting in the current color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.InlineImage">
            <summary>
            Gets a value indicating whether the image is an inline image defined directly in a content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.BitsPerPixel">
            <summary>
            Gets the number of bits-per-pixel (bpp) for this image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.HorizontalResolution">
            <summary>
            Gets the horizontal resolution of the image.
            If this property returns value less or equal 0 then horizontal resolution is not specified for an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.VerticalResolution">
            <summary>
            Gets the vertical resolution of the image.
            If this property returns value less or equal 0 then vertical resolution is not specified for an image.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object associated with the current <see cref="T:GrapeCity.Documents.Pdf.IPdfImage"/> object.
            Important: this <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> must be disposed after use.
            <para>
            In a PDF images can be specified as "image mask" (see <see cref="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.ImageMask"/>), in that case 
            the image data is used as a stencil mask for painting in the current color
            specified by <paramref name="currentUnmaskedColor"/>,
            <paramref name="maskedColor"/> specifies the color of the area excluded from filling
            (it is transparent in most cases).
            </para>
            </summary>
            <param name="currentUnmaskedColor">The current color used to fill unmasked area.</param>
            <param name="maskedColor">The masked color specifies the color of the area that is excluded from filling (typically transparent).</param>
            <returns>The <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object (must be disposed after use!).</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetCacheKey">
            <summary>
            For internal use.
            Returns a key uniquely identifying the object in its <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>,
            can return null if object can not be uniquely identified.
            </summary>
            <returns>The key uniquely identifying the object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.TryGetImageHandler(GrapeCity.Documents.Drawing.IImage,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Drawing.IImage"/>.
            </summary>
            <param name="image">The image.</param>
            <param name="handler">OUT: the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object, or null.</param>
            <returns>True if a <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.GetImageHandler(GrapeCity.Documents.Drawing.IImage)">
            <summary>
            Gets an existing <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Drawing.IImage"/>,
            or creates a new one if such image does not exist.
            </summary>
            <param name="image">The image.</param>
            <returns>The existing or newly created <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler">
            <summary>
            Represents and manages a <see cref="T:GrapeCity.Documents.Drawing.IImage"/>
            used in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.BitsPerPixel">
            <summary>
            Gets the resolution (bits-per-pixel, bpp) of this image.
            <para>
            Note that the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> returns the resolution of
            the underlying image. In some cases a PDF image may not provide any info
            about its resolution, in such cases this property will return 0.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Format">
            <summary>
            Gets or sets the format used to encode the image associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>.
            <para>
            By default this property is unspecified (null), and the actual embedding mode is determined
            by <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageOptions"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Image">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Drawing.IImage"/> object managed by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage">
            <summary>
            Represents PDF Inline Image, it defined via BI, ID and EI operators in PDF content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.BitsPerPixel">
            <summary>
            Gets the resolution (bits-per-pixel, bpp) of this image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.ColorSpaceValue">
            <summary>
            Gets a color space value as it is specified in the inline image dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.Decode">
            <summary>
            Gets an array of numbers describing how to map image samples into the range of values appropriate for
            the image’s color space. See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.BitsPerComponent">
            <summary>
            Gets the number of bits used to represent each color component in a sample.
            Valid values are 1, 2, 4, 8, and (in PDF 1.5) 16. Default value: 8.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.ColorSpace">
            <summary>
            Gets image's color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.IsImageMask">
            <summary>
            Gets a flag indicating whether the image is to be treated as an image mask
            (see Section 4.8.5, “Masked Images”). If this flag is true, the value of
            BitsPerComponent must be 1 and Mask and ColorSpace should not be specified;
            unmasked areas are painted using the current nonstroking color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.IsSame(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            Determines whether the provided image is the same as the image operator.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> object.</param>
            <returns>true if the provided image is the same as the current image; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.GetStream">
            <summary>
            Gets <see cref="T:GrapeCity.Documents.Pdf.IPdfStream"/> object containing image's data.
            Note! Returned object should be disposed after usage.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object from this inline image.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.IsSame(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage,GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternType">
            <summary>
            Defines possible pattern types.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase">
            <summary>
            Abstract base class for PDF patterns.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase.FillPath(GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer,GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Fills the current path defined by <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentPath"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.ShadingPattern">
            <summary>
            Defines PDF shading pattern.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingType">
            <summary>
            Defines possible tiling types of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingPattern"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingType.ConstantSpacing">
            <summary>
            Pattern cells are spaced consistently—that is, by a multiple of a device pixel.
            To achieve this, the application may need to distort the pattern cell slightly by making
            small adjustments to XStep, YStep, and the transformation matrix.
            The amount of distortion does not exceed 1 device pixel.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingType.Nodistortion">
            <summary>
            The pattern cell is not distorted, but the spacing between pattern cells may vary
            by as much as 1 device pixel, both horizontally and vertically,
            when the pattern is painted. This achieves the spacing requested by XStep and YStep on average
            but not necessarily for each individual pattern cell.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingType.FasterTiling">
            <summary>
            Pattern cells are spaced consistently as in tiling type 1 but with additional distortion
            permitted to enable a more efficient implementation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.TilingPattern">
            <summary>
            Defines PDF tiling pattern.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.IXObject">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.IResourceProperties">
            <summary>
            Common interface for items in <see cref="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Properties"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary">
            <summary>
            Defines PDF resource dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Fonts">
            <summary>
            The collection of font resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GraphicsStateParams">
            <summary>
            The collection of graphics state resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.XObjects">
            <summary>
            The collection of XObject resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Shadings">
            <summary>
            The collection of shading resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Patterns">
            <summary>
            The collection of pattern resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ColorSpaces">
            <summary>
            The collection of Color Space resources.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Properties">
            <summary>
            The collection of resource properties.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ProcSet">
            <summary>
            See PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.CreateDefault">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> with default "DevRGBCS"
            color space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetFontResourceName(GrapeCity.Documents.Pdf.Text.Font,System.String)">
            <summary>
            Returns resource name of specified font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetGraphicsStateParamsResourceName(GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Returns resource name of specified graphics state params.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetXObjectResourceName(GrapeCity.Documents.Pdf.Graphics.IXObject)">
            <summary>
            Returns resource name of specified XObject.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetShadingResourceName(GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase)">
            <summary>
            Returns resource name of specified shading.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetPatternResourceName(GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase)">
            <summary>
            Returns resource name of specified pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetColorSpaceResourceName(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Returns resource name of specified color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetResourcePropertiesResourceName(GrapeCity.Documents.Pdf.Graphics.IResourceProperties)">
            <summary>
            Returns resource name of specified <see cref="T:GrapeCity.Documents.Pdf.Graphics.IResourceProperties"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetColorSpace(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetGraphicsStateParams(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetFont(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetShading(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetPattern(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetXObject(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetProperties(System.String)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.IResourceProperties"/> by resource name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1">
            <summary>
            Defines base class of PDF resource collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.EnumerateObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})">
            <summary>
            Enumerates collection's items as indirect PDF objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.WriteItem(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter,`0)">
            <summary>
            Writes item's value.
            </summary>
            <param name="w"></param>
            <param name="item"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.WriteDictProp(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter,System.String)">
            <summary>
            Writes resource dictionary property corresponding to this collection.
            </summary>
            <param name="w"></param>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.GetIndirectObjectCount">
            <summary>
            Returns count of objects in the collection which were written as indirect PDF objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.ContainsObject(`0)">
            <summary>
            Returns a value indicating whether collection contains specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.ContainsName(System.String)">
            <summary>
            Returns a value indicating whether collection contains specified object with specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.Add(`0,System.String)">
            <summary>
            Adds object to the collection.
            </summary>
            <param name="obj"></param>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.GetResourceName(`0,System.String)">
            <summary>
            Returns name of specified resource, if resource does not exists in the collection
            it will be added with newly generated unique name.
            </summary>
            <param name="obj"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.TryGetResourceByName(System.String,`0@)">
            <summary>
            Returns object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollectionBase`1.TryGetNameByResource(`0,System.String@)">
            <summary>
            Returns name by the resource object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1">
            <summary>
            Collection of resource objects supporting <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface.
            </summary>
            <typeparam name="T">The resource type, type should support <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface.</typeparam>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.PropertiesCollection">
            <summary>
            The collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.IResourceProperties"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase">
            <summary>
            Base class for axial and radial shadings.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase.Functions">
            <summary>
            The list of PDF functions calculating gradient.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase.MinT">
            <summary>
            See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase.MaxT">
            <summary>
            See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase.ExtendBeyoundStartingPoint">
            <summary>
            Indicates whether to extend the shading beyond the starting point.
            See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialRadialShadingBase.ExtendBeyoundEndingPoint">
            <summary>
            Indicates whether to extend the shading beyond the ending point.
            See PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialShading">
            <summary>
            Defines axial PDF shading.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialShading.StartPoint">
            <summary>
            The start gradient point, coordinates are expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.AxialShading.EndPoint">
            <summary>
            The end gradient point, coordinates are expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.RadialShading">
            <summary>
            Defines axial PDF shading.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.RadialShading.StartCircleCenter">
            <summary>
            The coordinates of the center of the starting circle, coordinates are expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.RadialShading.StartCircleRadius">
            <summary>
            The radius of the starting circle, expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.RadialShading.EndCircleCenter">
            <summary>
            The coordinates of the center of the ending circle, coordinates are expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.RadialShading.EndCircleRadius">
            <summary>
            The radius of the ending circle, expressed in the pattern's target coordinate space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase">
            <summary>
            Base class for shading PDF objects used to define gradients.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.BBox">
            <summary>
            The bounds of the shading in shading's target coordiate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.ColorSpace">
            <summary>
            The color space in which color values are expressed.
            This may be any device, CIE-based, or special color space except a Pattern space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.Background">
            <summary>
            An array of colour components appropriate to the colour space,
            specifying a single background colour value. If present, this colour shall be used,
            before any painting operation involving the shading,
            to fill those portions of the area to be painted that lie outside the bounds of
            the shading object.
            
            NOTE 1. In the opaque imaging model, the effect is as if the painting operation were performed twice:
                    first with the background colour and then with the shading.
                    
            The background colour shall be applied only when the shading is used as part of a shading pattern,
            not when painted directly with the sh operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.GetBounds">
            <summary>
            Returns the bounds of shading on the base of its data, method is used
            when shading is rendered using "sh" operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.GetRenderer(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.Renderer"/> object which can be used to draw this shading.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase.Type">
            <summary>
            Gets the shading type, see <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingType"/> enum.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.StreamShadingBase">
            <summary>
            Base class for Type4 - Type7 shadings.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase">
            <summary>
            The abstract base class representing a PDF Soft Mask.
            <para>
            According to the PDF specification, a soft mask can be specified as a PDF name object or as a dictionary,
            see <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskNamed"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/>.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.None">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> instance representing an empty soft mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskNamed">
            <summary>
            Represents a soft mask defined as a PDF name object.
            Used to represent predefined values, e.g. "None".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMaskNamed.Name">
            <summary>
            Gets the name of this soft mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskType">
            <summary>
            Defines the possible types of a soft mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMask">
            <summary>
            Represents a PDF Soft Mask as described in the PDF spec 1.7, page 552.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.SoftMask.Subtype">
            <summary>
            A subtype specifying the method to be used in deriving the mask values from
            the transparency group specified by the <see cref="F:GrapeCity.Documents.Pdf.Graphics.SoftMask.m_FormXObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.SoftMask.m_FormXObject">
            <summary>
            A transparency group <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to be used as the source of alpha or color values for deriving the mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMask.FormXObject">
            <summary>
            Gets the transparency group <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to be used as the source of alpha
            or color values for deriving the mask.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.SoftMask.Create(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> object.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> will be used.</param>
            <param name="bounds">The bounds where the soft mask should be applied.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPdfImage">
            <summary>
            Provides access to an image in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.BitsPerPixel">
            <summary>
            Gets the resolution (bits-per-pixel, bpp) of this image.
            <para>
            Note that in some cases a PDF image may not contain any information about
            its resolution, in such cases this property returns 0.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.InlineImage">
            <summary>
            Gets a value indicating whether the image is an inline image defined directly in a content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.ImageMask">
            <summary>
            Gets a value indicating whether the image is defined as a stencil mask for painting in the current color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfImage.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object associated with the current <see cref="T:GrapeCity.Documents.Pdf.IPdfImage"/> object.
            Important: this <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> must be disposed after use.
            <para>
            In a PDF images can be specified as "image mask" (see <see cref="P:GrapeCity.Documents.Pdf.IPdfImage.ImageMask"/>), in that case 
            the image data is used as a stencil mask for painting in the current color
            specified by <paramref name="currentUnmaskedColor"/>,
            <paramref name="maskedColor"/> specifies the color of the area excluded from filling
            (it is transparent in most cases).
            </para>
            </summary>
            <param name="currentUnmaskedColor">The current color used to fill unmasked area.</param>
            <param name="maskedColor">The masked color specifies the color of the area that is excluded from filling (typically transparent).</param>
            <returns>The <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object (must be disposed after use!).</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfImage.GetCacheKey">
            <summary>
            For internal use.
            Returns a key uniquely identifying the object in its <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>,
            can return null if object can not be uniquely identified.
            </summary>
            <returns>The key uniquely identifying the object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfImageEx.GetRenderImage(System.Drawing.Color,System.Drawing.Color,System.Boolean@)">
            <summary>
            Called when content stream rendered
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.CCITTFaxImageDecoder">
            <summary>
            Decodes images with CCITTFaxDecode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.DCTImageDecoder">
            <summary>
            Decodes images with DCTDecode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/>.
            Used by <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder"/> to build <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> image from PDF image definition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef.Mask">
            <summary>
            Can be: <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/>, <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask"/> or null.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef.Matte">
            <summary>
            See PDF 1.7 page 555 for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode">
            <summary>
            See PDF 1.7 page 344 for details.
            Used in formula:
            colorSpaceColorComponent = Dmin + (imageColorComponent * (Dmax - Dmin) / (2^BitsPerComponent - 1))
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode.Dmin">
            <summary>
            Dmin.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode.Coef">
            <summary>
            Contains precalculated value of (Dmax - Dmin) / (2^BitsPerComponent - 1).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder">
            <summary>
            Contains methods used to build <see cref="T:GrapeCity.Documents.Drawing.IImage"/> from PDF image object defined by <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef"/>
            interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder.Decode(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> from <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.IPdfImageDef"/>, can
            throw an exception if <paramref name="pid"/> defines unknown / unsupported data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageMaskDecoder">
            <summary>
            Decodes images with IsImageMask == true and Stream.Format == Raw.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.JBIG2ImageDecoder">
            <summary>
            Decodes images with JBIG2Decode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.JPXImageDecoder">
            <summary>
            Decodes Jpeg2000 images.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.MonoImageDecoder">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.CCITTFaxImageDecoder"/> and <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.JBIG2ImageDecoder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder">
            <summary>
            RAW image decoder.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageOptions">
            <summary>
            Represents options controlling how native images are processed when inserted in a PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageOptions.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageOptions.AssignFrom(GrapeCity.Documents.Pdf.ImageOptions)">
            <summary>
            Copies all property values from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.Format">
            <summary>
            Gets or sets the format to use when saving images.
            This property does not affect images added as <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Auto"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.SaveAllImagesAsJpeg">
            <summary>
            Gets or sets a value indicating whether all images should be converted to JPEG format
            when added to the PDF. The default is false.
            Note that any transparency (if present in the original image) is lost if this property is set to true.
            This property does not affect images added as <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.JpegQuality">
            <summary>
            Gets or sets the JPEG image quality, in percent.
            This value must be between 0 (lowest quality, maximum compression) to 100 (highest quality, no compression).
            The default is 75.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.AlphaThreshold">
            <summary>
            Gets or sets the alpha threshold value.
            If all pixels of an image with the alpha channel have alpha values greater than or equal to this value,
            the alpha channel will not be saved, thus making the image and the whole PDF smaller.
            The default is 0xFF (i.e. all transparency is preserved).
            This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.ImageOptions.SaveAllImagesAsJpeg"/> is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.CompressColors">
            <summary>
            Gets or sets a value indicating whether to apply a slight compression to color values.
            Unlike JPEG, this preserves transparency while still reducing the image size.
            The default is false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat">
            <summary>
            Defines formats that can be used to encode images in a PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Auto">
            <summary>
            Select the optimal format automatically based on the particular image and document options (recommended).
            <para>The following rules are used:</para>
            <list type="bullet">
            <item>If the image is a JPEG or a JPEG2000, the image data is written as is without any additional processing.</item>
            <item>If the image contains transparency, <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Raw"/> is used.</item>
            <item>If <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/> is <see cref="F:System.IO.Compression.CompressionLevel.NoCompression"/>, <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Jpeg"/> is used.</item>
            <item>Otherwise the format is selected that provides the minimal data size for the image.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Jpeg">
            <summary>
            Use JPEG to encode images.
            <para>
            Note that when using this format, any transparency that may be present
            in an original image will be lost, as JPEG does not support transparency.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Raw">
            <summary>
            Do not encode image data.
            <para>
            When using this format, the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/> affects
            the final PDF size, and in combination with <see cref="F:System.IO.Compression.CompressionLevel.Optimal"/> 
            it may produce better compression than JPEG for certain types of images
            (e.g. screenshots of mostly text screens).
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageMap.ImageMap">
            <summary>
            Represents a "map" of images in the document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageMap.ImageMapBuilder">
            <summary>
            Builds <see cref="M:GrapeCity.Documents.Pdf.ImageMap.ImageMap.#ctor"/> using specified <see cref="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayersBaseState">
            <summary>
            Defines the state of all optional content groups in the document
            when the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> is applied.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.ON">
            <summary>
            All optional content groups should became visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.OFF">
            <summary>
            All optional content groups should became invisible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.Unchanged">
            <summary>
            The state of optional content groups should be unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration">
            <summary>
            Represents the Optional Content Configuration PDF dictionary.
            Contains information that allows specifying different presentations
            of a document's optional content groups for use by PDF processors.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OptionalContent">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order">
            <summary>
            Gets the list of objects specifying the order of presentation
            of optional content groups in an interactive PDF processor’s user interface.
            <para>
            The list can contain <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>s, <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>s,
            and nested lists containing <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>s or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>s.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasOrder">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Locked">
            <summary>
            Gets an array of optional content groups that shall be locked when this configuration is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ON">
            <summary>
            Gets an array of optional content groups whose state shall be set to ON when this configuration is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasON">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ON"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OFF">
            <summary>
            Gets an array of optional content groups whose state shall be set to OFF when this configuration
            is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasOFF">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OFF"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.BaseState">
            <summary>
            Gets or sets a value defining how the state of all optional content groups
            should be changed when this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ListMode">
            <summary>
            Gets or sets a value specifying how optional content groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/>
            list should be displayed to the user.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.UsageApplications">
            <summary>
            Gets a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> objects
            specifying which usage dictionary categories
            shall be consulted by PDF processors, when automatically setting the states of optional
            content groups based on external factors, such as the current system language or
            viewing magnification, and when they shall be applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasUsageApplications">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.UsageApplications"/> collection is not empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentOrderCollection">
            <summary>
            Defines a collection used to represent the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection.Owner">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.IOptionalContentIdentifier">
            <summary>
            The common interface for <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> and <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            Objects that support this interface can be used to juxtapose some content
            (part of a content stream, a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> or a <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>)
            with a PDF layer.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup">
            <summary>
            Represents an Optional Content Group in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Name">
            <summary>
            Gets or sets the name of this optional content group,
            suitable for presentation in an interactive PDF processor’s user interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Intent">
            <summary>
            Gets or sets an array of names that represent the intended use of the graphics in this group.
            The values View and Design, or any second class name may be used
            (see PDF specification Annex E, "(normative) PDF Name Registry").
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Usage">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> object describing the nature of
            the content controlled by the group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.HasUsage">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> has
            Usage property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.
            <para>
            Note that an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> can belong 
            only to one <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.Owner">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.FindByName(System.String)">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> with the specified name.
            The search is case sensitive.
            </summary>
            <param name="fieldName">The name of the group to find.</param>
            <returns>The found <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see langword="null"/> if the group was not found.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupList">
            <summary>
            Represents a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupList.FindByName(System.String)">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> with the specified name.
            The search is case sensitive.
            </summary>
            <param name="fieldName">The name of the group to find.</param>
            <returns>The found <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see langword="null"/> if the group was not found.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy">
            <summary>
            Defines the possible values of <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.VisibilityPolicy"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AllOn">
            <summary>
            Associated content is visible if all of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AnyOn">
            <summary>
            Associated content is visible if any of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AnyOff">
            <summary>
            Associated content is visible if any of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are OFF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AllOff">
            <summary>
            Associated content is visible if all of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are OFF.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership">
            <summary>
            Represents the Optional Content Membership in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups">
            <summary>
            Gets an array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects specifying the
            optional content groups whose states shall determine the visibility of
            content controlled by this membership dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.HasGroups">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.VisibilityPolicy">
            <summary>
            Gets or sets a value specifying the visibility policy for content belonging to this membership dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayersListMode">
            <summary>
            Defines the possible values of <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ListMode"/>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersListMode.AllPages">
            <summary>
            Display all groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> array.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersListMode.VisiblePages">
            <summary>
            Display only those groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> array
            that are referenced by one or more visible pages.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerContentState">
            <summary>
            Defines the possible states of content associated with a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerContentState.ON">
            <summary>
            The content associated with a layer is ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerContentState.OFF">
            <summary>
            The content associated with a layer is OFF.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState">
            <summary>
            Defines initial view state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.VisibleWhenOn">
            <summary>
            The layer is visible when it is ON in user interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.Never">
            <summary>
            The layer is never visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.Always">
            <summary>
            The layer is always visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerPrintState">
            <summary>
            Defines the print state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.PrintIfVisible">
            <summary>
            The layer prints if it is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.Never">
            <summary>
            The layer never prints.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.Always">
            <summary>
            The layer always prints.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerExportState">
            <summary>
            Defines the export state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.ExportIfVisible">
            <summary>
            The layer exports if it is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.Never">
            <summary>
            The layer never exports.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.Always">
            <summary>
            The layer always exports.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties">
            <summary>
            Represents the Optional Content Properties PDF dictionary
            that can be specified in the document catalog.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups">
            <summary>
            Gets the collection of optional content groups.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasGroups">
            <summary>
            Gets a value indicating whether he <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/> collection is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.DefaultConfig">
            <summary>
            Gets the default optional content configuration.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasDefaultConfig">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/>
            has DefaultConfig property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Configs">
            <summary>
            Gets the collection of alternate optional content configurations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasConfigs">
            <summary>
            Gets a value indicating whether he <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Configs"/> collection is not empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayer(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> by its name.
            </summary>
            <param name="layerName">The layer name.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object or null if not found.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.AddLayer(System.String)">
            <summary>
            Adds a layer with a specified name.
            </summary>
            <param name="name">The layer name.</param>
            <returns>The newly created <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that defines the new layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])">
            <summary>
            Removes specified layers, optionally removing content associated with those layers.
            </summary>
            <param name="removeContent">Indicates whether to remove content associated with the specified layers.</param>
            <param name="layers">An array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects that specify the layers to be removed.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Removes a specified layer.
            Note that this method does not remove the content associated with the layer.
            For content removal, see <see cref="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])"/>.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayer(System.String)">
            <summary>
            Removes a layer with a specified name.
            Throws an exception if the layer with the specified name does not exist.
            Note that this method does not remove the content associated with the layer.
            For content removal, see <see cref="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])"/>.
            </summary>
            <param name="name">The name of the layer to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerDefaultState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns a value indicating whether a layer is ON by default.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>A value indicating whether the layer is ON by default.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerDefaultState(System.String)">
            <summary>
            Returns a value indicating whether a layer is ON by default.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>A value indicating whether the layer is ON by default.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerDefaultState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Boolean)">
            <summary>
            Sets the default state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="on">Indicates whether the layer is ON (visible) by default.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerDefaultState(System.String,System.Boolean)">
            <summary>
            Sets the default state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="on">Indicates whether the layer is ON (visible) by default.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerLocked(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns a value indicating whether a layer is locked.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object defining the layer.</param>
            <returns>true if layer is locked, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerLocked(System.String)">
            <summary>
            Returns a value indicating whether a layer is locked.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns><see langword="true"/> if layer is locked, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerLocked(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Boolean)">
            <summary>
            Sets the locked state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="locked">Indicates whether the layer is locked.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerLocked(System.String,System.Boolean)">
            <summary>
            Sets the locked state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">Indicates whether the layer is locked.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerInitialViewState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the layer initial view state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The initial view state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerInitialViewState(System.String)">
            <summary>
            Returns the layer initial view state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The initial view state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerInitialViewState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerInitialViewState)">
            <summary>
            Sets the initial view state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The initial view state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerInitialViewState(System.String,GrapeCity.Documents.Pdf.Layers.LayerInitialViewState)">
            <summary>
            Sets the initial view state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The initial view state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerPrintState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the print state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The print state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerPrintState(System.String)">
            <summary>
            Returns the print state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The print state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerPrintState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerPrintState)">
            <summary>
            Sets the print state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The print state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerPrintState(System.String,GrapeCity.Documents.Pdf.Layers.LayerPrintState)">
            <summary>
            Sets the print state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The print state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerExportState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the export state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The export state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerExportState(System.String)">
            <summary>
            Returns the export state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The export state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerExportState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerExportState)">
            <summary>
            Sets the export state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The export state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerExportState(System.String,GrapeCity.Documents.Pdf.Layers.LayerExportState)">
            <summary>
            Sets the export state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The export state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Clear">
            <summary>
            Clears the content of the current object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage">
            <summary>
            Represents the Optional Content Usage dictionary of a PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfo">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef"/> object containing
            application-specific data associated with this optional content group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasCreatorInfo">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            CreatorInfo property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Export">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef"/> object containing options
            used when the document (or part of it) is saved by a PDF processor
            to a format that does not support optional content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasExport">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Export property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Print">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef"/> object containing options
            used when printing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasPrint">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Print property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.View">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef"/> object containing options
            used when the document is first opened by a PDF processor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasView">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            View property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Zoom">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef"/> object specifying a range of magnifications
            at which the content in this optional content group is visible.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasZoom">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Zoom property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef">
            <summary>
            Defines the application-specific data associated with this optional content group.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.Creator">
            <summary>
            Gets or sets a text string specifying the application that created the group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.Subtype">
            <summary>
            Gets or sets a name defining the type of content controlled by the group.
            Suggested values include but shall not be limited to <b>Artwork</b>,
            for graphic-design or publishing applications,
            and <b>Technical</b>, for technical designs such as building plans or schematics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef">
            <summary>
            Defines the options used when the document (or part of it) is saved by
            a PDF processor to a format that does not support optional content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef.ExportState">
            <summary>
            Gets or sets a value indicates the recommended state for content in this group when
            the document (or part of it) is saved by a PDF processor to a format that does not
            support optional content.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef">
            <summary>
            Defines the options specifying that the content to be used when printing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.Subtype">
            <summary>
            Gets or sets a value specifying the kind of content controlled by the group,
            for example, Trapping, PrintersMarks or Watermark.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.PrintState">
            <summary>
            Gets or sets a value indicating that the group shall be set to that state when
            the document is printed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef">
            <summary>
            Defines the options used to initialize a layer state
            when the document is first opened by a PDF processor.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef.ViewState">
            <summary>
            Gets or sets a value indicates the state of the group when the document is first opened
            by a PDF processor.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef">
            <summary>
            Defines the options specifying a range of magnifications at which the content
            in an optional content group is visible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.Min">
            <summary>
            Gets or sets the minimum recommended magnification factor at which the
            group shall be visible. Default value: 0.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.Max">
            <summary>
            Gets or sets the magnification factor below which the group shall be visible.
            Default value: float.PositiveInfinity.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.UsageApplication">
            <summary>
            Represents the rules by which usage entries shall be used by interactive PDF processors,
            and should be used by non-interactive PDF processors, to automatically manipulate
            the state of optional content groups, which groups shall be affected, and under which circumstances.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplication.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Event">
            <summary>
            Gets or sets the name defining the situation in which this <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/>
            should be used. Shall be one of "View", "Print", or "Export".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Groups">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects that shall have their states
            automatically managed based on information in their usage dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category">
            <summary>
            Gets or sets the array of names each of which corresponds to a usage dictionary entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.UsageApplicationList">
            <summary>
            Represents a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplicationList.IndexByCategory(System.String[])">
            <summary>
            Finds the index of a <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> object
            corresponding to a <see cref="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category"/>.
            </summary>
            <param name="category">The categories to test.</param>
            <returns>The index of the found object, or -1.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplicationList.FindByCategory(System.String[])">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> object
            corresponding to a <see cref="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category"/>.
            </summary>
            <param name="category">The categories to test.</param>
            <returns>The found object, or <see langword="null"/>.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.ViewState">
            <summary>
            Represents the view state of a PDF document.
            <para>
            The presentation of a PDF document may depend on the context that is determined
            by the current environment and is not persisted in the PDF itself.
            This includes:
            <list type="bullet">
            <item>The transient state of optional content (e.g. the user may have turned a layer's visibility on or off).</item>
            <item>The current operation (e.g. view or print).</item>
            </list>
            This class is used to specify the target context for operations that work
            with document content, so that only the relevant content is processed.
            </para>
            Note that an instance of this class is not automatically updated
            if the document content (e.g. layers) changes.
            Use the <see cref="M:GrapeCity.Documents.Pdf.Layers.ViewState.Reset"/> method to reset the view state
            to its initial state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> for which this <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> was created.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> class.
            </summary>
            <param name="doc">The document for which this instance is created.</param>
            <param name="ignoreLayersState">Indicates whether to ignore the persisted state of the layers, assuming that all layers are visible.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.ApplyConfiguration(GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration)">
            <summary>
            Applies the specified configuration to this view state.
            </summary>
            <param name="configuration">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayerUIState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Nullable{System.Boolean})">
            <summary>
            Sets the visibility of an optional content group (layer) in the context of an end-user UI.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layer"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layer"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layer"/>.</item>
            </list>
            </summary>
            <param name="layer">The target layer.</param>
            <param name="state">The desired state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayerUIState(System.String,System.Nullable{System.Boolean})">
            <summary>
            Sets the visibility of an optional content group (layer) in the context of an end-user UI.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layerName"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layerName"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layerName"/>.</item>
            </list>
            </summary>
            <param name="layerName">The name of the target layer.</param>
            <param name="state">The desired state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayersUIState(System.Nullable{System.Boolean},System.Object[])">
            <summary>
            Sets the visibility of one or more <paramref name="layers"/> in the context of an end-user UI.
            The <paramref name="layers"/> array can contain layer names (strings) or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> references.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made the layers visible.</item>
            <item><see langword="false"/>: the user explicitly made the layers hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layers.</item>
            </list>
            </summary>
            <param name="state">The desired state of the layer.</param>
            <param name="layers">The array of layer names or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayersUIStateExcept(System.Nullable{System.Boolean},System.Object[])">
            <summary>
            Sets the visibility of all layers except those listed in the <paramref name="layers"/> array, in the context of an end-user UI.
            The <paramref name="layers"/> array can contain layer names (strings) or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> references.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made all layers (except the specified ones) visible.</item>
            <item><see langword="false"/>: the user explicitly made all layers (except the specified ones) hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layers.</item>
            </list>
            </summary>
            <param name="state">The desired state of the layer.</param>
            <param name="layers">The array of layer names or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects to be excluded.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.GetLayerUIState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Gets the visibility state of an optional content group (layer) in the context of an end-user UI
            The return value is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layer"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layer"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layer"/>.</item>
            </list>
            </summary>
            <param name="layer">The target layer.</param>
            <returns>The state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.GetLayerUIState(System.String)">
            <summary>
            Gets the visibility state of an optional content group (layer) in the context of an end-user UI
            The return value is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made the layer visible.</item>
            <item><see langword="false"/>: the user explicitly made the layer hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layer.</item>
            </list>
            </summary>
            <param name="layerName">The name of the target layer.</param>
            <returns>The state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.Reset">
            <summary>
            Resets this <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> to its initial state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerActive(System.Object)">
            <summary>
            Checks whether a layer is active in the view mode specified by the <see cref="P:GrapeCity.Documents.Pdf.Layers.ViewState.Mode"/> property.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is active, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerActive(System.Object,GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode)">
            <summary>
            Checks whether a layer is active in a specified view mode.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <param name="mode">The target view mode.</param>
            <returns><see langword="true"/> if the layer is active, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerVisible(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is viewed.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is visible, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerPrintable(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is printed.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is printable, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerExportable(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is exported.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is exportable, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.CurrentConfiguration">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> specified in the last
            <see cref="M:GrapeCity.Documents.Pdf.Layers.ViewState.ApplyConfiguration(GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration)"/> method call.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.Zoom">
            <summary>
            Gets or sets the document zoom value (1 is actual size, no zoom).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.Mode">
            <summary>
            Gets or sets the document view mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.IgnoreLayersState">
            <summary>
            Gets or sets a value indicating whether all layers' state should be ignored
            and all layers should be considered visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode">
            <summary>
            Defines the possible document view modes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.View">
            <summary>
            The document is being viewed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.Print">
            <summary>
            The document is being printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.Export">
            <summary>
            The document is being exported.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Util.LicenseHandler.c_MaxLoadPageCountUnlicensed">
            <summary>
            Count of pages loaded when GcPdfDocument.LicensedState == Unlicensed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ContentStreamAnalyzer">
            <summary>
            Analyzes content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.DefaultAppearanceStringParser">
            <summary>
            Implements methods to parse default appearance string (DA entry of WidgetAnnotation for example) and feels
            appropriate properties of passed <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.DefaultAppearanceStringParser.Parse(GrapeCity.Documents.Pdf.GcPdfDocument,System.String,System.Collections.Generic.HashSet{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary},System.Boolean,GrapeCity.Documents.Text.Font@,System.Boolean@,System.Nullable{System.Single}@,System.Nullable{System.Drawing.Color}@)">
            <summary>
            Parses Default Appearance String (DA) and fills appropriate properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.EnumMap`1">
            <summary>
            Represents utility class used to convert object to / from enum during PDF parsing.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.FontListBuilder">
            <summary>
            Builds list of fonts referenced from content stream including nested <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.FontTextBuilder">
            <summary>
            Builds set of the unicode characters rendered using specified font by specified content stream
            including nested FormXObject.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.GcHtmlContentProcessor">
            <summary>
            Prepares GcHtml content stream to use it in FormXObject.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.GcHtmlContentProcessor.ShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Called by text operators other than "TJ".
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.GcHtmlContentProcessor.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Called by "TJ" operator.
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.PdfUtil">
            <summary>
            Contains, constants, utility methods common for GcPdf.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.EncodePdfNameAsXmlValue(System.String)">
            <summary>
            Encodes PDF name as to the format used by Adobe Reader when exporting form data to XML, XFDF
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.FromPdfDashPattern(System.Single[],System.Single)">
            <summary>
            In GcGraphics method the dash pattern specified same as in WinForms, WPF etc
            i.e. the dashes' sizes depending on width of current line, but in
            PDF size of dashes INDEPENDENT from line width.
            So, this method recalculates dashes depending on line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetEnclosingRectangle(System.Drawing.PointF[])">
            <summary>
            Returns rectangle containing all specified points.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.CheckPointInsideRect(System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Checks whether a point specified by <paramref name="x"/> and <paramref name="y"/>
            is in a <paramref name="rect"/>, updates the  <paramref name="rect"/>
            to fit the point if needed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GcLibName">
            <summary>
            Returns "our" name used as default value in <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> and <see cref="T:GrapeCity.Documents.Pdf.Metadata"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.IsHex(System.Int32)">
            <summary>
            Returns true if <paramref name="c"/> contains code of HEX digit.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetHex(System.Int32,System.Int32)">
            <summary>
            Returns number for two hex digits.
            </summary>
            <param name="hex1"></param>
            <param name="hex2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryPdfStringToDateTime(GrapeCity.Documents.Pdf.Spec.PdfString,System.DateTime@)">
            <summary>
            Tries to convert <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> to DateTime, see PDF1.7 page 160 for details
            about DateTime representation in PDF.
            YYYYMMDDHHmmSSOHH'mm'
            </summary>
            <param name="ps"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsInt(System.Object,System.Int32@)">
            <summary>
            Tries to convert specified value to PDF int value.
            </summary>
            <param name="v"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsBool(System.Object,System.Boolean@)">
            <summary>
            Tries to convert specified value to PDF boolean value.
            </summary>
            <param name="v"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsBool(System.Object,System.Nullable{System.Boolean}@)">
            <summary>
            Tries to convert specified value to PDF boolean nullable value.
            </summary>
            <param name="v"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsFloat(System.Object,System.Single@)">
            <summary>
            Tries to convert specified value to PDF float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsFloat(System.Object,System.Nullable{System.Single}@)">
            <summary>
            Tries to convert specified value to PDF float nullable value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsName(System.Object,System.String@)">
            <summary>
            Tries to convert specified value to PDF name value.
            </summary>
            <param name="v"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsString(System.Object,GrapeCity.Documents.Pdf.Spec.PdfString@)">
            <summary>
            Tries to convert specified value to PDF string value.
            </summary>
            <param name="v"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsArray(System.Object,GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder@)">
            <summary>
            Tries to convert specified value to PDF array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsDict(System.Object,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@)">
            <summary>
            Tries to convert specified value to PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryAsStream(System.Object,GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase@)">
            <summary>
            Tries to convert specified value to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.FormatValue(System.Object)">
            <summary>
            Returns text description of PDF value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetByteString(System.String)">
            <summary>
            Converts string to byte array using simple "(byte)s[i]" conversion.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.IO.Stream,System.Int32)">
            <summary>
            Reads specified amount of bytes (max 8) using big-endian order.
            </summary>
            <param name="stream"></param>
            <param name="byteCount"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.WriteBE(System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Writes specified amount of bytes (max 8) using big-endian order.
            </summary>
            <param name="stream"></param>
            <param name="value"></param>
            <param name="byteCount"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.Byte[])">
            <summary>
            Reads specified amount of bytes (max 4) using big-endian order.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.Collections.Generic.List{System.Byte})">
            <summary>
            Reads specified amount of bytes (max 4) using big-endian order.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadUShort(System.Collections.Generic.IList{System.Byte},System.Int32)">
            <summary>
            Reads <see cref="T:System.UInt16"/> value from bytes list.
            </summary>
            <param name="bytes"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadUTF16(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Reads chars in UTF-16 encoding from bytes list.
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ResourcesInfo">
            <summary>
            Contains information about resources referenced from content stream.
            Instance of this class is created by the <see cref="T:GrapeCity.Documents.Pdf.Util.ResourcesBuilder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.ResourcesInfo.IsEmpty">
            <summary>
            Returns a value indicating whether all collections of this <see cref="T:GrapeCity.Documents.Pdf.Util.ResourcesInfo"/> is empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ResourcesBuilder">
            <summary>
            Builds list of resources referenced from content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker">
            <summary>
            Checks a content stream for features related to the PDF transparency.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker.GetFeatures(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)"/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker.GetFeatures(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures"/> value
            describing the transparency features used in the content stream defined by the 
            <paramref name="enumerator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Localization.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Audio_InvalidBitsPerSample">
            <summary>
              Looks up a localized string similar to BitsPerSample of audio files should be multiple of 8..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Audio_UnknownFormat">
            <summary>
              Looks up a localized string similar to Unknown Audio Format..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotBeNegative">
            <summary>
              Looks up a localized string similar to Value should be a non-negative..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotChangeUsedFont">
            <summary>
              Looks up a localized string similar to Properties of [{0}] font can not be changed because it is used in document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotEncodeFontAsStandardType1">
            <summary>
              Looks up a localized string similar to Font [{0}] can not be encoded as standard Type1 font, to many glyphs is used from this font, to avoid this error embed font to document setting PdfFont.Embed to true..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotRemoveUsedFont">
            <summary>
              Looks up a localized string similar to Font [{0}] can not be removed becayse it is used in document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotSaveLoadedDocumentAsLinearized">
            <summary>
              Looks up a localized string similar to The current value of GcPdfDocument.Linearized is true. The attempted operation is incompatible with that value. To avoid this exception, set Linearized to false prior to the operation..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotUseStartDocEndDocWithLinearized">
            <summary>
              Looks up a localized string similar to GcPdfDocument.Linearized can not be true when StartDoc() / EndDoc() methods is used to generate document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ClickToSign">
            <summary>
              Looks up a localized string similar to Click to Sign.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ContentStreamCanNotBeChanged">
            <summary>
              Looks up a localized string similar to Content Stream {0} can not be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.DrawFormInvalidDoc">
            <summary>
              Looks up a localized string similar to FormXObject should belongs to same GcPdfDocument as GcPdfGraphics..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FdfParser_NoCatalogObject">
            <summary>
              Looks up a localized string similar to Invalid FDF stream, can not find Catalog object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FieldByNameNotFound">
            <summary>
              Looks up a localized string similar to Field [{0}] not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FontCollectionCanNotBeCleared">
            <summary>
              Looks up a localized string similar to Fonts collection can not be cleared because it contains used fonts..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_CCITTFaxFilterColorComponentCountMismatch">
            <summary>
              Looks up a localized string similar to Color space ({0}) has invalid count of color components ({1}) for CCITTFax filter, should be 1..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceCanNotBeUsedWithImages">
            <summary>
              Looks up a localized string similar to ColorSpace [{0}] cannot be used to define an image..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceDecodingNotImplemented">
            <summary>
              Looks up a localized string similar to Image decoding for [{0}] color space is not implemented..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceNotSpecified">
            <summary>
              Looks up a localized string similar to ColorSpace not specified for image..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DCTFilterColorComponentCountMismatch">
            <summary>
              Looks up a localized string similar to Count of color components in Jpeg image ({0}) does not match count of color components defined by ColorSpace of PDF image ({1})..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DCTFilterUnsupportedColorComponentCount">
            <summary>
              Looks up a localized string similar to Unsupported count of color components in Jpeg image ({0})..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DecoderNotSupportMasks">
            <summary>
              Looks up a localized string similar to Decoder [{0}] does not support image masks..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DecoderNotSupportSoftMasks">
            <summary>
              Looks up a localized string similar to Decoder [{0}] does not support soft image masks..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DeviceNUnsupported">
            <summary>
              Looks up a localized string similar to Unsupported DeviceN color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ICCBasedAlternateNotSpecified">
            <summary>
              Looks up a localized string similar to Alternate color space not specified for ICCBased color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ICCBasedColorProfileNotSpecified">
            <summary>
              Looks up a localized string similar to Color Profile not specified for ICCBased color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_IndexedColorSpaceHasInvalidData">
            <summary>
              Looks up a localized string similar to Indexed color space has invalid data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidHeight">
            <summary>
              Looks up a localized string similar to Image has invalid Height [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidImageData">
            <summary>
              Looks up a localized string similar to Invalid image data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidWidth">
            <summary>
              Looks up a localized string similar to Image has invalid Width [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_MaskImageShouldBeImageMask">
            <summary>
              Looks up a localized string similar to Image used as mask for another image should have ImageMask parameter with true value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_SeparationUnsupportedColorant">
            <summary>
              Looks up a localized string similar to Unsupported colorant [{0}] for Separation color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_UnsupportedBitsPerComponent">
            <summary>
              Looks up a localized string similar to Image has unsupported BitsPerComponent value [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_UnsupportedImageFormat">
            <summary>
              Looks up a localized string similar to Unsupported image format..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDisposed">
            <summary>
              Looks up a localized string similar to Image was disposed before saving the GcPdfDocument..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.IncorrectCertificate">
            <summary>
              Looks up a localized string similar to Incorrect certificate (must be private key)..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.InvalidStreamForSign">
            <summary>
              Looks up a localized string similar to Stream passed to GcPdfDocument.Save() method should support read and seek operations..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.InvalidStreamForSave">
            <summary>
              Looks up a localized string similar to The stream used to load a document cannot be written to.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ItemAlreadyHasOwner">
            <summary>
              Looks up a localized string similar to Item [{0}] already has owner [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ItemBelongsToDifferentDocument">
            <summary>
              Looks up a localized string similar to [{0}] belongs to a different document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.NameAlreadyExists">
            <summary>
              Looks up a localized string similar to [{0}] with name [{1}] already exists..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.NameCanNotBeEmpty">
            <summary>
              Looks up a localized string similar to Name of a [{0}] cannot be empty.&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageCanNotBeChangedInStartEndDocMode">
            <summary>
              Looks up a localized string similar to In StartDoc() / EndDoc() mode only properties of last page can be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageContentStreamCanNotBeChangedInStartEndDocMode">
            <summary>
              Looks up a localized string similar to In StartDoc() / EndDoc() mode only properties of last page content stream can be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageContentStreamsCanNotBeChanged">
            <summary>
              Looks up a localized string similar to Page.ContentStreams collection can not be changed when document generated via StartDoc() / EndDoc() methods..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PagesCanNotBeChanged">
            <summary>
              Looks up a localized string similar to GcPdfDocument.Pages collection can not be changed when document generated via StartDoc() / EndDoc() methods..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageUsesOtherResourceDictionary">
            <summary>
              Looks up a localized string similar to PageContentStream can not be used with specified page because it uses another resource dictionary..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_DictionaryKeyExpected">
            <summary>
              Looks up a localized string similar to Expected key in dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EncryptException">
             <summary>
               Looks up a localized string similar to Exception occurred while building decrypt Security Handler.
            {0}.
             </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofArrayExpected">
            <summary>
              Looks up a localized string similar to Expected end of array..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofDictionaryExpected">
            <summary>
              Looks up a localized string similar to Expected end of dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofHexStringExpected">
            <summary>
              Looks up a localized string similar to Expected end of HEX string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofNotFound">
            <summary>
              Looks up a localized string similar to %%EOF marker is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofStringExpected">
            <summary>
              Looks up a localized string similar to Expected end of literal string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_FilterNotFound">
            <summary>
              Looks up a localized string similar to Decode Filter [{0}] not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_HangingObjectInContentItem">
            <summary>
              Looks up a localized string similar to {0} is linked with a &quot;hanging&quot; object [{1}] and this object can not be associated with document&apos;s content..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_HexStringOrDictionaryExpected">
            <summary>
              Looks up a localized string similar to Expected HEX string or dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ImageFilterShouldBeLast">
            <summary>
              Looks up a localized string similar to Image filter [{0}] should be last in the &quot;Filter&quot; property of Stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidArrayValue">
            <summary>
              Looks up a localized string similar to Array item [{0}] has invalid/unsupported value [{1}]. [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidArrayValueType">
            <summary>
              Looks up a localized string similar to Array item [{0}] has value [{1}] which can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCharInASCII85Stream">
            <summary>
              Looks up a localized string similar to Invalid char [{0}] in ASCII85 stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCharInASCIIHexStream">
            <summary>
              Looks up a localized string similar to Invalid char [{0}] in ASCIIHex stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCMapStream">
            <summary>
              Looks up a localized string similar to Invalid CMap stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCrossReferenceStreamObject">
            <summary>
              Looks up a localized string similar to Invalid Cross-Reference stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCrossReferenceTable">
            <summary>
              Looks up a localized string similar to Invalid Cross-Reference table..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidDestinationPage">
            <summary>
              Looks up a localized string similar to Invalid value [{0}] specified as Page for Destination object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidDictValue">
            <summary>
              Looks up a localized string similar to Dictionary key [{0}] has invalid/unsupported value [{1}]. [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidDictValueType">
            <summary>
              Looks up a localized string similar to Dictionary key [{0}] has value [{1}] which can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_DocumentCatalogNotFound">
            <summary>
              Looks up a localized string similar to Document Catalog not specified..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEncrypt">
            <summary>
              Looks up a localized string similar to Invalid/Unknown encrypt definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEndOfDictionary">
            <summary>
              Looks up a localized string similar to Expected second &apos;&gt;&apos; as end of dictionary..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEnumValue">
            <summary>
              Looks up a localized string similar to Value [{0}] connot be converted to enum [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidFileID">
            <summary>
              Looks up a localized string similar to Invalid File ID..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidHexString">
            <summary>
              Looks up a localized string similar to Invalid HEX string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidInlineImage">
            <summary>
              Looks up a localized string similar to Invalid Inline Image object definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidLengthOfFileID">
            <summary>
              Looks up a localized string similar to Invalid length of File ID item..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidNumber">
            <summary>
              Looks up a localized string similar to [{0}] is invalid number, 0 is used as value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidObjectStream">
            <summary>
              Looks up a localized string similar to Invalid Object Stream {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidPassword">
            <summary>
              Looks up a localized string similar to Invalid password..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidRefValue">
            <summary>
              Looks up a localized string similar to PDF reference [{0} R] references value [{1}] which can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStandardSecurityHandler">
            <summary>
              Looks up a localized string similar to Invalid Standard Security Handler definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStartxref">
            <summary>
              Looks up a localized string similar to Invalid startxref value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStreamObject">
            <summary>
              Looks up a localized string similar to Invalid stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidTypeOfConvertedObject">
            <summary>
              Looks up a localized string similar to Value [{0}] was converted to [{1}], it can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidTypeOfReferencedObject">
            <summary>
              Looks up a localized string similar to PDF object [{0}] was already converted to [{1}], it can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidValue">
            <summary>
              Looks up a localized string similar to Value [{0}] can not be converted to [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_NoDictValue">
            <summary>
              Looks up a localized string similar to PDF dictionary does not contain [{0}] value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ObjectStreamNotFound">
            <summary>
              Looks up a localized string similar to Object Stream {0} is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_PdfObjectExpected">
            <summary>
              Looks up a localized string similar to Expected PDF object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_PreviousCrossReferenceTableNotFound">
            <summary>
              Looks up a localized string similar to Cross-Reference table specified in &quot;Prev&quot; entry is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_StandardSecurityHandlerUnsupportedRevision">
            <summary>
              Looks up a localized string similar to Unsupported revision [{0}] of StandardSecurityHandler..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_startxrefNotFound">
            <summary>
              Looks up a localized string similar to startxref marker is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_startxrefOffsetNotFound">
            <summary>
              Looks up a localized string similar to startxref offset is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_TrailerDictNotFound">
            <summary>
              Looks up a localized string similar to Trailer dictionary not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnexpectedException">
             <summary>
               Looks up a localized string similar to Unexpected exception occurred while parsing PDF document.
            {0}.
             </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownActionType">
            <summary>
              Looks up a localized string similar to Unknown action type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownEncryptionAlgorithm">
            <summary>
              Looks up a localized string similar to Unknown encryption algorithm [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownEntryTypeInCrossReferenceStream">
            <summary>
              Looks up a localized string similar to Unknown entry type [{0}] in Cross-Reference stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownPdfObject">
            <summary>
              Looks up a localized string similar to Unknown PDF content..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownSecurityHandlerType">
            <summary>
              Looks up a localized string similar to Unknown type of Security Handler: [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnsupprotedStructElementChildItem">
            <summary>
              Looks up a localized string similar to Child item of StructElement has unknown type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ValueTooBig">
            <summary>
              Looks up a localized string similar to Value [{0}] is too big..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ValueTooSmall">
            <summary>
              Looks up a localized string similar to Value [{0}] is too small..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PdfImageShouldBelongsToSameDocument">
            <summary>
              Looks up a localized string similar to Can not render PDF image of another PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_EncryptionHandlerStartDoc">
            <summary>
              Looks up a localized string similar to EncryptionHandler should be specified before StartDoc(...) method..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidEncriptionKeyLength">
            <summary>
              Looks up a localized string similar to EncriptionKeyLength must be a multiple of 8, in the range 40 to 128..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidEncriptionKeyLength2">
            <summary>
              Looks up a localized string similar to EncriptionKeyLength must be 128 if EncryptionAlgorithm is AES..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidStandardSecurityHandler5">
            <summary>
              Looks up a localized string similar to Invalid Standard Security Handler revision 5..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5EncryptionAlgorithm">
            <summary>
              Looks up a localized string similar to Standard Security Handler Revision 5 supports only AES encryption..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5InvalidKeyLength">
            <summary>
              Looks up a localized string similar to Standard Security Handler Revision 5 supports only 256 bit key length..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5PasswordTooLong">
            <summary>
              Looks up a localized string similar to Password is too long. According to PDF specification, password should be converted to byte array using UTF8 encoding and only the first 127 bytes are used for encryption..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_AuthenticatedAttributeMissingTheDigest">
            <summary>
              Looks up a localized string similar to Authenticated attribute is missing the digest..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_CanNotDecodePKCS7signeddataObject">
            <summary>
              Looks up a localized string similar to Cannot decode PKCS7SignedData object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_CanNotFindSigningCertificateWithSerial">
            <summary>
              Looks up a localized string similar to &quot;Cannot find signing certificate with serial [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_FailedToGetTsaResponse">
            <summary>
              Looks up a localized string similar to Failed to get response from TSA server {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_InvalidTsaResponse">
            <summary>
              Looks up a localized string similar to Invalid TSA response from {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NoTimeTokenInTsaResponse">
            <summary>
              Looks up a localized string similar to No timetoken in TSA response from {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NotValidPKCS7ObjectNotSequence">
            <summary>
              Looks up a localized string similar to Not a valid PKCS#7 object - not a sequence..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NotValidPKCS7ObjectNotSignedData">
            <summary>
              Looks up a localized string similar to Not a valid PKCS#7 object - not signed data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_PKCS7ObjectHasMultipleSignerinfosOnlyOneSupportedAtThisTime">
            <summary>
              Looks up a localized string similar to This PKCS#7 object has multiple SignerInfos - only one is supported at this time..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_SigntureIsEmpty">
            <summary>
              Looks up a localized string similar to Signature is empty..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_UnsupportedSignatureType">
            <summary>
              Looks up a localized string similar to Unsupported signature type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampApproved">
            <summary>
              Looks up a localized string similar to APPROVED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampAsIs">
            <summary>
              Looks up a localized string similar to AS IS.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampConfidential">
            <summary>
              Looks up a localized string similar to CONFIDENTIAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampDepartmental">
            <summary>
              Looks up a localized string similar to DEPARTMENTAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampDraft">
            <summary>
              Looks up a localized string similar to DRAFT.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampExperimental">
            <summary>
              Looks up a localized string similar to EXPERIMENTAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampExpired">
            <summary>
              Looks up a localized string similar to EXPIRED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampFinal">
            <summary>
              Looks up a localized string similar to FINAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampForComment">
            <summary>
              Looks up a localized string similar to FOR COMMENT.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampForPublicRelease">
            <summary>
              Looks up a localized string similar to FOR PUBLIC RELEASE.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampNotApproved">
            <summary>
              Looks up a localized string similar to NOT APPROVED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampNotForPublicRelease">
            <summary>
              Looks up a localized string similar to NOT FOR PUBLIC RELEASE.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampSold">
            <summary>
              Looks up a localized string similar to SOLD.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampTopSecret">
            <summary>
              Looks up a localized string similar to TOP SECRET.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StructElementIDShouldBeUnique">
            <summary>
              Looks up a localized string similar to All StructElement objects in document&apos;s structure tree should have unique IDs..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.UnsupportedImageType">
            <summary>
              Looks up a localized string similar to Unsupported image type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.UnsupportedObjectInActionHide">
            <summary>
              Looks up a localized string similar to Object [{0}] can not be used in ActionHide..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.WidgetAnnotationInvalidImage">
            <summary>
              Looks up a localized string similar to Value should be IImage or FormXObject..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ColorSpace_SeparationInvalid">
            <summary>
              Looks up a localized string similar to Value should be IImage or FormXObject..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Redact_AnnotationNotBelongsToDocument">
            <summary>
              Looks up a localized string similar to RedactAnnotation does not belong to this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidOperands">
            <summary>
              Looks up a localized string similar to Invalid operands for the [{0}] operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.Log">
            <summary>
            For internal use.
            Can be used for logging the currently executed operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack">
            <summary>
            The stack of currently executed operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.Log.Items">
            <summary>
            The list of log messages.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.IsSame(GrapeCity.Documents.Pdf.Log.Log)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> is the same as the current log.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> object.</param>
            <returns>true if the provided log is the same as the current log; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.IsSame(GrapeCity.Documents.Pdf.Log.Log,GrapeCity.Documents.Pdf.Log.Log)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Save(System.IO.Stream)">
            <summary>
            For internal use.
            Saves the <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> to the stream in a XML format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Save(System.String)">
            <summary>
            For internal use.
            Saves the <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> to the file in a XML format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Clear">
            <summary>
            Clears the log.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginOperation(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginParseValue(System.Type,System.Object)">
            <summary>
            Creates and adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseValue"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginParseObj(System.String,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Creates and adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseObj"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginParseObj(System.Type,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Creates and adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseObj"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.EndOperation">
            <summary>
            Pops a last operation object from the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.AddItem(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Adds a log message.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Load(System.IO.Stream)">
            <summary>
            For internal use.
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> from specified stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Load(System.String)">
            <summary>
            For internal use.
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> from specified file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.Log.LogMaxSize">
            <summary>
            Gets or sets the maximum log size, if log exceeds specified value then all warning and info will not be added.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntrySeverity">
            <summary>
            Defines possible severity of log entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Info">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Warning">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Error">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Critical">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryBase">
            <summary>
            Defines the base class for log entries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Determines whether the provided log entry is the same as the current entry.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> object.</param>
            <returns>true if the provided entry is the same as the current entry; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase,GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryBase.Severity">
            <summary>
            Gets the severity of log entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryBase.Message">
            <summary>
            Get the message of log entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntry">
            <summary>
            Defines the log entry based on custom message.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntry"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntry"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntry.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryException">
            <summary>
            Defines the log entry based on custom exception.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryException.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperation">
            <summary>
            Defines the log entry about some operation performed during document processing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperation.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperation.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperation.Operation">
            <summary>
            Gets the associated <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin">
            <summary>
            Defines "operation begin" the log entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd">
            <summary>
            Defines "operation end" the log entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference">
            <summary>
            Indicates that reference to specified PDF object can not be resolved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.#ctor(System.Exception,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.ObjID">
            <summary>
            Gets the ID of referenced PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueBase">
            <summary>
            Base class for log entries indicating invalid value obtained during parsing PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueBase.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueBase"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueBase.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueBase.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueCommon">
            <summary>
            Base class for log entries indicating invalid value obtained during parsing PDF document
            with some description about error.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueCommon.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueCommon"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueCommon.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueCommon.ErrorDesc">
            <summary>
            Gets the description why value is invalid.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue">
            <summary>
            Indicates invalid value obtained from PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue.Key">
            <summary>
            Gets the value key in PDF dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValue.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue">
            <summary>
            Indicates invalid value obtained from PDF array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue.#ctor(System.Int32,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue.Index">
            <summary>
            Gets the index in PDF array.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValue.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType">
            <summary>
            Indicates that value obtained during parsing PDF document has invalid / unsupported type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType.#ctor(System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType.ExpectedType">
            <summary>
            Gets the expected type of the value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidValueType.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType">
            <summary>
            Indicates that value obtained from PDF dictionary has invalid / unsupported type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType.#ctor(System.String,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType.Key">
            <summary>
            Gets the value key in PDF dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictValueType.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType">
            <summary>
            Indicates that value obtained from PDF array has invalid / unsupported type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType.#ctor(System.Int32,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType.#ctor(System.Int32,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType.Index">
            <summary>
            Gets the value index in PDF array.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayValueType.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryList">
            <summary>
            Defines list of <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationBase">
            <summary>
            Defines some operation performed during document processing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.OperationBase.Logged">
            <summary>
            Indicates whether this operation was added to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationBase.Description">
            <summary>
            Gets the operation description.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationBase.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/>.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object.</param>
            <returns>true if the provided <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> is the same as the current; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationBase.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase,GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationParseObj">
            <summary>
            Parse PDF object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParseObj.#ctor(System.String,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseObj"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParseObj.#ctor(System.Type,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseObj"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParseObj.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseObj.ObjectDesc">
            <summary>
            Gets the description of the PDF object.
            It can be the type of the PDF object or something else
            that allows you to determine what exactly was read.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseObj.ObjID">
            <summary>
            Gets the ID of the PDF object that was read in this operation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseObj.Description">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationParseValue">
            <summary>
            Parse value and create some object from it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParseValue.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParseValue"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParseValue.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseValue.ObjectType">
            <summary>
            Gets the type of object created from value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseValue.ValueDesc">
            <summary>
            Gets the description of value from which object read.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParseValue.Description">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationStack">
            <summary>
            Defines the stack of currently executed operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationStack.Push(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Fr internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationStack.Pop">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagBase">
            <summary>
            Abstract base class for parameterized Marked Content Tags.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagBase.GetTagName">
            <summary>
            Returns tag's name used in BDC / BMC commands.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagBase.HasProperties">
            <summary>
            Gets a value indicating whether the current tag object has additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase">
            <summary>
            Abstract base class for tags that use <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> to store properties.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase.HasProperties">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase.Properties">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object containing the current tag's properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagCustom">
            <summary>
            Represents a common custom tag, which can be prepared to represent any tag.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagCustom.Name">
            <summary>
            Gets or sets this tag's name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid">
            <summary>
            Represents a standard MCID tag.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid"/> class.
            </summary>
            <param name="contentType">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.ContentType"/> property.</param>
            <param name="mcid">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.MCID"/> property.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.ContentType">
            <summary>
            Gets or sets the type of a structure item that owns the content represented by this MCID tag.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.MCID">
            <summary>
            Gets or sets the ID of this marked content sequence.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact">
            <summary>
            Represents a standard Artifact tag.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types">
            <summary>
            Specifies the well-known values of an artifact tag's <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypePagination">
            <summary>
            Pagination.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypeLayout">
            <summary>
            TypeLayout.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypePage">
            <summary>
            TypePage.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypeBackground">
            <summary>
            TypeBackground.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes">
            <summary>
            Specifies the well-known values of an artifact tag's <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtype"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Footer">
            <summary>
            Footer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Watermark">
            <summary>
            Watermark.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type">
            <summary>
            Gets or sets the type of this artifact.
            <para>
            If present, must be one of the names "Pagination", "Layout", "Page", or (PDF 1.7) "Background".
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtype">
            <summary>
            Gets or sets the subtype of this artifact.
            <para>
            This entry applies only when the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type"/> property is "Pagination".
            Valid values are "Header", "Footer" and "Watermark".
            Additional values can be defined for this property, see PDF specification for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.BBox">
            <summary>
            Gets or sets this artifact’s bounding box (the rectangle that completely encloses its visible extent).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Metadata">
            <summary>
            Represents XMP metadata associated with a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Metadata.TimeZoneInfo">
            <summary>
            For testing purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.OnChanged">
            <summary>
            Called when property of <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> is changed, used to track situation when 
            object should be rewritten in case of incremental updates.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.PdfA">
            <summary>
            Gets or sets the PDF/A conformance version.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.PdfUa">
            <summary>
            Gets or sets the PDF/UA conformance version.
            Null indicates that the document is not PDF/UA compliant.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Producer">
            <summary>
            Gets or sets the document's producer. Maps to PDF 'Producer' property.
            The default is the versioned name of the GcPdf library.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Title">
            <summary>
            Gets or sets the document's title. Maps to Dublin Core 'title' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Creators">
            <summary>
            Gets the list of document creators. Maps to Dublin Core 'creator' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Description">
            <summary>
            Gets or sets the document description. Maps to Dublin Core 'description' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Keywords">
            <summary>
            Gets the list of document keywords, or subjects. Maps to Dublin Core 'subject' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Contributors">
            <summary>
            Gets the list of document contributors. Maps to Dublin Core 'contributor' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Coverage">
            <summary>
            Gets or sets the document coverage. Maps to Dublin Core 'coverage' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Identifier">
            <summary>
            Gets or sets the document identifier. Maps to Dublin Core 'identifier' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Languages">
            <summary>
            Gets the list of document languages. Maps to Dublin Core 'language' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Publishers">
            <summary>
            Gets the list of document publishers. Maps to Dublin Core 'publisher' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Relations">
            <summary>
            Gets the list of document relations. Maps to Dublin Core 'relation' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Copyright">
            <summary>
            Gets or sets the document copyright. Maps to Dublin Core 'rights' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Source">
            <summary>
            Gets or sets the document source. Maps to Dublin Core 'source' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Types">
            <summary>
            Gets the list of document types. Maps to Dublin Core 'type' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Dates">
            <summary>
            Gets the list of document dates. Maps to Dublin Core 'date' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.CreateDate">
            <summary>
            Gets or sets the creation date. Maps to XMP 'CreateDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.ModifyDate">
            <summary>
            Gets or sets the modification date. Maps to XMP 'ModifyDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.MetadataDate">
            <summary>
            Gets or sets the metadata date. Maps to XMP 'MetadataDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.CreatorTool">
            <summary>
            Gets or sets the creator tool, in PDF/A compatible documents this value should be
            the same as <see cref="P:GrapeCity.Documents.Pdf.DocumentInfo.Creator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the metadata is marked as read-only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.GetStream(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Gets the content of the current metadata as a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> which owns the current metadata.</param>
            <returns>A <see cref="T:System.IO.Stream"/> representing the current metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.GetXmlDocument(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Gets the content of the current metadata as a <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> which owns the current metadata.</param>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> representing the current metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.Reset">
            <summary>
            Resets values of this <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> object to default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.AddProperty(System.String,System.String,System.String)">
            <summary>
            Adds a property to metadata.
            Note that only allowed namespaces are:
            <para>"http://purl.org/dc/elements/1.1/" (Dublin Core Properties)</para>
            <para>"http://ns.adobe.com/xap/1.0/" (XMP Core Properties)</para>
            <para>"http://ns.adobe.com/pdf/1.3/" (PDF Properties)</para>
            Trying to add a property with another namespace will throw an exception.
            </summary>
            <param name="ns">XML namespace.</param>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.FormatUTC(System.DateTime)">
            <summary>
            Formats a DateTime value for writing to metadata.
            </summary>
            <param name="dateTime">A DateTime value to format.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NameDictionary">
            <summary>
            Represents document's Name Dictionary, see PDF 1.7 page 150 for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.OperatorList">
            <summary>
            The collection of <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Flat">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object containing all operators of this <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/>
            including nested operators of <see cref="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,System.Numerics.Matrix3x2,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,GrapeCity.Documents.Pdf.Layers.ViewState)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from specified <see cref="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            The page bounds calculated using <see cref="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)"/> method.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The document view state.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="errorHandlingMode">Indicates how to handle errors in content stream.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            The page bounds calculated using <see cref="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)"/> method.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.WriteOperators(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.IO.Stream,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.Operators">
            <summary>
            The list of operators to build.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._currentPathOperators">
            <summary>
            The list of operators forming current path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._markedContentOperatorsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._beginCompatibilitySectionOperatorsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/> operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._formXObjectsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._currentGraphicsStateUsedByOperator">
            <summary>
            Indicates whether the CurrentGraphicsState is used by visual operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.AddOperator(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Adds <paramref name="op"/> to the <see cref="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.Operators"/>,
            current <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/>, current <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.OperatorBase">
            <summary>
            Base abstract class representing PDF operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.OperatorBase.Name">
            <summary>
            Gets the operator's PDF name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.OperatorBase.Desc">
            <summary>
            Gets the operator's description.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.WriteOperands(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes operator's operands to the content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.Write(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes the operator to the content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Determines whether the provided operator is the same as the current operator.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> object.</param>
            <returns>true if the provided operator is the same as the current operator; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase,GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.IVisualOperator">
            <summary>
            PDF operators implementing this interface render something.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.IVisualOperator.GetBounds">
            <summary>
            Returns the operator's bounds on the page.
            Note! Method can return a null if bounds can't be determined, it is possible
            if operator's operands are incorrect.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState">
            <summary>
            PDF "q" operator.
            Save the current graphics state on the graphics state stack.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState">
            <summary>
            PDF "Q" operator.
            Restore the graphics state by removing the most recently
            saved state from the stack and making it the current state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix">
            <summary>
            PDF "cm" operator.
            Modify the current transformation matrix (CTM) by concatenating the specified matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Matrix">
            <summary>
            Matrix argument of the operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.#ctor(System.Numerics.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix"/> class.
            </summary>
            <param name="matrix">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Matrix"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineWidth">
            <summary>
            PDF "w" operator.
            Set the line width in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineWidth.LineWidth">
            <summary>
            The line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineWidth.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineWidth"/> class.
            </summary>
            <param name="lineWidth">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineWidth.LineWidth"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineWidth.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineWidth.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineWidth.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle">
            <summary>
            PDF "J" operator.
            Set the line cap style in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap">
            <summary>
            The line cap style.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.#ctor(GrapeCity.Documents.Pdf.LineCapStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle"/> class.
            </summary>
            <param name="lineCap">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle"/> class.
            </summary>
            <param name="lineCap">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap"/> as it specified in PDF content stream.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle">
            <summary>
            PDF "j" operator.
            Set the line join style in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin">
            <summary>
            The line join style.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.#ctor(GrapeCity.Documents.Pdf.LineJoinStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle"/> class.
            </summary>
            <param name="lineJoin">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle"/> class.
            </summary>
            <param name="lineJoin">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin"/> as it specified in PDF content stream.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetMiterLimit">
            <summary>
            PDF "M" operator.
            Set the miter limit in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.MiterLimit">
            <summary>
            The miter limit.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetMiterLimit"/> class.
            </summary>
            <param name="miterLimit">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.MiterLimit"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern">
            <summary>
            PDF "d" operator.
            Set the line dash pattern in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPhase">
            <summary>
            The dash phase.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPattern">
            <summary>
            The dash pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.#ctor(System.Single,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern"/> class.
            </summary>
            <param name="dashPhase">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPhase"/>.</param>
            <param name="dashPattern">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPattern"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent">
            <summary>
            PDF "ri" operator.
            Set the colour rendering intent in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Intent">
            <summary>
            The rendering intent.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.#ctor(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent"/> class.
            </summary>
            <param name="intent">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Intent"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance">
            <summary>
            PDF "i" operator.
            Set the flatness tolerance in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Flatness">
            <summary>
            The flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance"/> class.
            </summary>
            <param name="flatness">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Flatness"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState">
            <summary>
            PDF "gs" operator.
            Set the specified parameters in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName">
            <summary>
            The name of graphics state parameters dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState"/> class.
            </summary>
            <param name="dictName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.#ctor(System.String,GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState"/> class.
            </summary>
            <param name="dictName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Dict"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveTo">
            <summary>
            PDF "m" operator.
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment. If the previous path construction
            operator in the current path was also m, the new m overrides it;
            no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveTo.X">
            <summary>
            The X coordinate of point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveTo.Y">
            <summary>
            The Y coordinate of point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveTo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveTo"/> class.
            </summary>
            <param name="x">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveTo.X"/>.</param>
            <param name="y">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveTo.Y"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveTo.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveTo.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveTo.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.LineTo">
            <summary>
            PDF "l" operator.
            Append a straight line segment from the current point to the point (x, y).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.LineTo.X">
            <summary>
            The X coordinate of point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.LineTo.Y">
            <summary>
            The Y coordinate of point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.LineTo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.LineTo"/> class.
            </summary>
            <param name="x">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.LineTo.X"/>.</param>
            <param name="y">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.LineTo.Y"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.LineTo.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.LineTo.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.LineTo.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1">
            <summary>
            PDF "c" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3), using (x1, y1 ) and (x2, y2 )
            as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X1">
            <summary>
            The X coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y1">
            <summary>
            The Y coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X2">
            <summary>
            The X coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y2">
            <summary>
            The Y coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1"/> class.
            </summary>
            <param name="x1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X1"/>.</param>
            <param name="y1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y1"/>.</param>
            <param name="x2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X2"/>.</param>
            <param name="y2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y2"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2">
            <summary>
            PDF "v" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3),
            using the current point and (x2, y2) as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X2">
            <summary>
            The X coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y2">
            <summary>
            The Y coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2"/> class.
            </summary>
            <param name="x2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X2"/>.</param>
            <param name="y2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y2"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3">
            <summary>
            PDF "y" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3 ),
            using (x1, y1 ) and (x3, y3 ) as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X1">
            <summary>
            The X coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y1">
            <summary>
            The Y coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1"/> class.
            </summary>
            <param name="x1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X1"/>.</param>
            <param name="y1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y1"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseSubPath">
            <summary>
            PDF "h" operator.
            Close the current subpath by appending a straight line segment from the current point to the starting point of the subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CloseSubPath"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.AddRect">
            <summary>
            PDF "re" operator.
            Append a rectangle to the current path as a complete subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.AddRect.Rect">
            <summary>
            The rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.AddRect.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.AddRect"/> class.
            </summary>
            <param name="rect">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.AddRect.Rect"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.AddRect.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.AddRect.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.AddRect.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.PathOperator">
            <summary>
            Base abstract class for operators performing something on the current path: stroke, fill etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.Operators">
            <summary>
            The array of operators forming the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.Path">
            <summary>
            The path object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.GraphicsState">
            <summary>
            The current graphics state.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.PathOperator.PathMatrix">
            <summary>
            The matrix used to render the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PathOperator.GetBounds">
            <summary>
            Returns the path's bounds.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.VisualPathOperator">
            <summary>
            Base abstract class for operators render a path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.VisualPathOperator.IsTilePatternUsed">
            <summary>
            Gets the value indicating whether the path uses Tile pattern.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.StrokePath">
            <summary>
            PDF "S" operator.
            Stroke the path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseStrokePath">
            <summary>
            PDF "s" operator.
            Close and stroke the path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath">
            <summary>
            PDF "f" operator.
            Fill the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath">
            <summary>
            PDF "f*" operator.
            Fill the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath">
            <summary>
            PDF "B" operator.
            Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath">
            <summary>
            PDF "B*" operator.
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath">
            <summary>
            PDF "b" operator.
            Close, fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath">
            <summary>
            PDF "b*" operator.
            Close, fill and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ClosePath">
            <summary>
            PDF "n" operator.
            End the path object without filling or stroking it.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ClosePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ClosePath.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding">
            <summary>
            PDF "W" operator.
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd">
            <summary>
            PDF "W*" operator.
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginText">
            <summary>
            PDF "BT" operator.
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginText.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginText"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndText">
            <summary>
            PDF "ET" operator.
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndText.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndText"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing">
            <summary>
            PDF "Tc" operator.
            Set the character spacing. Character spacing is used by the Tj, TJ, and ' operators.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.CharacterSpacing">
            <summary>
            The character spacing value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing"/> class.
            </summary>
            <param name="characterSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.CharacterSpacing"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetWordSpacing">
            <summary>
            PDF "Tw" operator.
            Set the word spacing. Word spacing is used by the Tj, TJ, and ' operators.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.WordSpacing">
            <summary>
            The word spacing value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetWordSpacing"/> class.
            </summary>
            <param name="wordSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.WordSpacing"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling">
            <summary>
            PDF "Tz" operator.
            Set the horizontal scaling, to (scale / 100). Value is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Scale">
            <summary>
            The horizontal scaling value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling"/> class.
            </summary>
            <param name="scale">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Scale"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextLeading">
            <summary>
            PDF "TL" operator.
            Set the text leading, to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextLeading.TextLeading">
            <summary>
            The text leading value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextLeading.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextLeading"/> class.
            </summary>
            <param name="textLeading">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextLeading.TextLeading"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextLeading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextLeading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextLeading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize">
            <summary>
            PDF "Tf" operator.
            Set the text font and size.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Font">
            <summary>
            The font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontName">
            <summary>
            The font resource name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontSize">
            <summary>
            The font size.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.#ctor(GrapeCity.Documents.Pdf.Text.Font,System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize"/> class.
            </summary>
            <param name="font">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Font"/>.</param>
            <param name="fontName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontName"/>.</param>
            <param name="fontSize">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontSize"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode">
            <summary>
            PDF "Tr" operator.
            Set the text rendering mode. Initial value: <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.TextRenderingMode">
            <summary>
            The text rendering mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode"/> class.
            </summary>
            <param name="textRenderingMode">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.TextRenderingMode"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextRise">
            <summary>
            PDF "Ts" operator.
            Set the text rise, to rise, which is a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextRise.TextRise">
            <summary>
            The text rise value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRise.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextRise"/> class.
            </summary>
            <param name="textRise">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextRise.TextRise"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRise.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRise.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRise.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLine">
            <summary>
            PDF "Td" operator.
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Tx">
            <summary>
            The X offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Ty">
            <summary>
            The Y offset.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLine"/> class.
            </summary>
            <param name="tx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Tx"/>.</param>
            <param name="ty">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Ty"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading">
            <summary>
            PDF "TD" operator.
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Tx">
            <summary>
            The X offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Ty">
            <summary>
            The Y offset.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading"/> class.
            </summary>
            <param name="tx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Tx"/>.</param>
            <param name="ty">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Ty"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextMatrix">
            <summary>
            PDF "Tm" operator.
            Set the text matrix and the text line matrix.
            The matrix specified by the operands is not concatenated onto the current text matrix, but replaces it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Matrix">
            <summary>
            The text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.#ctor(System.Numerics.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextMatrix"/> class.
            </summary>
            <param name="matrix">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Matrix"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine">
            <summary>
            PDF "T*" operator.
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase">
            <summary>
            Base abstract class for PDF operators showing text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/> object describing text to show.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <paramref name="graphicsState"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetBounds">
            <summary>
            Returns the text's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetText">
            <summary>
            Returns the operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.SetText(System.String)">
            <summary>
            Sets the operator text.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText">
            <summary>
            PDF "Tj" operator.
            Show a text string.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText.Text"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText.SetText(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText1">
            <summary>
            PDF "'" operator.
            Move to the next line and show a text string.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText1.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText1.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText1"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText1.Text"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText1.SetText(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText1.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText1.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText2">
            <summary>
            PDF """ operator.
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              WordSpacing Tw
              CharSpacing Tc
              str '
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText2.WordSpacing">
            <summary>
            The word spacing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText2.CharSpacing">
            <summary>
            The char spacing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText2.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText2.#ctor(System.Single,System.Single,GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText2"/> class.
            </summary>
            <param name="wordSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText2.WordSpacing"/>.</param>
            <param name="charSpacing">the value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText2.CharSpacing"/>.</param>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText2.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText2.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText2.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText2.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText2.SetText(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning">
            <summary>
            PDF "TJ" operator.
            Show one or more text strings, allowing individual glyph positioning.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.SetText(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpace">
            <summary>
            Base abstract class for operators defining color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpaceName">
            <summary>
            The color space name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> object defining new color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColorSpace.#ctor(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColorSpace"/> class.
            </summary>
            <param name="colorSpaceName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpaceName"/>.</param>
            <param name="colorSpace">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpace"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColorSpace.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking">
            <summary>
            PDF "CS" operator.
            Set the current color space to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking">
            <summary>
            PDF "cs" operator.
            Same as <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking"/> but used for nonstroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor">
            <summary>
            Base abstract class for operators defining color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColor.Color">
            <summary>
            The new color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColor.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColor"/> class.
            </summary>
            <param name="color">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColor.Color"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColor.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking">
            <summary>
            PDF "SC" operator.
            Set the color to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking">
            <summary>
            PDF "sc" operator.
            Set the color to use for non stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking">
            <summary>
            PDF "SCN" operator.
            Set the color to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking">
            <summary>
            PDF "scn" operator.
            Set the color to use for non stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking">
            <summary>
            PDF "G" operator.
            Set the stroking color space to DeviceGray and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking">
            <summary>
            PDF "g" operator.
            Set the nonstroking color space to DeviceGray and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking">
            <summary>
            PDF "RG" operator.
            Set the stroking color space to DeviceRGB and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking">
            <summary>
            PDF "rg" operator.
            Set the nonstroking color space to DeviceRGB and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking">
            <summary>
            PDF "K" operator.
            Set the stroking color space to DeviceCMYK and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking">
            <summary>
            PDF "k" operator.
            Set the nonstroking color space to DeviceCMYK and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidth">
            <summary>
            PDF "d0" operator.
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wx">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wy">
            <summary>
            The vertical displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidth"/> class.
            </summary>
            <param name="wx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wx"/>.</param>
            <param name="wy">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wy"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox">
            <summary>
            PDF "d1" operator.
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wx">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wy">
            <summary>
            The vertical displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLX">
            <summary>
            The X coordinate of the lower-left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLY">
            <summary>
            The Y coordinate of the lower-left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URX">
            <summary>
            The X coordinate of the upper-right corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URY">
            <summary>
            The Y coordinate of the upper-right corner.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox"/> class.
            </summary>
            <param name="wx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wx"/>.</param>
            <param name="wy">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wy"/>.</param>
            <param name="llx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLX"/>.</param>
            <param name="lly">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLY"/>.</param>
            <param name="urx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URX"/>.</param>
            <param name="ury">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URY"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.InlineImage">
            <summary>
            PDF "BI" and "EI" operators.
            Draw inline image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.InlineImage.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> object defining image to draw.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.InlineImage.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> object defining the graphics state when this
            operator executed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.#ctor(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.InlineImage"/> class.
            </summary>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.InlineImage.Image"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.InlineImage.GraphicsState"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Matrix">
            <summary>
            Gets the GraphicsState.Matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret the non-stroke color of graphics state used by this operator
            as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.GetBounds">
            <summary>
            Returns the image's bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DrawShading">
            <summary>
            PDF "sh" operator.
            Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DrawShading.ShadingName">
            <summary>
            The name of the shading.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DrawShading.Shading">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.#ctor(System.String,GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DrawShading"/> class.
            </summary>
            <param name="shadingName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DrawShading.ShadingName"/>.</param>
            <param name="shading">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DrawShading.Shading"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.GetBounds">
            <summary>
            Returns the operator's bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DrawShading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DrawShading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoXObject">
            <summary>
            PDF "Do" operator.
            Base class for DoFormXObject and DoImage.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName">
            <summary>
            The name of the external object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> object defining the graphics state when this
            operator executed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.#ctor(System.String,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoXObject"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret the non-stroke color of graphics state used by this operator
            as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Matrix">
            <summary>
            Gets the GraphicsState.Matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.GetBounds">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object to draw.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.Operators">
            <summary>
            The list of operators of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoFormXObject.#ctor(System.String,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="formXObject">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoFormXObject.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoFormXObject.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoImage">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoImage.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.#ctor(System.String,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.IPdfImageEx)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoImage"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoImage.Image"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.GetBoundsEx">
            <summary>
            Returns the operator's bounds on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoImage.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoImageWrapper">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.#ctor(System.String,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoImage"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Image"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint">
            <summary>
            PDF "MP" operator.
            Designate a marked-content point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role">
            <summary>
            Indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams">
            <summary>
            PDF "DP" operator.
            Designate a marked-content point with an associated property list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> containing the properties list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.DictName">
            <summary>
            The name of the dictionary in the resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.#ctor(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.DictName"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent">
            <summary>
            PDF "BMC" operator.
            Begin a marked-content sequence terminated by a balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role">
            <summary>
            Indicating the role or significance of the sequence.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Operators">
            <summary>
            The list of operators between BMC and EMC.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams">
            <summary>
            PDF "BDC" operator.
            Begin a marked-content sequence terminated by a balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> containing the properties list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName">
            <summary>
            The name of the dictionary in the resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.#ctor(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginLayer">
            <summary>
            PDF "BDC" operator.
            Begin a PDF layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Layer">
            <summary>
            The PDF layer, maybe <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Active">
            <summary>
            Indicates whether the <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Layer"/> was active.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginLayer.#ctor(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName"/>.</param>
            <param name="layer">The layer <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.</param>
            <param name="active">Indicates whether layer was active.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginLayer.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginLayer.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent">
            <summary>
            PDF "EMC" operator.
            End a marked-content sequence begun by a <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> or
            <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.BeginMarkedContent">
            <summary>
            The balanced <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.#ctor(GrapeCity.Documents.Pdf.Operators.BeginMarkedContent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> class.
            </summary>
            <param name="beginMarkedContent">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.BeginMarkedContent"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection">
            <summary>
            PDF "BX" operator.
            Begin a compatibility section. Unrecognized operators (along with their operands)
            shall be ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Operators">
            <summary>
            The list of operators between BX and EX.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection">
            <summary>
            PDF "EX" operator.
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.BeginCompatibilitySection">
            <summary>
            The balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.#ctor(GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection"/> class.
            </summary>
            <param name="beginCompatibilitySection">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.BeginCompatibilitySection"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNodeCollection">
            <summary>
            Defines the collection of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNodeCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RootOutlineNodeCollection">
            <summary>
            Root, document-level collection of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RootOutlineNodeCollection.OldObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.OldObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RootOutlineNodeCollection.ObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RootOutlineNodeCollection.DocID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootOutlineNodeCollection.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes "Outlines" dictionary to the PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNode">
            <summary>
            Defines the outline node within PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be activated when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> clicked.</param>
            <param name="expanded">The initial expanded state of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String,GrapeCity.Documents.Pdf.Actions.ActionBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
            <param name="action">The <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be activated when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> clicked.</param>
            <param name="expanded">The initial expanded state of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/> collection containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Title">
            <summary>
            Gets or sets the title of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.TextColor">
            <summary>
            Gets or sets the text color of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.TextStyle">
            <summary>
            Gets or sets the text style of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> is activated.
            If both <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Dest"/> and <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Action"/> are specified when <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Action"/>
            wil be written to PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Action">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be performed when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> is activated.
            If both <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Dest"/> and <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Action"/> are specified when <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Action"/>
            wil be written to PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Expanded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> expanded and its child nodes are visible.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Children">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/> collection containing child nodes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.HasChildren">
            <summary>
            Gets a value indicating whether <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Children"/> collection is not empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNode.FontStyle">
            <summary>
            Defines possible styles of outline text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Italic">
            <summary>
            Italic style.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Bold">
            <summary>
            Bold style.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutputIntent">
            <summary>
            Represents a PDF Output Intent.
            <para>
            Output intents provide a means for matching the color characteristics of page content
            in a PDF document with those of a target output device or production environment
            in which the document will be printed.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.GTS_PDFX">
            <summary>
            The string representing the GTS_PDFX output intent subtype.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.GTS_PDFA1">
            <summary>
            The string representing the GTS_PDFA1 output intent subtype.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.ISO_PDFE1">
            <summary>
            The string representing the ISO_PDFE1 output intent subtype.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.Subtype">
            <summary>
            Gets or sets the output intent subtype.
            <para>
            According to the PDF specification the value may be GTS_PDFX, GTS_PDFA1, ISO_PDFE1
            or a key defined by an ISO 32000 extension.
            GcPdf allows setting this property to any value, the user is responsible for
            the correctness of the data.
            </para>
            This value is "GTS_PDFA1" by default.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition">
            <summary>
            Gets or sets a string concisely identifying the intended output device or production condition
            in human-readable form.
            <para>
            This is the preferred method of defining such a string for presentation to the user.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier">
            <summary>
            Gets or sets a string identifying the intended output device or production condition in
            human- or machine-readable form.
            <para>
            If human-readable, this string may be used in lieu of the <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition"/> string for presentation to the user.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.RegistryName">
            <summary>
            Gets or sets a string (conventionally a uniform resource identifier, or URI) identifying
            the registry in which the condition designated by <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier"/> is defined.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.Info">
            <summary>
            Gets or sets a string containing additional information or comments about the intended target
            device or production condition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.DestOutputProfile">
            <summary>
            Gets or sets an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> color space defining the transformation from the PDF document’s source colors
            to output device colorants.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutputIntent.Create(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> object with specified parameters.
            </summary>
            <param name="outputConditionIdentifier">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier"/>.</param>
            <param name="outputCondition">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition"/>.</param>
            <param name="registryName">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.RegistryName"/>.</param>
            <param name="info">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.Info"/>.</param>
            <param name="iccMetadata">The stream with ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageCollection">
            <summary>
            A collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects that make up a PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageCollection.OldObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.OldObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageCollection.ObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageCollection.DocID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Swap(System.Int32,System.Int32)">
            <summary>
            Swaps two pages specified by their 0-based indices.
            </summary>
            <param name="index1">The index of the first page to swap.</param>
            <param name="index2">The index of the second page to swap.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> and adds it to the end of the document.
            </summary>
            <returns>The newly created page.</returns>
            <remarks>
            <para>The size of the new page is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/>
            property of the parent document.</para>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add(System.Drawing.SizeF)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> with the specified size and adds it to
            the end of the document.
            </summary>
            <param name="pageSize">The size of the new page, in points.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add(GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> of the specified <see cref="T:GrapeCity.Documents.Common.PaperKind"/> and adds it to
            the end of the document.
            </summary>
            <param name="paperKind">The <see cref="T:GrapeCity.Documents.Common.PaperKind"/> determining the size of the new page.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32)">
            <summary>
            Creates a new page and inserts it at a specific position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>The size of the new page is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/> property
            of the parent document.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32,System.Drawing.SizeF)">
            <summary>
            Creates a new page with the specified size and inserts it at a specific
            position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <param name="pageSize">The size of the new page, expressed in points.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32,GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates a new page with the specified size and inserts it at a specific
            position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <param name="paperKind">The size of the new page, expressed as a <see cref="T:GrapeCity.Documents.Common.PaperKind"/>.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageCollection.Last">
            <summary>
            Gets the last page in the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AnnotationsTabsOrder">
            <summary>
            Defines possible values for annotations tabs order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.RowOrder">
            <summary>
            Row order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.ColumnOrder">
            <summary>
            Column order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.StructureOrder">
            <summary>
            Structure order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.AnnotationsArrayOrder">
            <summary>
            <b>Annotations array order</b>.
            This order refers to the order of annotation in the
            <see cref="P:GrapeCity.Documents.Pdf.Page.Annotations"/> collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.WidgetOrder">
            <summary>
            <b>Widget order</b>.
            This order uses the same ordering as <see cref="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.AnnotationsArrayOrder"/>,
            but two passes are made,
            the first only picking the widget annotations and the second picking all other annotations.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Page">
            <summary>
            Represents a page in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Page.ParentID">
            <summary>
            The parent of page, used when count of pages exceeds the c_MaxPDFAArraySize,
            <see cref="M:GrapeCity.Documents.Pdf.PageCollection.BeforeSave"/>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Page"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.WriteContentStreams(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes NOT empty content stream objects,
            returns ObjID of first not empty content stream or <see cref="F:GrapeCity.Documents.Pdf.PdfObjID.Empty"/> if all are empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.WriteOtherObjects(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes other nested objects: annotations etc
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.EndPage(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Called in sequential mode (StartDoc / EndDoc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.OnRemoved">
            <summary>
            Called when page removed from document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> used by this page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(System.Drawing.SizeF,GrapeCity.Documents.Common.PaperKind,System.Boolean)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/> initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
            <param name="sizeInPoints"></param>
            <param name="paperKind"></param>
            <param name="landscape"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(System.Drawing.SizeF)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/> initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
            <param name="sizeInPoints"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/> initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
            <param name="paperKind"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in PNG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in PNG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in PNG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in PNG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in BMP format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in BMP format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in BMP format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in BMP format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in GIF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in GIF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in GIF format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in GIF format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in JPEG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in JPEG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in JPEG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in JPEG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a stream in TIFF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a stream in TIFF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a file in TIFF format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a file in TIFF format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a stream in SVG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a stream in SVG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a file in SVG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a file in SVG format.
            </summary>
            <param name="fileName">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ToSvgz(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page to a byte array in SVGZ format.
            </summary>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ToSvgz(GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page to a byte array in SVGZ format.
            </summary>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.RemoveLayersContent(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])">
            <summary>
            Removes the content associated with specified PDF layers.
            <para>
            Note that if any content was removed from a page by this method,
            all remaining content on that page will be merged into a single content stream,
            and the <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection will contain just that single element.
            </para>
            </summary>
            <param name="layers">The array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTransparencyFeatures(System.Boolean,System.Boolean)">
            <summary>
            For internal uses.
            Returns the PDF rendering features used by the page content stream.
            </summary>
            <param name="checkAnnotations">Indicates whether to check the annotations content streams.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures"/> value defining used features.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean,System.Boolean)">
            <summary>
            Draws the page on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the page.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="drawAnnotations">Indicates whether to draw the annotations.</param>
            <param name="drawFormFields">Indicates whether to draw the form fields.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="print">Indicates whether the image is generated for printing.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws the page on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the page.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="drawAnnotations">Indicates whether to draw the annotations.</param>
            <param name="drawFormFields">Indicates whether to draw the form fields.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetAnnotations(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws specified annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            <para>Note that the specified annotations must belong to the current page.</para>
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="annotations">The list of annotations to draw.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws specified annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            <para>Note that the specified annotations must belong to the current page.</para>
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="annotations">The list of annotations to draw.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.RenderingCache)">
            <summary>
            Draws all page annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetPageLabelingRange">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> object that specifies the label of this page,
            or null if no such range exists.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> that corresponds to this page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetLabel">
            <summary>
            Returns the page label specified via <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/>,
            returns empty string if page does not belong to document.
            </summary>
            <returns>The page label.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetUsedFonts">
            <summary>
            Gets the list of fonts referenced from content streams on this page.
            </summary>
            <returns>The list of fonts referenced from this page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)">
            <summary>
            Tries to recognize a table within specified bounds,
            if the table is found returns an object that allows
            accessing the table's rows, columns and cells.
            </summary>
            <param name="bounds">The bounds within which to look for a table.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="options">The table extraction options.</param>
            <param name="dpiX">The horizontal resolution. This determines the unit of measurement used by horizontal values in <paramref name="options"/>.</param>
            <param name="dpiY">The vertical resolution. This determines the unit of measurement used by vertical values in <paramref name="options"/>.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/> object containing information about the table,
            or null if no table could be found within the specified bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)">
            <summary>
            Tries to recognize a table within specified bounds,
            if the table is found returns an object that allows
            accessing the table's rows, columns and cells.
            </summary>
            <param name="bounds">The bounds within which to look for a table.</param>
            <param name="options">The table extraction options.</param>
            <param name="dpiX">The horizontal resolution. This determines the unit of measurement used by horizontal values in <paramref name="options"/>.</param>
            <param name="dpiY">The vertical resolution. This determines the unit of measurement used by vertical values in <paramref name="options"/>.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/> object containing information about the table,
            or null if no table could be found within the specified bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> for this page.
            <para>
            Note that the value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/>
            property affects the map that is created.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution of the map, the default is 72dpi.</param>
            <param name="dpiY">The vertical resolution of the map, the default is 72dpi.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> for this page.
            </summary>
            <param name="dpiX">The horizontal resolution of the map, the default is 72dpi.</param>
            <param name="dpiY">The vertical resolution of the map, the default is 72dpi.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetText(GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean)">
            <summary>
            Retrieves all text on the current page.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during processing.</param>
            <returns>The page text, or null if the page does not contain any text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetText(System.Boolean)">
            <summary>
            Retrieves all text on the current page.
            </summary>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during processing.</param>
            <returns>The page text, or null if the page does not contain any text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(GrapeCity.Documents.Common.Quadrilateral,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> to adjust.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(System.Drawing.PointF,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:System.Drawing.PointF"/> to convert.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:System.Drawing.PointF"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(System.Drawing.RectangleF,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:System.Drawing.RectangleF"/> to adjust.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:System.Drawing.RectangleF"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)">
            <summary>
            Gets the size of the page on a device with specified horizontal and vertical resolutions.
            </summary>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetUserToDeviceMatrix(System.Single,System.Single,System.Boolean)">
            <summary>
            Returns the matrix used to convert coordinates in content stream of this page
            to device coordinates.
            </summary>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <param name="ignoreRotate">Indicates whether to ignore rotation specified for page with <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/> property.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.Page"/>.
            <para>Notes:</para>
            <list type="number">
            <item>The stream returned by this method should be disposed after use.</item>
            <item>This method can return null if the current page is empty.</item>
            <item>In sequential generate mode this method is not supported and will throw an exception.</item>
            </list>
            </summary>
            <returns>A stream with the current page's content.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetOperators(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Returns the list of PDF operators forming the page content.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetImages(System.Single,System.Single)">
            <summary>
            Gets the list of images on this page.
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on the page.</param>
            <returns>The list of images on the current page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetImages(System.Single,System.Single,System.Boolean)">
            <summary>
            Gets the list of images on this page.
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>The list of images on the current page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.CreateEmptyTextMap">
            <summary>
            For internal use.
            Creates the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object representing an empty map, has no text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TransitionDuration">
            <summary>
            Gets or sets the page’s display duration (also called its advance timing):
            the maximum length of time, in seconds, that the page shall be displayed during presentations
            before the viewer application shall automatically advance to the next page
            Default: null (the viewer shall not advance automatically).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TransitionEffect">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.TransitionEffect"/> object describing the transition effect
            that shall be used when displaying the page during presentations
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ArticleBeads">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects displayed on this page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.UserUnit">
            <summary>
            Gets or sets a positive number greater than 1 giving the size of default user space units, in multiples of 1/72 inch.
            <para>Default value: 1.0 (user unit is 1/72 inch).</para>
            </summary>
            <remarks>
            As of December 2018, it seems that only Adobe Acrobat readers respect this property.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.AnnotationsTabsOrder">
            <summary>
            Gets or sets the tab order to be used for annotations on the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Graphics">
            <summary>
            Gets an instance of GcPdfGraphics that can be used to draw on the current page,
            graphics created from the last page content stream, if
            <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection is empty then new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>
            automatically added.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ContentStreams">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> containing content streams representing
            content of this page.
            <para>
            Note that while manipulating the <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection
            (inserting, removing or moving elements) is allowed, the result of such
            manipulations may produce an invalid PDF if the original document was created
            or modified by a tool other than GcPdf. Generally speaking, it is safe to
            insert new content streams at the first position in the collection,
            or add them to the end of it, provided any content in the new stream(s)
            was created by rendering on <see cref="M:GrapeCity.Documents.Pdf.PageContentStream.GetGraphics(GrapeCity.Documents.Pdf.Page)"/>.
            Any other operations on this collection in documents that were not created
            by GcPdf might yield invalid PDFs.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Index">
            <summary>
            Gets the index of the page in its document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageCollection"/> collection containing this <see cref="T:GrapeCity.Documents.Pdf.Page"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Bounds">
            <summary>
            Gets the bounds of the current page in points.
            The return value is the same as returned by <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.MediaBox">
            <summary>
            Gets or sets the bounds of the page in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.CropBox">
            <summary>
            Gets or sets a rectangle, in points, defining the visible region of default user space.
            When the page is displayed or printed, its contents are to be clipped (cropped) to this
            rectangle and then imposed on the output medium in some implementation-defined manner.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.BleedBox">
            <summary>
            Gets or sets a rectangle, in points, defining the region to which the contents of the page
            should be clipped when output in a production environment.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TrimBox">
            <summary>
            Gets or sets a rectangle, in points, defining the intended dimensions of the finished page after trimming
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ArtBox">
            <summary>
            Gets or sets a rectangle, in points, defining the extent of the page's meaningful content
            (including potential white space) as intended by the page's creator.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Size">
            <summary>
            Gets or sets the size of the current page in points.
            <para>
            This property is a wrapper around <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> or <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/> properties.
            If <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/> is not null then this property gets or sets its value,
            otherwise it gets or sets the value of <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.PaperKind">
            <summary>
            Gets or sets the paper kind of the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Landscape">
            <summary>
            Gets or sets a value indicating whether the current page has landscape orientation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Tag">
            <summary>
            Gets or sets an arbitrary application-defined object associated with the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Annotations">
            <summary>
            Gets the list annotations associated with the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Rotate">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            The value must be a multiple of 90.
            Default value: 0.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageArticleBeadCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects owned by <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageArticleBeadCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageContentStreamCollection">
            <summary>
            Defines collection of <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.HasNotEmptyStreams">
            <summary>
            Returns true if collection contains NOT empty content streams.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Last">
            <summary>
            Gets the last <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> in the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.Add">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> and adds it to this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <returns>The newly created page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.Insert(System.Int32)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> and inserts it at a specific position in this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageContentStream">
            <summary>
            Defines content stream of the page of <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageContentStream._startDocStreamOffset">
            <summary>
            Used during sequential writing, contains offset in document stream where page content started.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageContentStream._disposeStream">
            <summary>
            Used during sequential writing, indicates that <see cref="F:GrapeCity.Documents.Pdf.ContentStream.m_Stream"/> should be disposed
            when <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> closed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.OnRemoved">
            <summary>
            Called when PageContentStream removed from document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.EndPage(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Called in sequential mode (StartDoc / EndDoc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.GetGraphics(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Returns an instance of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> that can be used to generate content
            of this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> containing this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.GetStream">
            <summary>
            Gets the System.IO.Stream containing the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/> object.
            <para>It is the caller's responsibility to dispose the returned stream after usage.</para>
            <para>Note 1: this method returns null if the current ContentStream object is empty.</para>
            <para>Note 2: in StartDoc/EndDoc mode this method is not supported and will throw an exception.</para>
            <para>Note 3: In some rare cases a page's content stream can break inside an operator, for example,
            some operands are in Page.ContentStreams[0] and other operands are in Page.ContentStreams[1].
            This is weird but does not contradict the PDF Specification. To avoid such situations use <see cref="M:GrapeCity.Documents.Pdf.Page.GetStream"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStream.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NumberingStyle">
            <summary>
            Defines possible numbering styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.DecimalArabic">
            <summary>
            Decimal Arabic numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.UppercaseRoman">
            <summary>
            Uppercase Roman numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.LowercaseRoman">
            <summary>
            Lowercase Roman numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.UppercaseLetters">
            <summary>
            Uppercase letters (A to Z for the first 26 pages, AA to ZZ for the next 26, and so on).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.LowercaseLetters">
            <summary>
            Lowercase letters (a to z for the first 26 pages, aa to zz for the next 26, and so on).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.Unset">
            <summary>
            Value is not specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageLabelingRange">
            <summary>
            Represents a page labeling range.
            <para>
            A document is divided into labeling ranges, each of which is a series of consecutive pages
            using the same numbering system.
            Labeling ranges shall not overlap, so that each page shall have only one label.
            Pages within a range shall be numbered sequentially in ascending order.
            A page's label consists of a numeric portion based on its position within its labeling range,
            optionally preceded by a label prefix denoting the range itself.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.#ctor(System.String,GrapeCity.Documents.Pdf.NumberingStyle,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.GetPageLabel(System.Int32)">
            <summary>
            Returns the label for a page with a specified index.
            </summary>
            <param name="pageDocumentIndex">The page index in a document.</param>
            <returns>The page label.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.FirstPageIndexInDocument">
            <summary>
            Gets the index of the page from which this <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> starts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.Prefix">
            <summary>
            Gets or sets the label prefix for page labels in this range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.StartPageNumber">
            <summary>
            Gets or sets the value of the numeric portion for the first page label in the range.
            Subsequent pages shall be numbered sequentially from this value,
            which shall be greater than or equal to 1. Default value: 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.NumberingStyle">
            <summary>
            Gets or sets the numbering style that shall be used for the numeric portion of each page label.
            There is no default numbering style; if <see cref="P:GrapeCity.Documents.Pdf.PageLabelingRange.NumberingStyle"/> is
            <see cref="F:GrapeCity.Documents.Pdf.NumberingStyle.Unset"/>, page labels
            shall consist solely of a label prefix with no numeric portion.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRanges.GetRange(System.Int32)">
            <summary>
            Returns a <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> for specified page index.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.IResourceProvider">
            <summary>
            Provides a mechanism for getting a resource by its name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor">
            <summary>
            Base class for content stream processors which can be used for:
            rendering, text searching etc.
            </summary>
            <summary>
            Base class for content stream processors which can be used for:
            rendering, text searching etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.IsSoftMaskObjectUsed(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask)">
            <summary>
            Checks whether the specified <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> referenced from the current graphics state
            or from any graphics state in stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetTextFontAndSize(System.String,GrapeCity.Documents.Pdf.Text.Font,System.Single)">
            <summary>
            Sets current text font and size, called when executing "Tf" operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OnSetResourceColorSpace(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Callback method, called when <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> defined as resource defined as current
            color space via "SC" or "sc" commands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OnSetColorSpaceColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Callback method, called when new color is set as current color via "SC", "sc", "SCN" or "scn" commands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorSpace(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "CS" and "cs" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColor1(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "SC" and "sc".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColor2(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "SCN" and "scn".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorGray(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "G" and "g".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorRGB(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "RG" and "rg".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorCMYK(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "K" and "k".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.DrawPath(System.Boolean,System.Nullable{GrapeCity.Documents.Pdf.FillRule})">
            <summary>
            Draws the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>, called by OpXXXPath() methods.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)">
            <summary>
            Intersects current clipping path with specified path, called by "W" and "W*" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PopClipPath">
            <summary>
            Removes last path added by <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Override this method to render a text.
            Current text rendering matrix can be requested via <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix"/>
            method.
            NOTE, this method should advance text matrix, see <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single)"/> methods.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessImage(System.String,GrapeCity.Documents.Pdf.IPdfImageEx)">
            <summary>
            Processes an image.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessShading(System.String,GrapeCity.Documents.Pdf.Graphics.Shadings.ShadingBase)">
            <summary>
            Draws a shading.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessFormXObject(System.String,GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Processes nested <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetBlendMode(GrapeCity.Documents.Pdf.PdfBlendMode)">
            <summary>
            Called when current blend mode in m_CurrentGraphicsState.BlendMode is changed.
            Note! m_CurrentGraphicsState.BlendMode already contains new value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetSoftMask(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask)">
            <summary>
            Sets the soft mask defined by <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object,
            this object created from the <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/>
            using <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateSoftMask(GrapeCity.Documents.Pdf.Graphics.SoftMask)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateSoftMask(GrapeCity.Documents.Pdf.Graphics.SoftMask)">
            <summary>
            Create a <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> from PDF soft mask definition.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetGraphicsStateParams(System.String,GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Sets graphics state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SaveGraphicsState">
            <summary>
            Saves current graphics state to the stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.RestoreGraphicsState">
            <summary>
            Restores graphics state from the stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            (see Section 4.2.1, “Coordinate Spaces”).
            Although the operands specify a matrix, they are written as six separate numbers, not as an array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineCapStyle(System.Int32)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineJoinStyle(System.Int32)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRenderingIntent(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            "ri"
            (PDF 1.1) Set the color rendering intent in the graphics state
            (see “Rendering Intents” on page 260).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetFlatnessTolerance(System.Single)">
            <summary>
            "i"
            Set the flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s
            default flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetGraphicsStateParams(System.String)">
            <summary>
            "gs"
            (PDF 1.2) Set the specified parameters in the graphics state.
            dictName is the name of a graphics state parameter dictionary
            in the ExtGState subdictionary of the current resource dictionary (see the next section).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginSubPath(System.Single,System.Single)">
            <summary>
            "m"
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            If the previous path construction operator in the current path was also m,
            the new "m" overrides it; no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendLine(System.Single,System.Single)">
            <summary>
            "l"
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "c"
            Append a cubic Bézier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "v"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bézier control points
            (see “Cubic Bézier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "y"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "re"
            Append a rectangle to the current path as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpStrokePath">
            <summary>
            "S"
            Stroke the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseStrokePath">
            <summary>
            "s"
            Close and stroke the path. This operator has the same effect as the sequence h S.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillNonZeroWindingPath">
            <summary>
            "f"
            Fill the path, using the nonzero winding number rule to determine the region to fill
            (see “Nonzero Winding Number Rule” on page 232).
            Any subpaths that are open are implicitly closed before being filled.
            
            Also this method executes "F" command.
            Equivalent to f; included only for compatibility. Although PDF consumer applications
            must be able to accept this operator, PDF producer applications should use f instead.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillEvenOddPath">
            <summary>
            "f*"
            Fill the path, using the even-odd rule to determine the region to fill
            (see “Even-Odd Rule” on page 233).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillStrokeNonZeroWindingPath">
            <summary>
            "B"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillStrokeEvenOddPath">
            <summary>
            "B*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseFillStrokeNonZeroWindingPath">
            <summary>
            "b"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseFillStrokeEvenOddPath">
            <summary>
            "b*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpClosePath">
            <summary>
            "n"
            End the path object without filling or stroking it.
            This operator is a path-painting no-op, used primarily for the side effect of changing
            the current clipping path (see Section 4.4.3, “Clipping Path Operators”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetClippingPathNonZeroWinding">
            <summary>
            "W"
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetClippingPathEvenOdd">
            <summary>
            "W*"
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginText">
            <summary>
            "BT"
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndText">
            <summary>
            "ET"
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetCharacterSpacing(System.Single)">
            <summary>
            "Tc"
            Set the character spacing, Tc , to charSpace, which is a number expressed in unscaled text
            space units. Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="charSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetWordSpacing(System.Single)">
            <summary>
            "Tw"
            Set the word spacing, Tw , to wordSpace, which is a number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="wordSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextLeading(System.Single)">
            <summary>
            "TL"
            Set the text leading, Tl , to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
            <param name="leading"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextFontAndSize(System.String,System.Single)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font subdictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextRenderingMode(System.Int32)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextRise(System.Single)">
            <summary>
            "Ts"
            Set the text rise, Trise, to rise, which is a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLine(System.Single,System.Single)">
            <summary>
            "Td"
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            tx and ty are numbers expressed in unscaled text space units.
            More precisely, this operator performs the following assignments:
                       | 1  0  0 |
            Tm = Tlm = | 0  1  0 | * Tlm
                       | tx ty 1 |
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLineUpdateLeading(System.Single,System.Single)">
            <summary>
            "TD"
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "Tm"
            Set the text matrix, Tm , and the text line matrix, Tlm:
              Tm = Tlm = m
            The matrix specified by the operands is not concatenated onto the current text matrix,
            but replaces it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLine">
            <summary>
            "T*"
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "Tj"
            Show a text string.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText1(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "'"
            Move to the next line and show a text string. This operator has the same effect as the code:
              T*
              str Tj
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText2(System.Single,System.Single,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            """
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              aw Tw
              ac Tc
              str '
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            "TJ"
            Show one or more text strings, allowing individual glyph positioning
            (see implementation note 58 in Appendix H).
            Each element of array can be a string or a number.
            If the element is a string, this operator shows the string.
            If it is a number, the operator adjusts the text position by that amount;
            that is, it translates the text matrix, Tm.
            The number is expressed in thousandths of a unit of text space
            (see Section 5.3.3, “Text Space Details,” and implementation note 59 in Appendix H).
            This amount is subtracted from the current horizontal or vertical coordinate,
            depending on the writing mode.
            In the default coordinate system, a positive adjustment has the effect of
            moving the next glyph painted either to the left or down by the given amount.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorSpaceStroking(System.String)">
            <summary>
            "CS"
            
            (PDF 1.1) Set the current color space to use for stroking operations.
            The operand name must be a name object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorSpaceNonStroking(System.String)">
            <summary>
            "cs"
            
            (PDF 1.1) Same as CS but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor1Stroking">
            <summary>
            "SC"
            
            (PDF 1.1) Set the color to use for stroking operations in a device,
            CIE-based (other than ICCBased), or Indexed color space.
            The number of operands required and their interpretation depends
            on the current stroking color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor1NonStroking">
            <summary>
            "sc"
            
            (PDF 1.1) Same as SC but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor2Stroking">
            <summary>
            "SCN"
            
            Same as SC but also supports Pattern, Separation, DeviceN, and ICCBased color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor2NonStroking">
            <summary>
            "scn"
            
            (PDF 1.1) Same as SCN but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorGrayStroking">
            <summary>
            "G"
            
            Set the stroking color space to DeviceGray
            (or the DefaultGray color space; see “Default Color Spaces” on page 257)
            and set the gray level to use for stroking operations.
            gray is a number between 0.0 (black) and 1.0 (white).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorGrayNonStroking">
            <summary>
            "g"
            
            Same as G but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRGBStroking">
            <summary>
            "RG"
            
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRGBNonStroking">
            <summary>
            "rg"
            
            Same as RG but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorCMYKStroking">
            <summary>
            "K"
            
            Set the stroking color space to DeviceCMYK (or the DefaultCMYK color space;
            see “Default Color Spaces” on page 257) and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (zero concentration) and 1.0 (maximum concentration).
            The behavior of this operator is affected by the overprint mode
            (see Section 4.5.6, “Overprint Control”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorCMYKNonStroking">
            <summary>
            "k"
            
            Same as K but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpType3SetWidth(System.Single,System.Single)">
            <summary>
            "d0"
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpType3SetWidthAndBoundingBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "d1"
            Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not color.
            llx and lly are the coordinates of the lower-left corner, and urx and ury the upper-right corner, of the glyph bounding box.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpDrawShading(System.String)">
            <summary>
            "sh"
            (PDF 1.3) Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            The current color in the graphics state is neither used nor altered.
            The effect is different from that of painting a path using a shading pattern as the current color.
            name is the name of a shading dictionary resource in the Shading subdictionary of
            the current resource dictionary(see Section 3.7.2, “Resource Dictionaries”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpDoXObject(System.String)">
            <summary>
            "Do"
            An external object (commonly called an XObject) is a graphics object
            whose contents are defined by a self-contained content stream,
            separate from the content stream in which it is used.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMarkedContentPoint(System.String)">
            <summary>
            "MP"
            Designate a marked-content point. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMarkedContentPoint2(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            "DP"
            Designate a marked-content point with an associated property list. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginCompatibilitySection">
            <summary>
            "BX"
            Begin a compatibility section. Unrecognized operators (along with their operands) are ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndCompatibilitySection">
            <summary>
            "EX"
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndInlineImage(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            "EI"
            
            Ends inline image, defined using "BI" "ID" "EI" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix">
            <summary>
            Returns matrix which converts unscaled text coordinate space to device coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrixUserSpace">
            <summary>
            Returns matrix which converts unscaled text coordinate space to user coordinate space,
            unlike <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix"/> do not apply <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.UserToDeviceMatrix"/>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Do">
            <summary>
            Processes content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetFont(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetPattern(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase"/> object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateStrokePen(System.Drawing.Color,System.Single)">
            <summary>
            Creates stroke pen to draw paths on a base of the current <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentGraphicsState"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTx(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates horizontal offset which should be applied to CurrentGraphicsState.TextMatrix after drawing a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single,System.Int32,System.Int32)">
            <summary>
            Applies offset to the CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single)">
            <summary>
            Applies offset to the CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTy(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates vertical offset which should be applied to CurrentGraphicsState.TextMatrix
            after drawing a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTyToTm(System.Single,System.Int32,System.Int32)">
            <summary>
            Applies vertical offset to the m_CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTyToTm(System.Single)">
            <summary>
            Applies vertical offset to the m_CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.UserToDeviceMatrix">
            <summary>
            Gets the user to device matrix passed to constructor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ShadingInitialMatrix">
            <summary>
            Gets the initial matrix for current content stream, used when rendering patterns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentGraphicsState">
            <summary>
            Gets the current graphics state.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentPath">
            <summary>
            Gets the current PDF path.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState">
            <summary>
            Defines graphics state during processing of PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.Transform">
            <summary>
            Current transformation matrix *without* <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_UserToDeviceMatrix"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.ClipPathCount">
            <summary>
            Count of <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path"/> objects added using with <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.SoftMaskObject">
            <summary>
            The current <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object created from soft mask definition specified
            by <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SoftMask"/> property.
            Note! The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object supports the <see cref="T:System.IDisposable"/>
            but its disposing managed during processing the content stream, so the owning 
            <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> does not support <see cref="T:System.IDisposable"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.ResetToDefault">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.AssignFrom(GrapeCity.Documents.Pdf.Graphics.GraphicsState)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path">
            <summary>
            Describes a PDF path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path._cx">
            <summary>
            X coordinate of the current point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path._cy">
            <summary>
            Y coordinate of the current point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.SubPaths">
            <summary>
            List of subpaths in path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.GetBounds(System.Numerics.Matrix3x2)">
            <summary>
            Returns the path's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.BeginSubPath(System.Single,System.Single)">
            <summary>
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            
            If the previous path construction operator in the current path was also [m],
            the new [m] overrides it; no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendLine(System.Single,System.Single)">
            <summary>
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bezier control points (see “Cubic Bezier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bezier control points
            (see “Cubic Bezier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bezier control points (see “Cubic Bezier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.CloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a rectangle as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath">
            <summary>
            Describes the PDF subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.X">
            <summary>
            X coordinate of starting point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Y">
            <summary>
            Y coordinate of starting point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Closed">
            <summary>
            Indicates whether the subpath is closed and no new segments can be added to it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Segments">
            <summary>
            Segments of subpath.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PathSegment">
            <summary>
            Base class for segments of PDF subpath: line, bezier.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment">
            <summary>
            Line in subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment.X">
            <summary>
            X coordinate of line's end.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment.Y">
            <summary>
            Y coordinate of line's end.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment">
            <summary>
            Bezier in subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X1">
            <summary>
            X coordinate of first Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y1">
            <summary>
            Y coordinate of first Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X2">
            <summary>
            X coordinate of second Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y2">
            <summary>
            Y coordinate of second Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X3">
            <summary>
            X coordinate of third Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y3">
            <summary>
            Y coordinate of third Bezier control point.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.OperatorInfo">
            <summary>
            Contains information about a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Name">
            <summary>
            The operator name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Index">
            <summary>
            The index of operator in a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.OperandCount">
            <summary>
            The count of operands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.OperatorInfo"/> structure.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Equals(GrapeCity.Documents.Pdf.Parser.OperatorInfo)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator">
            <summary>
            Process a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.Description">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException">
            <summary>
            The exception that is thrown when an error occurs while processing a PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfOperatorException">
            <summary>
            The exception that is thrown when a nested exception has occurred while processing a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfOperatorException.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfOperatorException.#ctor(GrapeCity.Documents.Pdf.Parser.OperatorInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfOperatorException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor">
            <summary>
            The log entry that is added when processing a PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException">
            <summary>
            The log entry that is added when an exception occurs while enumerating a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.Exception">
            <summary>
            The exception that occurred while enumerating a content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent">
            <summary>
            The log entry that is added when an object is invalid and cannot be processed by a PDF operation (rendering etc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented">
            <summary>
            Indicates that processing of this object is not implemented by a PDF operation (rendering etc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException">
            <summary>
            The log entry that is added when an exception occurs while processing a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.Exception">
            <summary>
            The exception occurs during processing the PDF operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,GrapeCity.Documents.Pdf.Parser.OperatorInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode">
            <summary>
            Defines the possible modes of error handing when processing a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.Ignore">
            <summary>
            Ignore an error if possible and continue processing a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.Stop">
            <summary>
            Stop processing a content stream on error, do not throw an exception.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.ThrowException">
            <summary>
            Throw an exception on error.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase">
            <summary>
            Base class for content stream processors.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.m_ResourceDictionary">
            <summary>
            The current resource dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.m_MarkedContentStack">
            <summary>
            The stack of marked content items started with BDC/EMC operators
            (<see cref="T:GrapeCity.Documents.Pdf.Layers.IOptionalContentIdentifier"/>).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            (see Section 4.2.1, “Coordinate Spaces”).
            Although the operands specify a matrix, they are written as six separate numbers, not as an array.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineCapStyle(System.Int32)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineJoinStyle(System.Int32)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRenderingIntent(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            "ri"
            (PDF 1.1) Set the color rendering intent in the graphics state
            (see “Rendering Intents” on page 260).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetFlatnessTolerance(System.Single)">
            <summary>
            "i"
            Set the flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s
            default flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetGraphicsStateParams(System.String)">
            <summary>
            "gs"
            (PDF 1.2) Set the specified parameters in the graphics state.
            dictName is the name of a graphics state parameter dictionary
            in the ExtGState subdictionary of the current resource dictionary (see the next section).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginSubPath(System.Single,System.Single)">
            <summary>
            "m"
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            If the previous path construction operator in the current path was also m,
            the new m overrides it; no vestige of the previous m operation remains in the path.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendLine(System.Single,System.Single)">
            <summary>
            "l"
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "c"
            Append a cubic Bézier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "v"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bézier control points
            (see “Cubic Bézier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "y"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "re"
            Append a rectangle to the current path as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpStrokePath">
            <summary>
            "S"
            Stroke the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseStrokePath">
            <summary>
            "s"
            Close and stroke the path. This operator has the same effect as the sequence h S.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillNonZeroWindingPath">
            <summary>
            "f"
            Fill the path, using the nonzero winding number rule to determine the region to fill
            (see “Nonzero Winding Number Rule” on page 232).
            Any subpaths that are open are implicitly closed before being filled.
            
            Also this method executes "F" command.
            Equivalent to "f"; included only for compatibility. Although PDF consumer applications
            must be able to accept this operator, PDF producer applications should use "f" instead.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillEvenOddPath">
            <summary>
            "f*"
            Fill the path, using the even-odd rule to determine the region to fill
            (see “Even-Odd Rule” on page 233).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillStrokeNonZeroWindingPath">
            <summary>
            "B"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillStrokeEvenOddPath">
            <summary>
            "B*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseFillStrokeNonZeroWindingPath">
            <summary>
            "b"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseFillStrokeEvenOddPath">
            <summary>
            "b*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpClosePath">
            <summary>
            "n"
            End the path object without filling or stroking it.
            This operator is a path-painting no-op, used primarily for the side effect of changing
            the current clipping path (see Section 4.4.3, “Clipping Path Operators”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetClippingPathNonZeroWinding">
            <summary>
            "W"
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetClippingPathEvenOdd">
            <summary>
            "W*"
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginText">
            <summary>
            "BT"
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndText">
            <summary>
            "ET"
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetCharacterSpacing(System.Single)">
            <summary>
            "Tc"
            Set the character spacing, Tc , to charSpace, which is a number expressed in unscaled text
            space units. Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="charSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetWordSpacing(System.Single)">
            <summary>
            "Tw"
            Set the word spacing, Tw , to wordSpace, which is a number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="wordSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextLeading(System.Single)">
            <summary>
            "Tl"
            Set the text leading, Tl , to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
            <param name="leading"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextFontAndSize(System.String,System.Single)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font subdictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
            <param name="fontName"></param>
            <param name="fontSize"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextRenderingMode(System.Int32)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
            <param name="renderingMode"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextRise(System.Single)">
            <summary>
            "Ts"
            Set the text rise, Trise, to rise, which is a number expressed in unscaled text space units. Initial value: 0.
            </summary>
            <param name="rise"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLine(System.Single,System.Single)">
            <summary>
            "Td"
            Move to the start of the next line, offset from the start of the current line by (tx , ty ).
            tx and ty are numbers expressed in unscaled text space units.
            More precisely, this operator performs the following assignments:
                       | 1  0  0 |
            Tm = Tlm = | 0  1  0 | * Tlm
                       | tx ty 1 |
            </summary>
            <param name="tx"></param>
            <param name="ty"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLineUpdateLeading(System.Single,System.Single)">
            <summary>
            "TD"
            Move to the start of the next line, offset from the start of the current line by (tx , ty ).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
            <param name="tx"></param>
            <param name="ty"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "Tm"
            Set the text matrix, Tm , and the text line matrix, Tlm:
              Tm = Tlm = m
            The matrix specified by the operands is not concatenated onto the current text matrix, but replaces it.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLine">
            <summary>
            "T*"
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "Tj"
            Show a text string.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText1(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "'"
            Move to the next line and show a text string. This operator has the same effect as the code:
              T*
              str Tj
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText2(System.Single,System.Single,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            """
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              aw Tw
              ac Tc
              str '
            </summary>
            <param name="aw"></param>
            <param name="ac"></param>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            "TJ"
            Show one or more text strings, allowing individual glyph positioning
            (see implementation note 58 in Appendix H).
            Each element of array can be a string or a number.
            If the element is a string, this operator shows the string.
            If it is a number, the operator adjusts the text position by that amount;
            that is, it translates the text matrix, Tm.
            The number is expressed in thousandths of a unit of text space
            (see Section 5.3.3, “Text Space Details,” and implementation note 59 in Appendix H).
            This amount is subtracted from the current horizontal or vertical coordinate,
            depending on the writing mode.
            In the default coordinate system, a positive adjustment has the effect of
            moving the next glyph painted either to the left or down by the given amount.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorSpaceStroking(System.String)">
            <summary>
            "CS"
            
            (PDF 1.1) Set the current color space to use for stroking operations.
            The operand name must be a name object.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorSpaceNonStroking(System.String)">
            <summary>
            "cs"
            
            (PDF 1.1) Same as CS but used for non-stroking operations.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor1Stroking">
            <summary>
            "SC"
            
            (PDF 1.1) Set the color to use for stroking operations in a device,
            CIE-based (other than ICCBased), or Indexed color space.
            The number of operands required and their interpretation depends
            on the current stroking color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor1NonStroking">
            <summary>
            "sc"
            
            (PDF 1.1) Same as SC but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor2Stroking">
            <summary>
            "SCN"
            
            Same as SC but also supports Pattern, Separation, DeviceN, andICCBased color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor2NonStroking">
            <summary>
            "scn"
            
            (PDF 1.1) Same as SCN but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorGrayStroking">
            <summary>
            "G"
            
            Set the stroking color space to DeviceGray
            (or the DefaultGray color space; see “Default Color Spaces” on page 257)
            and set the gray level to use for stroking operations.
            gray is a number between 0.0 (black) and 1.0 (white).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorGrayNonStroking">
            <summary>
            "g"
            
            Same as G but used for nonstroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRGBStroking">
            <summary>
            "RG"
            
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRGBNonStroking">
            <summary>
            "rg"
            
            Same as RG but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorCMYKStroking">
            <summary>
            "K"
            
            Set the stroking color space to DeviceCMYK (or the DefaultCMYK color space;
            see “Default Color Spaces” on page 257) and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (zero concentration) and 1.0 (maximum concentration).
            The behavior of this operator is affected by the overprint mode
            (see Section 4.5.6, “Overprint Control”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorCMYKNonStroking">
            <summary>
            "k"
            
            Same as K but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpType3SetWidth(System.Single,System.Single)">
            <summary>
            "d0"
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
            <param name="wx"></param>
            <param name="wy"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpType3SetWidthAndBoundingBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "d1"
            Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not color.
            llx and lly are the coordinates of the lower-left corner, and urx and ury the upper-right corner, of the glyph bounding box.
            </summary>
            <param name="wx"></param>
            <param name="wy"></param>
            <param name="llx"></param>
            <param name="lly"></param>
            <param name="urx"></param>
            <param name="ury"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndInlineImage(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            "EI"
            
            Ends inline image, defined using "BI" "ID" "EI" operators.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpDrawShading(System.String)">
            <summary>
            "sh"
            (PDF 1.3) Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            The current color in the graphics state is neither used nor altered.
            The effect is different from that of painting a path using a shading pattern as the current color.
            name is the name of a shading dictionary resource in the Shading subdictionary of
            the current resource dictionary(see Section 3.7.2, “Resource Dictionaries”).
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpDoXObject(System.String)">
            <summary>
            "Do"
            An external object (commonly called an XObject) is a graphics object
            whose contents are defined by a self-contained content stream,
            separate from the content stream in which it is used.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMarkedContentPoint(System.String)">
            <summary>
            "MP"
            Designate a marked-content point. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
            <param name="role"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMarkedContentPoint2(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            "DP"
            Designate a marked-content point with an associated property list. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
            <param name="role"></param>
            <param name="dict"></param>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginMarkedContent(System.String)">
            <summary>
            "BMC"
            Begin a marked-content sequence terminated by a balancing EMC operator. <paramref name="role"/> is a name object indicating the role or significance of the sequence.
            </summary>
            <param name="role"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginMarkedContent2(System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            "BDC"
            Begin a marked-content sequence with an associated property list, terminated by a balancing EMC operator.
            </summary>
            <param name="role"></param>
            <param name="dict"></param>
            <param name="name"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndMarkedContent">
            <summary>
            "EMC"
            End a marked-content sequence begun by a BMC or BDC operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginCompatibilitySection">
            <summary>
            "BX"
            Begin a compatibility section. Unrecognized operators (along with their operands) are ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndCompatibilitySection">
            <summary>
            "EX"
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning processed content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator">
            <summary>
            Defines interface to enumerate PDF content streams.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Reset">
            <summary>
            Moves to the start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Next">
            <summary>
            Moves to the next operator, returns false if EOF.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Operator">
            <summary>
            Gets a name of the current operator or null if EOF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Operands">
            <summary>
            Gets a list of operands for the current operator or null if EOF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the enumerated content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.ParseInlineImages">
            <summary>
            Gets a value indicating whether inline images are parsed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader">
            <summary>
            Defines parser of PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Read">
            <summary>
            Reads value from the current position it can be any valid PDF identifier: number, string, dictionary etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Next">
            <summary>
            Reads next operator from underlying PDF content.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.ParseInlineImages">
            <summary>
            Gets a value indicating whether inline images should be parsed, if false
            then <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operands"/> stack will be empty for EI operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operator">
            <summary>
            Gets the operator where this <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader"/> is positioned by the <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Next"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operands">
            <summary>
            Gets the operands for the current <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Ident">
            <summary>
            Custom identificator in PDF content stream, operator for example.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfNoDictValueException">
            <summary>
            Represents an exception that is thrown when a value with a specified key does not exist in a PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfNoDictValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfNoDictValueException"/> class.
            </summary>
            <param name="key">The key that caused the exception.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfNoDictValueException.Key">
            <summary>
            Gets the key that could not be found.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException">
            <summary>
            Represents an exception that is thrown when a value in a PDF dictionary has invalid or unexpected type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException"/> class.
            </summary>
            <param name="key">The dictionary key.</param>
            <param name="value">The value that caused the exception.</param>
            <param name="expectedType">The expected type.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException.Key">
            <summary>
            Gets the value key.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException.Value">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidDictValueTypeException.ExpectedType">
            <summary>
            Gets the expected type of value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException">
            <summary>
            Represents an exception that is thrown when a value in a PDF array has invalid or unexpected type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException.#ctor(System.Int32,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException"/> class.
            </summary>
            <param name="index">The value index.</param>
            <param name="value">The value that caused the exception.</param>
            <param name="expectedType">The expected type.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException.#ctor(System.Int32,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException"/> class.
            </summary>
            <param name="index">The value index.</param>
            <param name="value">The value that caused the exception.</param>
            <param name="expectedType">The expected type.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException.Index">
            <summary>
            Gets the value index.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException.Value">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfInvalidArrayValueTypeException.ExpectedType">
            <summary>
            Gets the expected type of value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.FdfParserException">
            <summary>
            Represents common exception occurs during parsing FDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.FdfParserException.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.FdfParserException"/> class.
            </summary>
            <param name="message"></param>
            <param name="streamPosition"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.FdfParserException.#ctor(System.String,System.Exception,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.FdfParserException"/> class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="streamPosition"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.FdfParser">
            <summary>
            Parses FDF stream into dictionary of PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.Objects">
            <summary>
            The dictionary of parsed PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.Version">
            <summary>
            The FDF version.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.CatalogObject">
            <summary>
            The FDF catalog object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.MarkedContentStack.CurrentLayer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.MarkedContentStackLayerItem"/> object representing the current PDF layer.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReader">
            <summary>
            Performs parsing of PDF document stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReader.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase">
            <summary>
            Base class for PDF document streams parsers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.m_DecryptStrings">
            <summary>
            Indicates whether strings should be decrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase._readObjID">
            <summary>
            The ID of the currently read PDF object, used in decryption.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadNumberOrRef">
            <summary>
            Reads PDF number or PDF reference (like "10 0 R"), assumes that stream positioned on first digit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadObjectHeader(GrapeCity.Documents.Pdf.PdfObjID@)">
            <summary>
            Reads the object's header "10 0 obj", assumes stream is positioned on header of object like "10 0 obj" or on whitespace
            before this header.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadPdfObject">
            <summary>
            Reads PDF object, assumes stream is positioned on header of object like "10 0 obj" or on whitespace
            before this header.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadIdentEx">
            <summary>
            Skips all white-space and comments, reads all not white-space characters into string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.Read">
            <summary>
            Reads value from the current position it can be any valid PDF identifier: number, string, dictionary etc.
            </summary>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2">
            <summary>
            Provides uniform and convenient way to convert PDF values and PDF objects
            to <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>.
            </summary>
            <typeparam name="TBase">The class which should be created from PDF value.</typeparam>
            <typeparam name="TValue">The type of PDF value required for this parser.</typeparam>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2.TryParse(GrapeCity.Documents.Pdf.Parser.PdfParser,`1,`0@)">
            <summary>
            Should be overridden in derived class.
            Creates instance of  <typeparamref name="TBase"/> from <paramref name="value"/>.
            If <typeparamref name="TValue"/> is an object then <paramref name="value"/> can be:
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>,
            <see cref="T:System.Boolean"/>,
            <see cref="T:System.Int32"/>,
            <see cref="T:System.Single"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2.Parse``1(GrapeCity.Documents.Pdf.Parser.PdfParser,System.Object)">
            <summary>
            Creates instance of  <typeparamref name="TBase"/> from <paramref name="value"/>.
            <paramref name="value"/> can be:
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>,
            <see cref="T:System.Boolean"/>,
            <see cref="T:System.Int32"/>,
            <see cref="T:System.Single"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> or
            descendant of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If <paramref name="value"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> then reference resolved to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If <paramref name="value"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>
            then method checks was object already parsed or not and returns already parsed object if possible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2.Parse``1(GrapeCity.Documents.Pdf.Parser.PdfParser,System.Object,GrapeCity.Documents.Pdf.Parser.PdfParser.SetReferenceDelegate)">
            <summary>
            Creates instance of  <typeparamref name="TBase"/> from <paramref name="value"/>.
            <paramref name="value"/> can be:
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>,
            <see cref="T:System.Boolean"/>,
            <see cref="T:System.Int32"/>,
            <see cref="T:System.Single"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> or
            descendant of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If <paramref name="value"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> then reference resolved to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If <paramref name="value"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>
            then method checks was object already parsed or not and returns already parsed object if possible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParserException">
            <summary>
            Represents common exception occurs during parsing PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParserException.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParserException"/> class.
            </summary>
            <param name="message"></param>
            <param name="streamPosition"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParserException.#ctor(System.String,System.Exception,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParserException"/> class.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="streamPosition"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfParserException.StreamPosition">
            <summary>
            Gets the position in the stream where exception occurs.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser">
            <summary>
            Parses the PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser._doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.Objects">
            <summary>
            The cross-reference table created during parsing Cross-Reference table/stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStreams">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream"/> objects, generated during structure parsing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.UnencryptedObjects">
            <summary>
            Contains IDs of objects which do not require a decryption.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadSignatureObject">
            <summary>
            Indicating whether the Signature object is currently read.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadRoot">
            <summary>
            Indicates whether the document root object is currently read.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.MainXRefPos">
            <summary>
            Position of main cross-reference table or stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.MainXRefType">
            <summary>
            Type of main cross-reference (Table or Stream).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ParsingFinishedCallbacks">
            <summary>
            The list of callback methods called when document's parsing is finished.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ResolvingReferences">
            <summary>
            The list of currently resolving references, used to handle circular references.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.SkipObjectHeader">
            <summary>
            Skips the object's header, assumes stream is positioned on header of object like "10 0 obj" or on whitespace
            before this header.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetXrefPosition">
            <summary>
            Returns a position of the main Cross-Reference Table or Cross-Reference Stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadCrossReferenceTable(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,System.Int32@)">
            <summary>
            Reads Cross-Reference table, assumes stream is positioned after "xref" token.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadCrossReferenceStream(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,System.Boolean,System.Int32@)">
            <summary>
            Reads Cross-Reference stream object, assumes stream is positioned on object header like "10 0 obj".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ResetEntryWasRead(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Resets <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.WasRead"/> to false.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadPdfObject(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> with specified id.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.DeepParseCrossReferenceStream(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,GrapeCity.Documents.Pdf.Spec.PdfObject)">
            <summary>
            Reads Cross-Reference stream object, assumes stream is positioned on object header like "10 0 obj".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadStructure(GrapeCity.Documents.Pdf.Security.PdfPassword,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@,System.Boolean@,System.String@)">
            <summary>
            Reads list of PDF objects, can throw an exception if stream contains invalid / unknown data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetObjectStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.PdfMemoryStream"/> which can be used to read stream's data of specified <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>.
            NOTE! Image filters: CCITTFaxDecode, JBIG2Decode, DCTDecode, JPXDecode are NOT applied,
            if these filters used somewhere *within* Filter array (not the last in this array) then
            NotImplemented exception occurs.
            NOTE! Returned stream should be disposed after usage.
            NOTE! This method affects <see cref="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position"/> of this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.SetObjectParsing(GrapeCity.Documents.Pdf.PdfObjID,System.Boolean)">
            <summary>
            Sets the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.Parsing"/> to specified value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetObjectParsing(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Returns the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.Parsing"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.SetParsedObject(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Sets the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ParsedObject"/> to the specified value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetParsedObject(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Gets the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ParsedObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.RegisterObjectReference(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Parser.PdfParser.SetReferenceDelegate)">
            <summary>
            Register a callback method which will be called when parsing of object with specified ID is finished.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfParser.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XRefType">
            <summary>
            The type of cross-reference entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XRefType.Table">
            <summary>
            Cross-reference table.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XRefType.Stream">
            <summary>
            Cross-reference stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.CompressedEntryInfo.IgnoreFreeItem">
            <summary>
            Indicates whether the entry was added during parsing hybrid-reference file,
            and corresponding <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefCompressedEntry"/> should be added even if its ID marked as free.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.IndexEntry">
            <summary>
            Defines single entry of Index array in Cross-Reference stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream">
            <summary>
            Defines the parsed PDF "Object stream" object.
            See PDF1.7, 3.4.6 Object Streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.PdfObject">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> used to create instance of this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Entries">
            <summary>
            The entries for compressed objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Reader">
            <summary>
            The reader used to parse content.
            NOTE! Stream used by the Reader should be disposed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Entry">
            <summary>
            Defines entry of "compressed object" within "Object Stream".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Entry.ObjID">
            <summary>
            The ID of compressed object, generation always 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Entry.Offset">
            <summary>
            Offset from the beginning of stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStreamList">
            <summary>
            Defines list of <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry">
            <summary>
            Base class for classes defining singe entry of Cross-Reference table or Cross-Reference stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ObjID">
            <summary>
            The object's id.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.WasRead">
            <summary>
            Indicates whether a PDF object pointed by this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry"/> was read from PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ParsedObject">
            <summary>
            The parsed <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> object
            which was created from PDF object identified by this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.References">
            <summary>
            Callback methods called when reference is resolved.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.Parsing">
            <summary>
            Indicates whether object's parsing is started, 
            used during parsing to detect circular references between objects.
            See:
            <see cref="M:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2.Parse``1(GrapeCity.Documents.Pdf.Parser.PdfParser,System.Object)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Parser.PdfObjParser`2.Parse``1(GrapeCity.Documents.Pdf.Parser.PdfParser,System.Object,GrapeCity.Documents.Pdf.Parser.PdfParser.SetReferenceDelegate)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ReadPdfObject(GrapeCity.Documents.Pdf.Parser.PdfParser)">
            <summary>
            Reads the PDF object identified by this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.ReadPdfObjectSilent(GrapeCity.Documents.Pdf.Parser.PdfParser)">
            <summary>
            Reads the PDF object identified by this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry"/> but
            DOES NOT CHANGE <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefEntry.WasRead"/> flag.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefNormalEntry">
            <summary>
            Defines "normal" entry of Cross-Reference table or Cross-Reference stream, 
            identifying an object in main PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefNormalEntry.Offset">
            <summary>
            The offset of the object in main PDF stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefCompressedEntry">
            <summary>
            Defines "compressed object" entry in Cross-Reference stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefCompressedEntry.ObjectStream">
            <summary>
            The PDF "object stream" object referenced by this entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefCompressedEntry.ObjectIndex">
            <summary>
            The index of compressed object in <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStream.Entries"/> list.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefTable">
            <summary>
            Defines cross-reference table build during parsing Cross-Reference table or Cross-Reference stream.
            NOTE! In current implementation table contains only ACTUAL references with latest generation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.XrefTable.Fix(System.Int32)">
            <summary>
            See DOC-1555 for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase">
            <summary>
            Base class for PDF streams readers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Stream">
            <summary>
            The underlying <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_LastChar">
            <summary>
            The last byte read from the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Stream"/> or -1 if EOF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_Cache">
            <summary>
            The cached instance of <see cref="T:System.Text.StringBuilder"/> used in read operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_CacheBytes">
            <summary>
            The cached instance of <see cref="T:System.Collections.Generic.List`1"/> used in read operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_ReadDictKey">
            <summary>
            The name of PDF dict entry currently read.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadDict">
            <summary>
            Reads PDF "dictionary object", assumes that stream positioned on SECOND '&lt;' char.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ParseInt(System.String)">
            <summary>
            NOTE! This method assumes that s contains VALID number, but number can be too big
            for PdfInt, warning added to the <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> in this case.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipWhiteSpaceChars">
            <summary>
            Skips all white-space bytes, returns <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_LastChar"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipWhiteSpaceCharsNoEol">
            <summary>
            Skips all white-space bytes, but stops on 13 or 10.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipToEofDict">
            <summary>
            Skips all bytes till end of PDF dictionary ">>".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipToEol">
            <summary>
            Skips all bytes till CR or LF character.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipEol">
            <summary>
            Skips all CR or LF characters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipComment">
            <summary>
            Skips PDF comment, including EOL and white-spaces after comment,
            assumes that stream positioned on first comment char '%'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadIdent">
            <summary>
            Reads all bytes till whitespace or delimiter and combines them into string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadIdentTillPercent">
            <summary>
            Reads all bytes till whitespace or delimiter or PDF percent char '%' and combines them into string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadName">
            <summary>
            Reads PDF "name object", assumes stream is positioned on '/'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadString">
            <summary>
            Reads PDF "string object", assumes stream is positioned on '('.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadHexString">
            <summary>
            Reads PDF "hex string object", assumes stream is positioned AFTER '&lt;'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadNumber(System.Boolean)">
            <summary>
            Reads PDF number int or float, assumes stream is positioned on first char of number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadArray">
            <summary>
            Reads PDF "array object", assumes stream is positioned on '['.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Seek(System.Int64)">
            <summary>
            Sets position in underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets position in underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Read">
            <summary>
            Reads value from the current position it can be any valid PDF identifier: number, string, dictionary etc,
            assumes stream is positioned on white-space or first char of object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position">
            <summary>
            Gets position in underlying stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfWrapperUtils.CloneNestedObjectForMerge(System.Object,GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Clones a nested object of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>.
            The <paramref name="obj"/> can be:
            -) Any PDF value: PdfRef, PdfArry, PdfName, PdfInt etc etc
            -) IPdfIndirectSerializableObject
            -) PdfObject if owning container (<see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>)
               was created during documents merge operation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDateTime">
            <summary>
            Represents a PDF DateTime type.
            </summary>
            <remarks>
            <para>
            The PDF Specification does not define a special type for DateTime values,
            such values are stored as strings in a special format, similar to (D:YYYYMMDDHHmmSSOHH'mm'),
            see the spec for details (PDF 1.7 chapter 3.8.3).
            </para>
            <para>
            But there are many PDF documents in which DateTime strings are specified
            in some custom format, for example using a regional format.
            GcPdf uses this struct when processing such values.
            Where possible, the value is converted to <see cref="T:System.DateTimeOffset"/>,
            otherwise it preserves the original string value.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            using a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            using a string. 
            The passed string is converted to <see cref="T:System.DateTimeOffset"/> if possible.
            </summary>
            <param name="value">The string representing a date time value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.ToString(System.String)">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> to string,
            using a specified format if the current struct holds a DateTime value.
            </summary>
            <param name="dateTimeFormat">The date time format.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.Equals(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value to compare to.</param>
            <returns>True if values are equal, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.IsString">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            contains a string value which cannot be converted to <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeValue">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value representing local time.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is represented by an unparsed string.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeOffset">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset"/> value defined by this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is represented by an unparsed string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Implicit(System.DateTime)~GrapeCity.Documents.Pdf.PdfDateTime">
            <summary>
            Converts a <see cref="T:System.DateTime"/> value to <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Equality(GrapeCity.Documents.Pdf.PdfDateTime,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Equality operator.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Inequality(GrapeCity.Documents.Pdf.PdfDateTime,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Unequality operator.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeToPdfString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> value to a string in PDF format
            as described in PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
            <returns>Returns string with formatted datetime.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeToPdfString(System.DateTimeOffset)">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> value to a string in PDF format
            as described in PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
            <returns>Returns string with formatted datetime.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.TryParse(System.String,System.DateTimeOffset@)">
            <summary>
            Tries to convert a string to <see cref="T:System.DateTimeOffset"/>.
            See PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="s">The string in the format D:YYYYMMDDHHmmSSOHH'mm'.</param>
            <param name="value">OUT: The parsed <see cref="T:System.DateTimeOffset"/> value.</param>
            <returns>True if convertion succesed, false otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfEnum`1">
            <summary>
            Represents a PDF enumeration type.
            </summary>
            <remarks>
            <para>
            The PDF Specification defines many properties with values represented by a limited set of predefined values.
            Such values are stored as PDF name objects, which is very similar to enumerations in C#.
            </para>
            <para>
            But there are many PDF documents in which some of such properties have arbitrary custom values
            that are not defined in the PDF specification.
            </para>
            <para>
            GcPdf uses this struct when processing such values.
            Where possible, the value is converted to the underlying enum type <typeparamref name="TEnum"/>,
            otherwise the original string value is preserved.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            using a <typeparamref name="TEnum"/> value.
            </summary>
            <param name="value">The <typeparamref name="TEnum"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            using a string. 
            The passed string is converted to <typeparamref name="TEnum"/> if possible.
            </summary>
            <param name="value">The string representing a <typeparamref name="TEnum"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value to compare to.</param>
            <returns>True if the values are equal, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(`0)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is equal to TEnum value.
            </summary>
            <param name="other">The TEnum value to compare to.</param>
            <returns>True if the values are equal, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.GetEnumValue(`0)">
            <summary>
            Returns the <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue"/> if <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString"/> is false, <paramref name="defValue"/> otherwise.
            </summary>
            <param name="defValue">The default value if this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> has no enum value.</param>
            <returns><see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue"/> if <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString"/> is false, <paramref name="defValue"/> otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            contains a string value which cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue">
            <summary>
            Gets the <typeparamref name="TEnum"/> value defined by this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is represented by an unparsed string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{`0}},System.Nullable{`0})">
            <summary>
            Returns true if nullable <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> equals to nullable <typeparamref name="TEnum"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Implicit(`0)~GrapeCity.Documents.Pdf.PdfEnum{`0}">
            <summary>
            Converts a <typeparamref name="TEnum"/> value to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Implicit(GrapeCity.Documents.Pdf.PdfEnum{`0})~`0">
            <summary>
            Converts a <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value to <typeparamref name="TEnum"/>.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Equality(GrapeCity.Documents.Pdf.PdfEnum{`0},GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Inequality(GrapeCity.Documents.Pdf.PdfEnum{`0},GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfLang">
            <summary>
            Represents a PDF language identifier.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> class.
            </summary>
            <param name="value">The string containing language identifier.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.Equals(GrapeCity.Documents.Pdf.PdfLang)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> value to compare to.</param>
            <returns>True if values are equal, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfLang.StrValue">
            <summary>
            Gets the <see cref="T:System.String"/> representing this language identifier.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.op_Implicit(System.String)~GrapeCity.Documents.Pdf.PdfLang">
            <summary>
            Converts a <see cref="T:System.String"/> value to <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.op_Implicit(GrapeCity.Documents.Pdf.PdfLang)~System.String">
            <summary>
            Converts <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> value to <see cref="T:System.String"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.op_Equality(GrapeCity.Documents.Pdf.PdfLang,GrapeCity.Documents.Pdf.PdfLang)">
            <summary>
            Equality operator.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfLang.op_Inequality(GrapeCity.Documents.Pdf.PdfLang,GrapeCity.Documents.Pdf.PdfLang)">
            <summary>
            Unequality operator.
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNameTree`1">
            <summary>
            Contains utilities to work with PDF name trees.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfNameTree`1.ReadNameTree(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.PdfNameTree{`0}.AddValueDelegate)">
            <summary>
            Parses name tree represented by PdfDict.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNameTree`1.AddValueDelegate">
            <summary>
            Callback method called to parse value associated with the name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNumberTree`1">
            <summary>
            Contains utilities to work with PDF number trees.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfNumberTree`1.ReadNumberTree(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.PdfNumberTree{`0}.AddValueDelegate)">
            <summary>
            Parses number tree represented by PdfDict.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNumberTree`1.AddValueDelegate">
            <summary>
            Callback method called to parse value associated with the number.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.qq">
            <summary>
              Looks up a localized string similar to aa.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RawImageFormat">
            <summary>
            Specifies a format of <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RawImageFormat.Jpeg">
            <summary>
            JPEG image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RawImageFormat.Jpeg2000">
            <summary>
            JPEG2000 image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RawImage">
            <summary>
            Represents an image natively supported by the PDF format.
            <para>
            Raw images are inserted into PDF as is, without any processing.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromFile(System.String,GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a disk file,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="fileName">The image file name.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromStream(System.IO.Stream,GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a stream,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="stream">The stream containing image data.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromBytes(System.Byte[],GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a byte array,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="data">The byte array containing image data.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Data">
            <summary>
            Gets the image data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Format">
            <summary>
            Gets the format of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.VerticalResolution">
            <summary>
            Gets the vertical resolution of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options for the Adobe Acrobat-like recognition algorithm.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options used by the advanced algorithm
            when building text maps.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the horizontal distance between two text primitives
            correspond to a text line. The default is 0.9.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefClustering">
            <summary>
            Gets or sets a coefficient used to determine if the distance between two text primitives
            corresponds to a text cluster. The default is 0.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefInterlineChange">
            <summary>
            Gets or sets a coefficient used to split text clusters when distance between text lines changes.
            The default is 0.2.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Cluster">
            <summary>
            Represents a block of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>,  it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Cluster"/> and <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.GetBoundsR">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement"/> in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.GetBounds">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement"/> on a page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.Clone(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.CloneContext)">
            <summary>
            Returns a clone of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ImageRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.LayerRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line">
            <summary>
            Represents a line of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>, it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetFontHeight(System.Single)">
            <summary>
            Returns the line font height, this value can be used to determine whether lines have equal
            font height.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetBoundsR">
            <summary>
            Returns line's bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGBoundsR">
            <summary>
            Returns line's glyph bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetArea">
            <summary>
            Returns the line's area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetPoints">
            <summary>
            Returns the array of points defining the line's area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGArea">
            <summary>
            Returns the line's "glyph" area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGPoints">
            <summary>
            Returns the array of points defining the line's "glyph" area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.RecognizerCallback">
            <summary>
            The callback method called during recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.TokenizationBuildRelations(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Builds properties:
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.LeftTokens"/>,
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.RightTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Linearization(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Combines <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects into <see cref="T:GrapeCity.Documents.Text.TextLine"/> objects using following rules:
            -) The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects should have similar FontSizeY:
               tta.Attrs.FontSizeY - ttb.Attrs.FontSizeY &lt;= CoefPrecision * Min(tta.Attrs.FontSizeY, ttb.Attrs.FontSizeY)
            -) The horizontal distance between tokens should be less than CoefHorzLinearization * Min(tta.Attrs.FontSizeX, ttb.Attrs.FontSizeX)
            -) Tokens should overlap vertically more than CoefVertLinearization.
               Note! Token added to the line only if it intersects on more then CoefVertLinearization
               with ALL tokens already exists in the line
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.LinearizationMergeLinesByTokenRelations">
            <summary>
            Merge lines connected via <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.LeftTokens"/> or <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.RightTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.LinearizationDropCap(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Merges drop-cap lines.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Clustering(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Combines text lines into text clusters using following rules:
            -) Lines have same font size
            -) Lines intersect horizontally 
            -) The vertical distance between lines less than CoefClustering
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.ClusteringInterlineChangeDetection(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Split clusters if distance between lines changes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.PageReadingOrder(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Builds <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Elements"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.ClusteringBuildParagraphs(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Splits text clusters into paragraphs if possible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Recognize(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.RecognizerCallback)">
            <summary>
            Performs the recognition.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage">
            <summary>
            Represents a stage of recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Title">
            <summary>
            The stage title, a short description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Description">
            <summary>
            The stage description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Index">
            <summary>
            The ordinal index of the stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokensStage">
            <summary>
            Information about text tokens is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.LinesStage">
            <summary>
            Information about text lines is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ClustersStage">
            <summary>
            Information about text clusters is updated during this stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ElementsStage">
            <summary>
            Information about page elements is updated during this stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRefFlags">
            <summary>
            Defines possible values for <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRefFlags.DropCap">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef"/> is a drop-cap.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> with additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions">
            <summary>
            <para>For internal use.</para>
            Base class implementing the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.AssignFrom(GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions)">
            <summary>
            Copies properties from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.IncludeInvisibleText">
            <summary>
            Gets or sets a value indicating whether to process text that was rendered
            using the invisible text rendering mode (text is neither filled nor stroked).
            <para>The default is true.</para>
            </summary>
            <remarks>See PDF Spec 2.0, Table 104, Mode 3.</remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether two values are similar.
            <para>The default is 0.25.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine whether the distance between two text primitives
            corresponds to a text token.
            <para>The default is 0.08.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefDuplicateTokens">
            <summary>
            Gets or sets a coefficient used to determine whether two text tokens overlap.
            <para>The default is 0.85.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefHorzOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay horizontally.
            <para>The default is 0.10.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefVertOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay vertically.
            <para>The default is 0.12.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.BuildImages">
            <summary>
            For internal use.
            Indicates whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.BuildPaths">
            <summary>
            For internal use.
            Indicates whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Conflicts.ConflictOverlayTokens">
            <summary>
            Tokens are overlay.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback">
            <summary>
            Represents the method that called during building a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions">
            <summary>
            Defines the options used to build a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.IncludeInvisibleText">
            <summary>
            Gets or sets a value indicating whether to process a text rendered when text rendering mode is "Invisible".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether or not two values are similar.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine if the distance between two text primitives
            corresponds to text token.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens">
            <summary>
            Gets or sets a coefficient used to determine whether text tokens are overlapped.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefHorzOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay horizontally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefVertOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay vertically.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildImages">
            <summary>
            Gets or sets a value indicating whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildPaths">
            <summary>
            Gets or sets a value indicating whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap">
            <summary>
            Represents the low level map of PDF objects created from PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Stages">
            <summary>
            The list of stages performed during building process.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefPrecision">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefPrecision"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefTokenization">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefTokenization"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefBuildImages">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildImages"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefBuildPaths">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildPaths"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefDuplicateTokens">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefHorzOverlay">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefHorzOverlay"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefVertOverlay">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefVertOverlay"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefIncludeInvisibleText">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.IncludeInvisibleText"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_TextMapHeightIncreaseRatio">
            <summary>
            The height of text lines in text map increased by this value
            to top and to bottom.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Layers">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.RemoveDuplicateTokens(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Removes overlapped tokens with same font size, it handles situation when
            same text rendered several times at same position with minor offset to
            emulate the bold font.
            Tokens are overlapped if they intersect and the intersection area larger than 
            <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Tokenization(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Merge text tokens if following rules are valid:
            -) Tokens have same formatting
            -) Horizontal distance between tokens less than CoefTokenization:
               HorzDistance &lt; CoefTokenization * Min(tta.Attrs.FontSizeX, ttb.Attrs.FontSizeX)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.TokenizationDetectOverlays(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Calculates <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Cut(System.Drawing.RectangleF)">
            <summary>
            Returns a fragment of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>,
            <paramref name="bounds"/> should be specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Clone">
            <summary>
            Create a clone of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/> from list of PDF operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/> from PDF page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Builder.ShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Called by text operators other than "TJ".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Builder.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Called by "TJ" operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ImageFlags">
            <summary>
            Defines possible values of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ImageFlags.IntersectsWithText">
            <summary>
            Indicates whether an image intersects with text.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Image">
            <summary>
            Represents an image in content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Owner">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.PdfImage">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.IPdfImageEx"/> object producing this object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Bounds">
            <summary>
            The position of the image on its page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.BoundsR">
            <summary>
            The position of the image in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Flags">
            <summary>
            The image flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.OperatorIndex">
            <summary>
            The index of PDF operator generating this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer">
            <summary>
            Represents a group of PDF objects with same rotation angle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle">
            <summary>
            The rotation angle in radians.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Sin">
            <summary>
            The Sin of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Cos">
            <summary>
            The Cos of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Tokens">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetPoint(System.Single,System.Single)">
            <summary>
            Converts a point in "recognition" coordinate space to a point
            in page coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in "recognition" coordinate space to a <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>
            in page coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetTextLength">
            <summary>
            Returns length of text in this layer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Cut(System.Drawing.RectangleF)">
            <summary>
            Returns a fragment of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/>,
            <paramref name="bounds"/> should be specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Clone">
            <summary>
            Creates a copy of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath">
            <summary>
            Represents a PDF path in content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.Path">
            <summary>
            The PDF path object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.Matrix">
            <summary>
            The transformation matrix when <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath"/> was used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.OperatorName">
            <summary>
            The name of PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.OperatorIndex">
            <summary>
            The index of PDF operator in content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs">
            <summary>
            Represents an attributes of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs.Equals(GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs,System.Single)">
            <summary>
            Returns true if this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs"/> equal to <paramref name="other"/>.
            The <paramref name="coefPrecision"/> used to compare the font size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem">
            <summary>
            The item of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>, represents a separate character.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.DimensionR">
            <summary>
            The width for the horizontal text token and height for vertical
            in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.GBoundsR">
            <summary>
            The glyph bounds in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.CharInfo">
            <summary>
            The parameters of character from PDF operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken">
            <summary>
            Represents the text token, it is a list of characters with same formatting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Layer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> containing this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OperatorIndex">
            <summary>
            The index of PDF operator generating this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Attrs">
            <summary>
            The text attributes used by this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.PositionRY">
            <summary>
            The Y coordinate of baseline in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.BoundsR">
            <summary>
            The bounds in "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GBoundsR">
            <summary>
            The glyph bounds, calculated on the base of children <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.GBoundsR"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex">
            <summary>
            The overlay index, tokens can be combined in lines and clusters if they have same <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Matrix">
            <summary>
            The active matrix when token is rendered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetTextMapBoundsR">
            <summary>
            Returns the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GBoundsR"/> rectangle increased
            by <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_TextMapHeightIncreaseRatio"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBaseLineStartPoint">
            <summary>
            Returns the position of token base line relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts rectangle in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBounds">
            <summary>
            Returns the bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetGBounds">
            <summary>
            Returns the "glyph" bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetPoints(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Used for visualization purposes, returns coordinates of points at the middle of
            left, top, right and bottom edges.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetGPoints(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Used for visualization purposes, returns coordinates of points at the middle of
            left, top, right and bottom edges.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetItemGBounds(System.Int32)">
            <summary>
            Returns the "glyph" bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem"/> with specified index relative
            to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.GetMinDistanceBetweenRows(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.ElementLink},GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options)">
            <summary>
            Calculates a minimal possible distance between table's rows.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.GetMinDistanceBetweenColumns(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.ElementLink},GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options)">
            <summary>
            Calculates a minimal possible distance between table's columns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.MinimumColWidth">
            <summary>
            Gets or sets the minimum column width.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.MinimumRowHeight">
            <summary>
            Gets or sets the minimum row height.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.GetMinimumDistanceBetweenRows">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between rows.
            The function parameter is the collection of tokens' heights.
            <para>
            The default implementation returns the statistical mode, unless its value is 0 or NaN
            in which case the average is returned.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.GetMinimumDistanceBetweenCols">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between columns.
            The function parameter is the collection of characters' widths.
            <para>
            The default implementation returns the average value multiplied by 2.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LayerRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line">
            <summary>
            Represents a line of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>, it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetBoundsR">
            <summary>
            Returns line's bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGBoundsR">
            <summary>
            Returns line's glyph bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetArea">
            <summary>
            Returns the line's area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetPoints">
            <summary>
            Returns the array of points defining the line's area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGArea">
            <summary>
            Returns the line's "glyph" area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGPoints">
            <summary>
            Returns the array of points defining the line's "glyph" area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback">
            <summary>
            The callback method called during recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.GetLayers(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback)">
            <summary>
            Builds list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LayerRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.Recognize(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback)">
            <summary>
            Performs the recognition.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage">
            <summary>
            Represents a stage of recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Title">
            <summary>
            The stage title, a short description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Description">
            <summary>
            The stage description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Index">
            <summary>
            The ordinal index of the stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LinesStage">
            <summary>
            Information about text lines is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRefFlags">
            <summary>
            Defines possible values for <see cref="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRefFlags.DropCap">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef"/> is a drop-cap.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> with additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table">
            <summary>
            Represents a recognized table.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableVector">
            <summary>
            The abstract base class for rows and columns of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableVector.Size">
            <summary>
            The vector's size, height for row, width for column.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableRow">
            <summary>
            Represents a row of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableCol">
            <summary>
            Represents a column of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableCell">
            <summary>
            Represents a cell in a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable">
            <summary>
            Represents a recognized table.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Rows">
            <summary>
            Gets the list of table rows.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Cols">
            <summary>
            Gets the list of table columns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Cells">
            <summary>
            Gets the list of table cells.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITable.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the cell at a specified position.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell"/> at the specified position.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITable.GetBounds">
            <summary>
            Returns the bounds of the table on the page.
            </summary>
            <returns>The table bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector">
            <summary>
            The base interface for rows and columns of an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector.Length">
            <summary>
            Gets the vector length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector.GetBounds">
            <summary>
            Returns the vector bounds on a page.
            </summary>
            <returns>The vector bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableRow">
            <summary>
            Represents a row in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCol">
            <summary>
            Represents a column in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell">
            <summary>
            Represents a cell in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Row">
            <summary>
            Gets the 0-based index of the table row containing the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Col">
            <summary>
            Gets the 0-based index of the table column containing the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.SpanRows">
            <summary>
            Gets the number of rows spanned by the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.SpanCols">
            <summary>
            Gets the number of columns spanned by the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Text">
            <summary>
            Gets the cell text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.GetBounds">
            <summary>
            Returns the bounds of the cell on the page.
            </summary>
            <returns>The cell bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm">
            <summary>
            Defines possible algorithms that can be used to recognize
            the logical structure of a PDF when building text maps.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm.Advanced">
            <summary>
            Advanced algorithm that employs various heuristics and strategies
            to try to correctly recognize the logical document structure
            when building text maps.
            <para>
            Please note that because the details of this algorithm may change from version
            to version, the text maps for a specific PDF may also change when GcPdf is updated.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm.AcrobatLike">
            <summary>
            Algorithm that primarily relies on the physical structure of a PDF when building text maps.
            Results yielded by this algorithm are consistent with how
            Acrobat Reader handles text when searching, selecting etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.RecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Base abstract class for classes that represent options used
            by a recognition algorithm when building text maps.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options for the recognition algorithm used on PDF logical structure,
            see PDF specification for more details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether two values are similar.
            <para>The default is 0.25.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine whether the distance between two text primitives
            corresponds to a text token.
            <para>The default is 0.08.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase">
            <summary>
            Base abstract class for classes that represent a portion
            of document content associated with a PDF structure tag (element).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.Element">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> object containing this item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.LogicalStructure">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object owning this item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.ContentItemLink">
            <summary>
            Gets the associated <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this item is located.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem">
            <summary>
            The base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.McidContentItem"/> and <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.McrContentItem"/> classes.
            Represents a content item associated with a portion of a content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetImages">
            <summary>
            Gets the list of images associated with the current content item.
            </summary>
            <returns>The list of images.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetParagraph">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> object representing the paragraph
            of text associated with the current content item, or null if no paragraph
            is associated with current item.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> representing the paragraph, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetText">
            <summary>
            Returns the text of the paragraph associated with the current content item
            (as returned by <see cref="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetParagraph"/>), or an empty string if no paragraph
            is associated with the current item.
            </summary>
            <returns>The text of the paragraph, or null.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.McidContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.McrContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem.PdfObject">
            <summary>
            Gets the PDF object associated with this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element">
            <summary>
            Represents a parsed PDF tag (structure element) in the document's logical structure.
            <para>
            An instance of this class is created from a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>,
            and holds a reference to that object in its <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.StructElement"/> property.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Type">
            <summary>
            Gets the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type"/> if it is not null.
            Gets an empty string if <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type"/> is null.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Parent">
            <summary>
            Gets the parent of the current element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.LogicalStructure">
            <summary>
            Gets the document logical structure to which this element belongs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.StructElement">
            <summary>
            Gets the structure element (PDF tag) that was used to create this element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasChildren">
            <summary>
            Gets a value indicating whether the current element
            has any children (the <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children"/> list is not empty).
            <para>
            Note that even if the current element has no children, accessing <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children"/>
            will initialize it, so using this property is recommended
            when checking whether an element has any children.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children">
            <summary>
            Gets the list of current element's child elements.
            <para>
            Note that even if the current element has no children,
            accessing this property initializes the list.
            To simply check whether the element has any children,
            use <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasChildren"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasContentItems">
            <summary>
            Gets a value indicating whether the current element has any content items
            associated with it (the <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems"/> list is not empty).
            <para>
            Note that even if there are no associated content items, accessing <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems"/>
            will initialize it, so using this property is recommended
            when checking whether an element has any associated content items.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems">
            <summary>
            Gets the list of content items associated with the current element.
            <para>
            Note that even if the current element has no associated content items,
            accessing this property initializes the list.
            To simply check whether the element has any associated content items,
            use <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasContentItems"/>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.FindContentItem(System.Func{GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase,System.Boolean},System.Boolean)">
            <summary>
            Iterates over content items that belong to this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> or its children,
            and returns a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem"/> that matches a criteria specified via a callback.
            </summary>
            <param name="callback">The callback method used to test the content items.</param>
            <param name="recursive">Indicates whether to iterate over content items of child elements.</param>
            <returns>The first content item for which the <paramref name="callback"/> returned true,
            or null if no such item exists.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.FindChild(System.Func{GrapeCity.Documents.Pdf.Recognition.Structure.Element,System.Boolean},System.Boolean)">
            <summary>
            Iterates over child elements of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> or its children,
            and returns an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> that matches a criteria specified via a callback.
            </summary>
            <param name="callback">The callback method used to test the elements.</param>
            <param name="recursive">Indicates whether to iterate over child elements' children.</param>
            <returns>The first element for which the <paramref name="callback"/> returned true,
            or null if no such element exists.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetImages">
            <summary>
            Returns the list of <see cref="T:GrapeCity.Documents.Pdf.PdfImageInfo"/> objects 
            associated with the current element.
            </summary>
            <returns>The list of images associated with this element.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetParagraphs">
            <summary>
            Returns the list of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> objects representing the content
            associated with the current element.
            </summary>
            <returns>The list of paragraphs associated with this element.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetText">
            <summary>
            Returns the text associated with this element.
            This method calls <see cref="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetParagraphs"/> and returns an empty string
            if that method returns null.
            </summary>
            <returns>The text associated with this element, or an empty string.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetFullType">
            <summary>
            Builds and returns the dot-delimited full name of this element
            including all parent elements' names.
            <para>The result looks like "xxx.yyy.Type".</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure">
            <summary>
            Represents the parsed logical structure of a document.
            This is created on the basis of <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/>,
            i.e. from the tags in the PDF structure tree.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure.Elements">
            <summary>
            Gets the list of top level <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> objects in the document's logical structure.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.DpiX">
            <summary>
            The horizontal Dpi used when calculate position of PDF elements.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.DpiY">
            <summary>
            The vertical Dpi used when calculate position of PDF elements.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.IgnoreErrors">
            <summary>
            Indicating whether to ignore errors during processing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.Options">
            <summary>
            The recognizer options.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.LogicalStructure">
            <summary>
            The parsed <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.LogicalStructure"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer._operatorsCache">
            <summary>
            The cached page operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Operator">
            <summary>
            The BMC operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Mcid">
            <summary>
            The value of MCID entry in <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.DoOperator">
            <summary>
            The PDF "Do" operator containing the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Operator"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.ParentDoOperator">
            <summary>
            The parent PDF "Do" operator containing the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.DoOperator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions">
            <summary>
            Represents options used by the table extraction algorithm.
            <para>
            Units of measurement that are used by members of this class are determined
            by the horizontal and vertical resolutions of the target (usually point, 1/72 of an inch),
            see <see cref="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.MinimumColWidth">
            <summary>
            Gets or sets the minimum column width.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.MinimumRowHeight">
            <summary>
            Gets or sets the minimum row height.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.GetMinimumDistanceBetweenRows">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between rows.
            The function parameter is the collection of tokens' heights.
            <para>
            The default implementation returns the statistical mode, unless its value is 0 or NaN
            in which case the average is returned.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.GetMinimumDistanceBetweenCols">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between columns.
            The function parameter is the collection of characters' widths.
            <para>
            The default implementation returns the average value multiplied by 2.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TableExtractor">
            <summary>
            Searches a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/> in the specified <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TableExtractor.GetMinDistanceBetweenRows(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.TableExtractor.ElementLink},GrapeCity.Documents.Pdf.Recognition.TableExtractOptions)">
            <summary>
            Calculates a minimal possible distance between table's rows.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TableExtractor.GetMinDistanceBetweenColumns(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.TableExtractor.ElementLink},GrapeCity.Documents.Pdf.Recognition.TableExtractOptions)">
            <summary>
            Calculates a minimal possible distance between table's columns.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.WidthR">
            <summary>
            The width of the char in "normalized" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Index">
            <summary>
            The start index of this char in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Length">
            <summary>
            The length of the char in unicode chars.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.NextIndex">
            <summary>
            Gets <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Index"/> + <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Length"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle">
            <summary>
            The text rotation angle in radians.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.Sin">
            <summary>
            The Sin of <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.Cos">
            <summary>
            The Cos of <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in "recognition" coordinate space to a <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>
            in page coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Paragraph">
            <summary>
            The paragraph owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.TextIndex">
            <summary>
            The start index of this line in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.TextLength">
            <summary>
            The length of the line in unicode chars.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.First">
            <summary>
            Gets the first <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/> in the line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Last">
            <summary>
            Gets the last <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/> in the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCharCount">
            <summary>
            Returns the count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCharAt(System.Drawing.PointF,System.Int32@,System.Boolean@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Returns the index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object at specified position.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetChar(System.Int32)">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object with specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetRunFragmentIndexAndIndexInRunFragment(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> index and index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>
            in token by the index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCoords(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCoords">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetPoints(System.Int32,System.Int32)">
            <summary>
            Gets the array of points defining a polygon with coordinates of a 
            range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>An array of points defining the polygon of the fragment on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetPoints">
            <summary>
            Gets the array of points defining a polygon with coordinates of this line.
            </summary>
            <returns>An array of points defining the polygon of the line on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetText(System.Int32,System.Int32)">
            <summary>
            Returns the text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Map">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/> object owning this line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetCoords(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the coordinates of <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetText(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets a text of <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.HitTest(System.Single,System.Single)">
            <summary>
            Use this function passing in a specific pixel location relative to the top-left
            location of the text map and obtains the information about the correspondent
            hit-test metrics of the text string where the hit-test has occurred.
            </summary>
            <param name="x">The pixel location X to hit-test, relative to the top-left location of the layout box.</param>
            <param name="y">The pixel location Y to hit-test, relative to the top-left location of the layout box.</param>
            <returns>Returns <see cref="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo"/> contains information about hit test.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetWord(GrapeCity.Documents.Pdf.TextMap.MapPos,System.Int32@,System.Int32@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Returns info about word at specified position.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetMapPosByTextIndex(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculates index of nearest <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/> and index of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Char"/> in the line
            corresponding to text index in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.Text"/>.
            Returns true if textIndex is inside the line and false if text index outside of the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)">
            <summary>
            Searches a text in this text map, calls <paramref name="callback"/> for each found text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.IsEmpty">
            <summary>
            Returns a value indicating whether the map has no text blocks.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragment(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns range of the text from <paramref name="startPos"/> to <paramref name="endPos"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragmentToPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns range of the text from top of the page to <paramref name="pos"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragmentFromPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns range of the text from <paramref name="pos"/> to the end of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragment(GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns range of the text which corresponds to the whole page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.BuildUsingOperators(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)">
            <summary>
            For testing purposes only.
            It method does exactly same as <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.Build(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)"/>
            but it uses <see cref="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)"/>
            method working other operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.RightLI">
            <summary>
            Line index at right from point:
            
                +-------------+
                |             |  x
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.LeftLI">
            <summary>
            Line index at left from point:
            
                +-------------+
                |             |  x
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.TopLI">
            <summary>
            Line index at top from point:
            
                +-------------+
                |             |
                +-------------+
                
                       x
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.BottomLI">
            <summary>
            Line index at bottom from point:
            
                       x
            
                +-------------+
                |             |
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Map">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/> object owning this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Layer">
            <summary>
            The rotation layer containing this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Run"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.GetTextRuns(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the first and last <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> objects in the <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> collection of this paragraph
            that contain a specified fragment in this paragraph's whole text (as returned by <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.GetText"/>).
            The fragment is specified by the starting index of its first character in the paragraph text, 
            and the total number of characters in the fragment.
            </summary>
            <param name="startIndex">The zero-based index of the fragment's starting character in this paragraph's text.</param>
            <param name="length">The total number of characters in the fragment.</param>
            <param name="firstRunIndex">OUT: The index of the run in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> that contains the beginning of the specified text fragment.</param>
            <param name="indexInFirstRun">OUT: The index of the text fragment's first character in the run at <paramref name="firstRunIndex"/> position in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/>.</param>
            <param name="lastRunIndex">OUT: The index of the run in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> that contains the end of the specified text fragment.</param>
            <param name="indexInLastRun">OUT: The index of the text fragment's last character in the run at <paramref name="lastRunIndex"/> position in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/>.</param>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.Paragraph">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph"/> object owning this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.Attrs">
            <summary>
            The formatting attributes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Line">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Run">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Run"/> object producing this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.PositionRY">
            <summary>
            The Y coordinate of baseline of first item the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.BoundsR">
            <summary>
            The token bounds in "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix">
            <summary>
            The matrix to convert from "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts rectangle in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetPoint(System.Drawing.PointF)">
            <summary>
            Converts a point in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetPoint(System.Single,System.Single)">
            <summary>
            Converts a point in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetBounds">
            <summary>
            Returns the bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Util">
            <summary>
            Contains utility methods used by recognition classes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Util.c_UnknownChar">
            <summary>
            The char used for unknown characters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsLetterOrDigit(System.String)">
            <summary>
            Returns true if all chars in a string are letters or digits,
            <see cref="M:System.Char.IsLetterOrDigit(System.Char)"/> returns true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsRightToLeft(System.String)">
            <summary>
            Returns true if all chars in a string are RTL (arabic, hebrew etc)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsDelimiterOrWhiteSpace(System.String)">
            <summary>
            Returns true if all chars in a string are spaces, punctuation or separators
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsWhiteSpace(System.String)">
            <summary>
            Returns true if all chars in a string are spaces
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.Contains(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            contains r.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.Contains(System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Common.Quadrilateral},System.Single)">
            <summary>
            Returns true if <paramref name="r"/> contains all items from <paramref name="area"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.AreIntersect(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            intersects with r.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.AreIntersect(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},GrapeCity.Documents.Common.Quadrilateral)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            intersects with <paramref name="q"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RedactOptions">
            <summary>
            Represents additional options to use when a document is being redacted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RedactOptions.Default">
            <summary>
            The default <see cref="T:GrapeCity.Documents.Pdf.RedactOptions"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.IgnoreUnreadableObjects">
            <summary>
            Gets or sets a value indicating whether to completely remove objects that
            need to be partially redacted but which are unreadable or unknown to GcPdf.
            <para>
            If true (the default), such objects will be silently removed.
            Otherwise an exception will be thrown.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptions">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef"/> object that specifies
            additional options used when a redact action requires that some PDF
            content is rendered as an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.Precision">
            <summary>
            Gets or sets the maximum distance (in points) between a PDF object's boundary
            that is outside a redact area, and the redact area's edge, at which
            the object is still considered to be inside the redact.
            <para>The default value is 2 points.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef">
            <summary>
            Represents options that are used when a redact action
            requires that some PDF content is rendered as an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.Zoom">
            <summary>
            Gets or sets the zoom factor. The default is 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.BackColor">
            <summary>
            Gets or sets the background color. The default is white.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.Resolution">
            <summary>
            Gets or sets the resolution of the generated images. The default is 96.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache">
            <summary>
            Gets or sets a value indicating whether to use the rendering cache.
            <para>
            This property is true by default. Setting this property to false reduces
            memory consumption, at the cost of slower rendering speed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache">
            <summary>
            Gets or sets a value indicating whether glyphs are cached as bitmaps rather than as glyph paths.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.EnableFontHinting">
            <summary>
            Gets or sets a value indicating whether font hinting should be enabled for TrueType fonts.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> is true and <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.AllowFontSbits">
            <summary>
            Gets or sets a value indicating whether bitmaps embedded in an OpenType font should be rendered.
            <para>The default is true.</para>
            <para>This property is ignored if either <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> or <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures">
            <summary>
            Defines set of PDF rendering features which are used by the content streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.ContentStreamUsesBlendMode">
            <summary>
            The custom blend mode is used in the content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.NestedContentStreamsUseBlendMode">
            <summary>
            One of nested content streams (referenced via Do operator) uses the custom blend mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.ContentStreamUsesSoftMask">
            <summary>
            The soft mask is used in the content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.NestedContentStreamUsesSoftMask">
            <summary>
            One of nested content streams (referenced via Do operator) uses the soft mask.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.Graphics">
            <summary>
            The destination <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>, passed to the constructor.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.FormXObjectRendering">
            <summary>
            Indicates whether this <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader"/> used to
            render the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.ActiveGraphics">
            <summary>
            The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> object currently used in drawing operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.FillPathComplex(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Fills the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>
            if it is defined by pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.DrawPathComplex(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Draws the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>
            if it is defined by pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PushGlyphPathClip(GrapeCity.Documents.Drawing.IPath)">
            <summary>
            Pushes clip region defined by <paramref name="path"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PushClipRect(System.Drawing.RectangleF)">
            <summary>
            Pushes clip region defined by <paramref name="bounds"/> using matrix
            defined by CurrentGraphicsState.Matrix.
            Method should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PopClipPath"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.RenderFormXObjectTransparencyGroup(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Boolean,System.Boolean,System.Boolean,GrapeCity.Documents.Drawing.IGcTransparencyGroup@,System.Drawing.Rectangle@)">
            <summary>
            Called when a <see cref="T:GrapeCity.Documents.Pdf.Graphics.GroupTransparency"/> is specified in <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Group"/>.
            In this case a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> is rendered into separate layer
            which is composed with <see cref="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.ActiveGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.RenderFormXObjectCurrentContext(GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Called when processing a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> if its
            <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Group"/> is null.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RenderingCache">
            <summary>
            Represents a cache used to speed up rendering.
            <para>
            An instance of this class can be passed to
            <see cref="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.RenderingCache)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)"/>
            methods to improve the rendering speed.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RenderingCache.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> class.
            </summary>
            <param name="memoryLimit">The maximum amount of memory to be used by the cache, in megabytes.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RenderingCache.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RenderingCache.MemoryLimit">
            <summary>
            Gets the maximum amount of memory that can be used by this cache, in megabytes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder">
            <summary>
            Implements the <see cref="T:GrapeCity.Documents.Pdf.ISignatureBuilder"/> interface,
            can be used to build a PKCS#7 signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
            <param name="signingCertificate">The certificate to use.</param>
            <param name="format">The signature format.</param>
            <param name="hashAlgorithm">The hash algorithm to use.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[],GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
            <param name="certificateChain">The certificate chain to use.</param>
            <param name="format">The signature format.</param>
            <param name="hashAlgorithm">The hash algorithm to use.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.HashAlgorithm">
            <summary>
            Gets or sets the HASH algorithm used if <see cref="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureGenerator"/> is not specified.
            Note! If <see cref="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Format"/> is <see cref="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_sha1"/>
            then this property is ignored and always <b>SHA-1</b> used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.CertificateChain">
            <summary>
            Gets or sets the certificate chain. 
            The first certificate is used to sign the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureGenerator">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/> object used to sign the 
            authenticated attribute set that is a part of PKCS#7 signature.
            If not set, the default built-in generator will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Format">
            <summary>
            Gets or sets the signature format.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Crls">
            <summary>
            Gets or sets the collection of certificate revocation lists (CRLs) to use.
            Items in this collection may be of the following types:
            <list type="bullet">
            <item>
            <term>byte[]</term>
            <description>An encoded CRL list.</description>
            </item>
            <item>
            <term>string</term>
            <description>The URL of a CRL (e.g. http://crl.cacert.org/revoke.crl). </description>
            </item>
            <item>
            <term><see cref="T:System.Uri"/></term>
            <description>The <see cref="T:System.Uri"/> of a CRL.</description>
            </item>
            <item>
            <term><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/></term>
            <description>An X509Certificate2 object from which the URL of a CRL will be extracted.</description>
            </item>
            </list>
            An exception will be thrown if an object of an unsupported type is found in this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.IncludeOcsp">
            <summary>
            Gets or sets a value indicating whether to include OCSP information into the signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)">
            <summary>
            For internal use.
            See <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)">
            <summary>
            For internal use.
            See <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat">
            <summary>
            Defines the supported signature formats.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_detached">
            <summary>
            The original signed message digest over the document’s byte range shall be incorporated
            as the normal CMS SignedData field. No data shall be encapsulated in the CMS SignedData field.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKLite</b>,
            the SubFilter value is <b>/adbe.pkcs7.detached</b>.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.ETSI_CAdES_detached">
            <summary>
            This format should be used to create PAdES signatures.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKLite</b>,
            the SubFilter value is <b>/ETSI.CAdES.detached</b>.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_sha1">
            <summary>
            The SHA1 digest of the document’s byte range shall be encapsulated in the
            CMS SignedData field with ContentInfo of type Data.
            The digest of that SignedData shall be incorporated as the normal CMS digest.
            Note! This format has been deprecated with PDF 2.0.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKMS</b>,
            the SubFilter value is <b>/adbe.pkcs7.sha1</b>.
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SecurityUtils">
            <summary>
            The security utility class.
            </summary>
            <summary>
            Provides utilities related to PDF security and signing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetExtensionValue(Org.BouncyCastle.X509.X509Certificate,System.String)">
            <param name="certificate">the certificate from which we need the ExtensionValue</param>
            <param name="oid">the Object Identifier value for the extension.</param>
            <returns>the extension value as an ASN1Primitive object</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRLURL(Org.BouncyCastle.X509.X509Certificate)">
            <summary>
            Returns the URL of the Certificate Revocation List for a Certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRLURL(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Returns the URL of the Certificate Revocation List(CRL) for a certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetOCSPURL(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Returns the OCSP URL from the certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetOCSP(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>
            Returns the OCSP for specified certificate.
            </summary>
            <param name="certificate">The certificate to check.</param>
            <param name="parentCertificate">The parent certificate.</param>
            <param name="url">The OCSP URL, can be null, in this case it will be obtained from <paramref name="certificate"/> if possible.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCertificateChain(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509VerificationFlags)">
            <summary>
            Builds the chain of certificates from a byte array.
            </summary>
            <param name="rawData">The byte array containing data in PFX or P12 format.</param>
            <param name="password">The password to use.</param>
            <param name="revocationMode">The revocation mode used to build the X509Chain.</param>
            <param name="verificationFlags">The verification flags used to build the X509Chain.</param>
            <returns>The chain of certificates. The first element is the signing certificate, the last element is the certificate of CA.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCertificateChain(System.String,System.String,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509VerificationFlags)">
            <summary>
            Builds the chain of certificates from a specified file.
            </summary>
            <param name="fileName">The name of a .pfx or a .p12 file.</param>
            <param name="password">The password to use.</param>
            <param name="revocationMode">The revocation mode used to build the X509Chain.</param>
            <param name="verificationFlags">The verification flags used to build the X509Chain.</param>
            <returns>The chain of certificates. The first element is the signing certificate, the last element is the certificate of CA.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRL(System.Uri)">
            <summary>
            Downloads the CRL from a specified URL.
            </summary>
            <param name="uri">The target URL.</param>
            <returns>The CRL or <see langword="null"/> if the CRL could not be obtained from the specified URL.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SignatureParser">
            <summary>
            Parses the PDF signature binary value (Signature.Contents).
            Note! This code based on PdfPKCS7 of iText library.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.certs">
            <summary>
            All the X.509 certificates in no particular order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signCert">
            <summary>
            The X.509 certificate that is used to sign the digest.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signCerts">
            <summary>
            All the X.509 certificates used for the main signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.crls">
            <summary>
            Certificate Revocation Lists
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digest">
            <summary>
            The signed digest as calculated by this class (or extracted from an existing PDF).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sig">
            <summary>
            Class from the Java SDK that provides the functionality of a digital signature algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestAlgorithmOid">
            <summary>
            The ID of the digest algorithm, e.g. "2.16.840.1.101.3.4.2.1".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestEncryptionAlgorithmOid">
            <summary>
            The encryption algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.filterSubtype">
            <summary>
            SubFilter property of PDF Signature object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.isTsp">
            <summary>
            True if there's a PAdES LTV time stamp.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.isCades">
            <summary>
            True if it is a CAdES signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.version">
            <summary>
            Version of the PKCS#7 object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestalgos">
            <summary>
            The digest algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signerversion">
            <summary>
            Version of the PKCS#7 "SignerInfo" object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sigAttr">
            <summary>
            Signature attributes
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sigAttrDer">
            <summary>
            Signature attributes (maybe not necessary, but we use it as fallback)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestAttr">
            <summary>
            The digest attributes
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.basicResp">
            <summary>
            BouncyCastle BasicOCSPResp
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.timeStampToken">
            <summary>
            BouncyCastle TimeStampToken.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.messageDigest">
            <summary>
            The object that will create the digest
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.encContDigest">
            <summary>
            Encrypted digest
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.RSAdata">
            The RSA data 
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Use if you want to verify a signature using the sub-filter adbe.x509.rsa_sha1.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.#ctor(System.Byte[],System.String)">
            <summary>
            Used to verify PKCS#7 signatures.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.FindOcsp(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Helper method that creates the BasicOCSPResp object.
            @param seq
            @throws IOException
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.CalcSignCertificateChain">
            Helper method that creates the collection of certificates
            used for the main signature based on the complete list
            of certificates and the sign certificate.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.FindCRL(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Helper method that tries to construct the CRLs.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the digest with the specified bytes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.VerifySignatureValue">
            <summary>
            Verify the digest.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore">
            <summary>
            Represents a Document Security Store (DSS).
            Holds information that can be used to verify signatures offline.
            See PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.Clear">
            <summary>
            Clears the content of the current object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="crl">The DER-encoded CRL.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.String)">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="crlUri">The URI containing CRL.</param>
            <returns>The DER-encoded CRL that was added, or <see langword="null"/> if CRL could not be obtained from <paramref name="crlUri"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The certificate used to get the CRL URL.</param>
            <returns>The DER-encoded CRL that was added, or <see langword="null"/> if CRL could not be obtained from <paramref name="cert"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationOCSP(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds an OCSP response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="ocsp">The DER-encoded OCSP response.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationOCSP(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>
            Adds an OCSP response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="certificate">The certificate for which OCSP is requested.</param>
            <param name="parentCertificate">The parent certificate.</param>
            <param name="url">The OCSP URL. If <see langword="null"/>, it will be obtained from <paramref name="certificate"/> if possible.</param>
            <returns>The DER-encoded OCSP that was added, or <see langword="null"/> if OCSP could not be obtained.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCert(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The DER-encoded certificate.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCert(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The certificate.</param>
            <returns>The DER-encoded certificate.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerification(GrapeCity.Documents.Pdf.Security.Signature,GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams)">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="prms">The <see cref="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams"/> object which defines parameters used to build verification information.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams">
            <summary>
            Represents parameters for the <see cref="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerification(GrapeCity.Documents.Pdf.Security.Signature,GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.CertificatesSet">
            <summary>
            Gets or sets a value that defines the set of certificates
            information about which should be added to the DSS.
            The default value is <see cref="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.WholeSigningChain"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.InfoType">
            <summary>
            Gets or sets a value that defines the scope of information to include into the DSS.
            The default value is <see cref="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_OPTIONAL_CRL"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.IncludeCerts">
            <summary>
            Gets or sets a value indicating whether to include certificates information
            into the DSS.
            The default is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.Certificates">
            <summary>
            Gets or sets a list of additional certificates
            used to build the signing chain.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet">
            <summary>
            Defines the set of certificates to process when building verification information.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.SigningCertificateOnly">
            <summary>
            Include only information about signing certificate.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.WholeSigningChain">
            <summary>
            Include information about all certificates in the signing chain.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType">
            <summary>
            Defines the type of verification information to include into the DSS.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP">
            <summary>
            Include only OCSP response.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.CRL">
            <summary>
            Include only CRL.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_AND_CRL">
            <summary>
            Include OCSP response and CRL.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_OPTIONAL_CRL">
            <summary>
            Include CRL only if OCSP response cannot be obtained.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID">
            <summary>
            Represents a cryptographic object identifier.
            Defines IDs of many popular cryptographic items such as HASH algorithms, encoding algorithms etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.PKCS7">
            <summary>
            Represents the IDs related to PKCS#7.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.PKCS7_DATA">
            <summary>
            1.2.840.113549.1.7.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.PKCS7_SIGNED_DATA">
            <summary>
            1.2.840.113549.1.7.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.CONTENT_TYPE">
            <summary>
            1.2.840.113549.1.9.3
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.MESSAGE_DIGEST">
            <summary>
            1.2.840.113549.1.9.4
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.SIGNING_TIME">
            <summary>
            1.2.840.113549.1.9.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.ADBE_REVOCATION">
            <summary>
            1.2.840.113583.1.1.8
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.TSA">
            <summary>
            1.2.840.113583.1.1.9.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.OCSP">
            <summary>
            1.3.6.1.5.5.7.48.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.AA_SIGNING_CERTIFICATE_V1">
            <summary>
            1.2.840.113549.1.9.16.2.12
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.AA_SIGNING_CERTIFICATE_V2">
            <summary>
            1.2.840.113549.1.9.16.2.47
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.TIME_STAMP_TOKEN">
            <summary>
            1.2.840.113549.1.9.16.2.14
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms">
            <summary>
            Represents the IDs of encryption algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.RSA">
            <summary>
            1.2.840.113549.1.1.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.DSA">
            <summary>
            1.2.840.10040.4.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.ECDSA">
            <summary>
            1.2.840.10045.2.1
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms">
            <summary>
            Represents the IDs of hash algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.MD2">
            <summary>
            1.2.840.113549.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.MD5">
            <summary>
            1.2.840.113549.2.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA1">
            <summary>
            1.3.14.3.2.26
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA224">
            <summary>
            2.16.840.1.101.3.4.2.4
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA256">
            <summary>
            2.16.840.1.101.3.4.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA384">
            <summary>
            2.16.840.1.101.3.4.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA512">
            <summary>
            2.16.840.1.101.3.4.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD128">
            <summary>
            1.3.36.3.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD160">
            <summary>
            1.3.36.3.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD256">
            <summary>
            1.3.36.3.2.3
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.GOST3411">
            <summary>
            1.2.643.2.2.9
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.X509Extensions">
            <summary>
            Represents the IDs related to X509 certificates.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.AUTHORITY_KEY">
            <summary>
            2.5.29.35
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_KEY">
            <summary>
            2.5.29.14
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.KEY_USAGE">
            <summary>
            2.5.29.15
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.CERTIFICATE_POLICIES">
            <summary>
            2.5.29.32
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.POLICY_MAPPINGS">
            <summary>
            2.5.29.33
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_ALTERNATIVE_NAME">
            <summary>
            2.5.29.17
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.ISSUER_ALTERNATIVE_NAME">
            <summary>
            2.5.29.18
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_DIRECTORY_ATTRIBUTES">
            <summary>
            2.5.29.9
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.BASIC_CONSTRAINTS">
            <summary>
            2.5.29.19
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.NAME_CONSTRAINTS">
            <summary>
            2.5.29.30
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.POLICY_CONSTRAINTS">
            <summary>
            2.5.29.36
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.EXTENDED_KEY_USAGE">
            <summary>
            2.5.29.37
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.CRL_DISTRIBUTION_POINTS">
            <summary>
            2.5.29.31
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.INHIBIT_ANY_POLICY">
            <summary>
            2.5.29.54
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.FRESHEST_CRL">
            <summary>
            2.5.29.46
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.AUTHORITY_INFO_ACCESS">
            <summary>
            1.3.6.1.5.5.7.1.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_INFO_ACCESS">
            <summary>
            1.3.6.1.5.5.7.1.11
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.KP_TIMESTAMPING">
            <summary>
            1.3.6.1.5.5.7.3.8
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.ID_PKIX_OCSP_NOCHECK">
            <summary>
            1.3.6.1.5.5.7.48.1.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUPPORTED_CRITICAL_EXTENSIONS">
            <summary>
            According to https://tools.ietf.org/html/rfc5280 4.2. "Certificate Extensions":
            "A certificate-using system MUST reject the certificate if it encounters a critical extension it
            does not recognize or a critical extension that contains information that it cannot process."
            <para />
            This set consists of standard extensions which are defined in RFC specifications and are not mentioned
            as forbidden to be marked as critical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.ID">
            <summary>
            Gets the dotted number of the identifier.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.Name">
            <summary>
            Gets the friendly name of the identifier.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.OID"/> class.
            </summary>
            <param name="id">The dotted number of the identifier.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.OID"/> class.
            </summary>
            <param name="id">The dotted number of the identifier.</param>
            <param name="name">The friendly name of the identifier.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.Equals(GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Returns true if this instance equals to <paramref name="other"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.ToString">
            <summary>
            Returns the <see cref="F:GrapeCity.Documents.Pdf.Security.OID.ID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.RC4">
            <summary>
            Implements RC4 algorithm.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.RC4"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.RC4"/> class.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.SetKey(System.Byte[])">
            <summary>
            Sets key used to encode/decode data.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.SetKey(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets key used to encode/decode data.
            </summary>
            <param name="key"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.Process(System.Byte[])">
            <summary>
            Encodes/decodes data.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.Process(System.Byte[],System.Int32)">
            <summary>
            Encodes/decodes data.
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.Security">
            <summary>
            Provides security and encryption services and manages permissions for 
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.DecryptHandler">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to decrypt PDF document during loading.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.EncryptHandler">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to encrypt PDF document during saving.
            Same <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> can not be used for <see cref="P:GrapeCity.Documents.Pdf.Security.Security.DecryptHandler"/> and
            <see cref="P:GrapeCity.Documents.Pdf.Security.Security.EncryptHandler"/>, use <see cref="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Clone"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EncryptionStreamType">
            <summary>
            Defines possible types of streams in context of encryption.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.Default">
            <summary>
            Default stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.Metadata">
            <summary>
            XML metadata stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.EmbeddedFile">
            <summary>
            Embedded file stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.CrossReferenceStream">
            <summary>
            Cross-Reference Stream
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase">
            <summary>
            Base abstract class defining PDF Security Handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.m_Filter">
            <summary>
            For internal use.
            The name of security handler.
            "Filter" entry of encryption dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.m_SubFilter">
            <summary>
            For internal use.
            The "SubFilter" entry of encryption dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.m_Version">
            <summary>
            For internal use.
            A code specifying the algorithm to be used in encrypting and decrypting the document.
            "V" entry of encryption dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.m_EncryptionKeyLength">
            <summary>
            For internal use.
            Length of encryption key.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Create(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Creates instance of <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> from specified <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/>,
            can throw an exception if PDF dictionary has wrong or unknown format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <summary>
            Copies all property values from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Clone">
            <summary>
            Create copy of this <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Filter">
            <summary>
            For internal use.
            Gets the name of security handler.
            "Filter" entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.SubFilter">
            <summary>
            For internal use.
            The "SubFilter" entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Version">
            <summary>
            For internal use.
            Gets the code specifying the algorithm to be used in encrypting and decrypting the document.
            "V" entry of encryption dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.AccessPermissions">
            <summary>
            Defines access permissions granted by a signature to the signed document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.NoChanges">
            <summary>
            No changes to the document are permitted; any change to the document invalidates the signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFilling">
            <summary>
            Permitted changes are filling in forms, instantiating page templates, and signing;
            other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFillingAndAnnotations">
            <summary>
            Permitted changes are the same as for <see cref="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFilling"/>, as well as annotation creation, deletion, and modification;
            other changes invalidate the signature.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.Signature">
            <summary>
            Represents a digital signature in a PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.Signature.References">
            <summary>
            List of <see cref="T:GrapeCity.Documents.Pdf.Security.Signature.Reference"/> objects, see PDF 1.7 page 728.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.WriteSignature(System.Int64,System.Object)">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(GrapeCity.Documents.Pdf.SignatureProperties,GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/> method when document's
            content is generated, writes ByteRange and Contents properties of the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Cert">
            <summary>
            Gets or sets an array of byte strings representing the X.509 certificate chain used when signing and verifying
            signatures that use public-key cryptography, or a byte string if the chain has only one entry.
            The signing certificate must appear first in the array;
            it is used to verify the signature value in Contents, and the other certificates are
            used to verify the authenticity of the signing certificate.
            Required when SubFilter is adbe.x509.rsa_sha1.
            If SubFilter is adbe.pkcs7.detached or adbe.pkcs7.sha1, this entry is not used,
            and the certificate chain must be put in the PKCS#7 envelope in Contents.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.ByteRange">
            <summary>
            Gets or sets an array of <see cref="T:GrapeCity.Documents.Pdf.ByteRange"/> structs defining the content
            used to calculate <see cref="P:GrapeCity.Documents.Pdf.Security.Signature.Contents"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.R">
            <summary>
            Gets or sets the version of the signature handler that was used to create the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.V">
            <summary>
            Gets or sets the version of the signature dictionary format.
            It corresponds to the usage of the signature dictionary in the context of the value of SubFilter.
            The value is 1 if the Reference dictionary is considered critical to the validation of the signature.
            Default value: 0.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Prop_AuthTime">
            <summary>
            Gets or sets the number of seconds since the signer was last authenticated.
            It is intended to be used in claims of signature repudiation. It should be omitted if the value is unknown.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Prop_AuthType">
            <summary>
            Gets or sets the method used to authenticate the signer.
            It is intended to be used in claims of signature repudiation.
            Valid values include PIN, Password, and Fingerprint.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.CreateParser">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.ISignatureParser"/> object that can be used to parse a binary signature.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.ISignatureParser"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.VerifySignatureValue">
            <summary>
            Verifies the signature by checking that embedded data digest corresponds to the calculated one.
            </summary>
            <returns>true if signature is correct and corresponds to the signed data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.VerifySignature">
            <summary>
            Verifies the signature.
            </summary>
            <returns>True if the signature was verified successfully, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Type">
            <summary>
            Gets the signature type,
            if present, shall be "Sig" for a signature dictionary or 
            "DocTimeStamp" for a time-stamp signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Filter">
            <summary>
            Gets the name of the preferred signature handler to use when validating this signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.SubFilter">
            <summary>
            Gets a name that describes the encoding of the signature value and key information in the signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Contents">
            <summary>
            Gets the signature value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Name">
            <summary>
            Gets the name of the person or authority signing the document.
            This value should be used only when it is not possible to extract the name from the signature;
            for example, from the certificate of the signer.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.SigningTime">
            <summary>
            Gets the time of signing.
            Depending on the signature handler, this may be a normal unverified computer time or
            a time generated in a verifiable way from a secure time server.
            This value should be used only when the time of signing is not available in the signature;
            for example, a time stamp can be embedded in a PKCS#7 binary data object (see PDF specification for more details).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Location">
            <summary>
            Gets the CPU host name or physical location of the signing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Reason">
            <summary>
            Gets the reason for the signing, such as "I agree...".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.ContactInfo">
            <summary>
            Gets the information provided by the signer to enable a recipient to contact the signer
            to verify the signature (for example, a phone number).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.Signature.Reference.DigestMethod">
            <summary>
            A name identifying the algorithm to be used when computing the digest. Valid values are MD5 and SHA1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.Signature.Reference.DigestValue">
            <summary>
            When present, the computed value of the digest.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.Signature.Reference.DigestLocation">
            <summary>
            An array of two integers specifying the location in the PDF file of the DigestValue string.
            The integers represent the starting offset and length in bytes, respectively.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.Signature.Reference.TransformMethod">
            <summary>
            The transform method, see documentation for details. PDF1.7 page 730.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.AccessType">
            <summary>
            Defines possible access types to the PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.InvalidPassword">
            <summary>
            Invalid password specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.User">
            <summary>
            User access.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.Owner">
            <summary>
            Owner access.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler">
            <summary>
            Defines base class for Standard Security Handlers.
            These security handlers allow access permissions and up to two passwords to be specified for a document:
            an owner password and a user password.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Buf">
            <summary>
            Used in internal calculations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._rc4Key">
            <summary>
            The encryption key generated with using Algorithm 3.2
            used in RC4 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._md5">
            <summary>
            The MD5 hash algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._rc4">
            <summary>
            The RC4 encryption algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_AesKey">
            <summary>
            The encryption key generated with using Algorithm 3.2
            used with AES algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Aes">
            <summary>
            The AES encryption algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Permissons">
            <summary>
            For internal use.
            Flags defines access permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Revision">
            <summary>
            For internal use.
            Revision of standard security handler.
            "R" entry of standard security handler dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_EncryptMetadata">
            <summary>
            For internal use.
            Indicates whether XML metadata stream should be encrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_AesIV">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.GetPaddedPassword(GrapeCity.Documents.Pdf.Security.PdfPassword)">
            <summary>
            Pad or truncate the password string to exactly 32 bytes.
            If the password string is more than 32 bytes long, use only its first 32 bytes;
            if it is less than 32 bytes long, pad it by appending the required number of additional bytes from
            the beginning of the <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.s_PasswordPadding"/> string.
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateUserKey(System.Byte[],System.Byte[])">
            <summary>
            Calculate what the U value should consist of given a particular key and  
            document configuration.Correponds to Algorithms 3.4 and 3.5 of the    
            PDF Reference version 1.7
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateGeneralEncryptionKey(System.Byte[],System.Byte[])">
            <summary>
            Determine what the general encryption key is, given a configuration.
            This corresponds to Algorithm 3.2 of PDF Reference version 1.7.
            </summary>
            <param name="permanentID"></param>
            <param name="paddedPassword"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateInitialOwnerPasswordKeyBytes(System.Byte[])">
            <summary>
            Establish the key to be used for the generation and validation 
            of the user password via the O entry.Corresponds to steps 1-4 in
            Algorithm 3.3 of the PDF Reference version 1.7.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.IsUserPassword(System.Byte[],System.Byte[])">
            <summary>
            Checks whether password is a valid user password,
            see Algorithm 3.6 of PDF1.7.
            </summary>
            <param name="permanentID"></param>
            <param name="paddedPassword"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateOwnerKey(System.Byte[],System.Byte[])">
            <summary>
            Calculate what the O value of the Encrypt dict should look like given a   
            particular configuration.Not used, but useful for reference; this  
            process is reversed to determine whether a given password is the
            owner password.Corresponds to Algorithm 3.3 of the PDF Reference     
            version 1.7.     
            </summary>
            <param name="ownerPassword"></param>
            <param name="userPassword"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.IsOwnerPassword(System.Byte[],System.Byte[],System.Byte[]@)">
            <summary>
            Check to see whether a given password is the owner password. Corresponds 
            to algorithm 3.6 of PDF Reference version 1.7.
            </summary>
            <param name="permanentID"></param>
            <param name="paddedPassword"></param>
            <param name="userPassword">Contains the user password which should be used to read document's content.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.SetUserPassword(GrapeCity.Documents.Pdf.Security.PdfPassword)">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> called from setter of UserPassword property.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.SetOwnerPassword(GrapeCity.Documents.Pdf.Security.PdfPassword)">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> called from setter of OwnerPassword property.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.DecryptData(System.Byte[],System.Int32,GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm,System.Int32,System.Int32)">
            <summary>
            Decrypts data.
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <param name="ea"></param>
            <param name="objID"></param>
            <param name="gen"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.EncryptData(System.Byte[],System.Int32,GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm,System.Int32,System.Int32)">
            <summary>
            Encrypts data.
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <param name="ea"></param>
            <param name="objID"></param>
            <param name="gen"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AccessType">
            <summary>
            Gets the access type granted by this <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>, or null.
            This property is initialized when a document is loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Revision">
            <summary>
            Gets the revision of this <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword">
            <summary>
            Gets or sets the password required to open a PDF document as a string.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer 
            to perform the conversion and set the password using <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes">
            <summary>
            Gets or sets the password required to open a PDF document as a byte array.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer 
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword">
            <summary>
            Gets or sets the password required to change permissions of a PDF document as a string.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer 
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes">
            <summary>
            Gets or sets the password required to change permissions of a PDF document as a byte array.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer 
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions">
            <summary>
            For internal use.
            Definies possible access permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.All">
            <summary>
            Full permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Revision3Permissions">
            <summary>
            Permissions require Revision 3 or greater of <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.PrintingMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Print"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.QualityPrint"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.EditingMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyFormFields"/>, <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyAnnotationsFillFieldValues"/>,
            <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.FillFieldValues"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.AssembleDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CopyContentMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContent"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContentDisabilities"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Print">
            <summary>
            (Revision 2) Print the document.
            (Revision 3 or greater) Print the document (possibly not at the highest quality level, depending on whether bit 12 is also set).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyFormFields">
            <summary>
            Modify the contents of the document by operations other than those controlled by bits 6, 9, and 11.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContent">
            <summary>
            (Revision 2) Copy or otherwise extract text and graphics from the document, including extracting text and graphics (in support of accessibility to users with disabilities or for other purposes).
            (Revision 3 or greater) Copy or otherwise extract text and graphics from the document by operations other than that controlled by bit 10.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyAnnotationsFillFieldValues">
            <summary>
            Add or modify text annotations, fill in interactive form fields, and, if bit 4 is also set, create or modify interactive form fields (including signature fields).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.FillFieldValues">
            <summary>
            (Revision 3 or greater) Fill in existing interactive form fields (including signature fields), even if bit 6 is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContentDisabilities">
            <summary>
            (Revision 3 or greater) Extract text and graphics (in support of accessibility to users with disabilities or for other purposes).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.AssembleDocument">
            <summary>
            (Revision 3 or greater) Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if bit 4 is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.QualityPrint">
            <summary>
            (Revision 3 or greater) Print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this bit is clear (and bit 3 is set), printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2">
            <summary>
            Defines Standard Security Handler Revision 2.
            This handler uses RC4 encryption with key 40 bit length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowPrint">
            <summary>
            Gets or sets whether the user can print the Pdf document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowEditContent">
            <summary>
            Gets or sets whether the user can edit the contents of the Pdf document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowCopyContent">
            <summary>
            Gets or sets whether the user can copy contents from the Pdf document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowEditAnnotations">
            <summary>
            Gets or sets whether the user can edit annotations in the Pdf document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.PrintingPermissions">
            <summary>
            Enumerates possible permissions that control the printing of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.Enabled">
            <summary>
            Printing is enabled with maximum quality.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.Disabled">
            <summary>
            Printing is disabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.LowResolution">
            <summary>
            Printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EditingPermissions">
            <summary>
            Flags specifying possible permissions that control the editing of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.Enabled">
            <summary>
            Editing is enabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.Disabled">
            <summary>
            Editing is disabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.CreateModifyFormFields">
            <summary>
            Allows creating or modifying interactive form fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.CreateModifyAnnotationsFillFieldValues">
            <summary>
            Allows adding or modifying text annotations and filling in interactive form fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.FillFieldValues">
            <summary>
            Allows filling in existing interactive form fields (including signature fields).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.AssembleDocument">
            <summary>
            Allows assembling the document (insert, rotate, or delete pages and create bookmarks or thumbnail images).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.CopyContentPermissions">
            <summary>
            Enumerates possible permissions that control the ability to copy a document's content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.CopyContentPermissions.Enabled">
            <summary>
            Content copying is enabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.CopyContentPermissions.Disabled">
            <summary>
            Content copying is disabled.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3">
            <summary>
            Represents a Standard Security Handler Revision 3.
            <para>
            This handler uses RC4 encryption with key from 40 to 128 bit length and allows
            to define additional permission flags.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.SetEncryptionKeyLength(System.Int32)">
            <summary>
            For internal use.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.PrintingPermissions">
            <summary>
            Gets or sets a value controlling how a document can be printed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.EditingPermissions">
            <summary>
            Gets or sets a value controlling how a document can be edited.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContentPermissions">
            <summary>
            Gets or sets a value controlling how a document's content can be copied or extracted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContent">
            <summary>
            Gets or sets a value indicating whether a document's content can be copied or extracted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContentAccessibility">
            <summary>
            Gets or sets a value used to determine whether content could be extracted for
            the purposes of accessibility.
            <para>
            Note however that this restriction has been deprecated in PDF 2.0,
            which states that PDF readers shall ignore this bit.
            The default value of this property is true, and it should not be changed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.EncryptionKeyLength">
            <summary>
            Gets or sets the length of the encryption key, in bits.
            The value must be a multiple of 8, in the range from 40 to 128.
            <para>
            IMPORTANT NOTE: <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4"/> can use RC4 or AES encryption,
            and according to specification, with RC4 any key length in the range from 40 to 128 can be used.
            But tests show that current/recent versions of <b>Adobe Acrobat Reader DC</b> and <b>Adobe Acrobat Pro DC</b>
            cannot handle files encrypted with RC4 if the key length is not equal to 128.
            Older versions of Acrobat Reader handle such files without issues, so it looks like a bug in
            the newer versions of Acrobat Reader.
            So it is recommended that <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3"/> is used
            in cases when RC4 encryption with key length other than 128 is required.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm">
            <summary>
            Defines possible encryption algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm.RC4">
            <summary>
            The RC4 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm.AES">
            <summary>
            The AES algorithm.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4">
            <summary>
            Represents Standard Security Handler Revision 4.
            <para>
            This handler can use RC4 encryption with key 40-128 bit or AES encryption with 128 bit key and allows
            to define additional permission flags.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptMetadata">
            <summary>
            Gets or sets a value indicating whether the document-level metadata stream
            is to be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptionAlgorithm">
            <summary>
            Gets or sets the encryption algorithm to use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptStrings">
            <summary>
            Gets or sets a value indicating whether strings should be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptStreams">
            <summary>
            Gets or sets a value indicating whether streams should be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptEmbeddedFiles">
            <summary>
            Gets or sets a value indicating whether embedded file streams should be encrypted.
            <para>
            NOTE: It looks like Acrobat Reader processes EFF key in 
            the encryption dictionary incorrectly so this property was changed from public to internal and
            GcPdf does not write EFF entry at all.
            See DOC-1351, DOC-1352 for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.AesIV">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5">
            <summary>
            Represents Standard Security Handler Revision 5.
            <para>
            This handler always use AES encryption with key length of 256 bit,
            it is described in Adobe Supplement to the ISO 32000.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.EncryptionAlgorithm">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> always use AES encryption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.EncryptionKeyLength">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> always use 256 key length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.PermsBytes">
            <summary>
            For internal use.
            The 4 bytes used to calculate Perms entry. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.UserValidationSalt">
            <summary>
            For internal use.
            The User Validation Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.UserKeySalt">
            <summary>
            For internal use.
            The User Key Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.OwnerValidationSalt">
            <summary>
            For internal use.
            The Owner Validation Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.OwnerKeySalt">
            <summary>
            For internal use.
            The Owner Key Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.FileEncryptionKey">
            <summary>
            For internal use.
            The File Encryption Key is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6">
            <summary>
            Represents Standard Security Handler Revision 6.
            <para>
            This handler always use AES encryption with key length of 256 bit,
            it is described in PDF 2.0 specification.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6.GetHash(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Implementation details see in PDF2.0 page 80,
            chapter 7.6.4.3.4 Algorithm 2.B: Computing a hash (revision 6 and later)
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AudioFormat">
            <summary>
            Defines audio formats supported by <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Auto">
            <summary>
            Auto detect audio format.s
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Wav">
            <summary>
            The WAV format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Aiff">
            <summary>
            The AIFF format.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SoundEncodingFormat">
            <summary>
            Defines possible encoding formats for sample data in a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2^BitsPerSample-1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.Signed">
            <summary>
            Twos-complement values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.muLaw">
            <summary>
            u-law-encoded samples.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.ALaw">
            <summary>
            A-law-encoded samples.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SoundObject">
            <summary>
            Represents a sound object, which is a stream containing sample values
            that define a sound to be played through the computer�s speakers.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.SamplingRate">
            <summary>
            Gets or sets the sampling rate, in samples per second.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.SoundChannels">
            <summary>
            Gets or sets the number of sound channels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.BitsPerSample">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.EncodingFormat">
            <summary>
            Gets or sets the encoding format for the sample data, see <see cref="T:GrapeCity.Documents.Pdf.SoundEncodingFormat"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.GetAudioDataStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> object containing the audio data.
            <para>IMPORTANT: that the stream should be disposed after usage.</para>
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> containing audio data, should be disposed after usage.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.SetAudioDataStream(System.IO.Stream)">
            <summary>
            Sets the audio data stream.
            <para>IMPORTANT: the stream will be read when the document is saved, 
            so it should be available at that time.</para>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing audio data.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.FromFile(System.String,GrapeCity.Documents.Pdf.AudioFormat)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> from a specified file.
            <para>Note that only a limited set of audio formats is supported, see <see cref="T:GrapeCity.Documents.Pdf.AudioFormat"/> for details.</para>
            </summary>
            <param name="fileName">The file with the audio.</param>
            <param name="audioFormat">The audio format.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.FromStream(System.IO.Stream,GrapeCity.Documents.Pdf.AudioFormat)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> from a specified stream.
            <para>Note that only a limited set of audio formats is supported, see <see cref="T:GrapeCity.Documents.Pdf.AudioFormat"/> for details.</para>
            </summary>
            <param name="stream">The stream with audio data.</param>
            <param name="audioFormat">The audio format.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder">
            <summary>
            Allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/> in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder.Value">
            <summary>
            Gets the array of values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder.ObjID">
            <summary>
            Gets the PDF object's ID, returns <see cref="F:GrapeCity.Documents.Pdf.PdfObjID.Empty"/> in case of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder.CloneForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            For internal use.
            Clones the object when PDF documents are merged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt">
            <summary>
            Provides extension methods for working with <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.IndexOf(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Object)">
            <summary>
            Returns index of <paramref name="obj"/> in the PDF array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.Remove(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Object)">
            <summary>
            Removes an object from the array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.Add(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Object)">
            <summary>
            Adds an object to the array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the integer value at the specified index.
            <para>Throws an exception if the value cannot be converted to an integer.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Int32)">
            <summary>
            Gets the integer value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to an integer.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets the integer value at the specified index.
            <para>If the value cannot be converted to an integer,
            returns <paramref name="defValue"/> and adds a warning to
            <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetInt(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Tries to get the integer value at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to an integer.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to an integer, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to integers,
            and copies the converted values to a new array of integers.
            <para>Throws an exception if any value cannot be converted to an integer.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>An integer array containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Converts all elements of this PDF array to integers,
            and copies the converted values to a new array of integers.
            <para>
            Uses <paramref name="defItemValue"/> for values that cannot be converted to integers.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="defItemValue">The default value for items that cannot be converted to integers.</param>
            <returns>An integer array containing values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to integers,
            and copies the converted values to a new array of integers.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>An integer array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the Boolean value at the specified index.
            <para>Throws an exception if the value cannot be converted to a Boolean.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Boolean)">
            <summary>
            Gets the Boolean value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a Boolean.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Gets the Boolean value at the specified index.
            <para>If the value cannot be converted to a Boolean,
            returns <paramref name="defValue"/> and adds a warning to
            <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetBool(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Boolean@,System.Boolean)">
            <summary>
            Tries to get the Boolean value at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to a Boolean.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a Boolean, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetBool(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Nullable{System.Boolean}@,System.Boolean)">
            <summary>
            Tries to get the Boolean value at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to a Boolean.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a Boolean, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to Booleans,
            and copies the converted values to a new array of Booleans.
            <para>Throws an exception if any value cannot be converted to a Boolean.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A Boolean array containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Boolean)">
            <summary>
            Converts all elements of this PDF array to Booleans,
            and copies the converted values to a new array of Booleans.
            <para>
            Uses <paramref name="defItemValue"/> for values that cannot be converted to Booleans.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="defItemValue">The default value for items that cannot be converted to Booleans.</param>
            <returns>A Boolean array containing values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to Booleans,
            and copies the converted values to a new array of Booleans.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A Boolean array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the float value at the specified index.
            <para>Throws an exception if the value cannot be converted to a float.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Single)">
            <summary>
            Gets the float value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a float.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Nullable{System.Single})">
            <summary>
            Gets the float value at the specified index.
            <para>If the value cannot be converted to a float,
            returns <paramref name="defValue"/> and adds a warning to
            <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Single@,System.Boolean)">
            <summary>
            Tries to get the float value at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to a float.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a float, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Nullable{System.Single}@,System.Boolean)">
            <summary>
            Tries to get the float value at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to a float.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a float, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.Single[]@)">
            <summary>
            Tries to get the array of float values at the specified index.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <returns>True if the value can be converted to an array of float values, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to floats,
            and copies the converted values to a new array of floats.
            <para>Throws an exception if any value cannot be converted to a float.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A float array containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Single)">
            <summary>
            Converts all elements of this PDF array to floats,
            and copies the converted values to a new array of floats.
            <para>
            Uses <paramref name="defItemValue"/> for values that cannot be converted to floats.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="defItemValue">The default value for items that cannot be converted to floats.</param>
            <returns>A float array containing values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to floats,
            and copies the converted values to a new array of floats.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A float array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the PDF name at the specified index.
            <para>Throws an exception if the value cannot be converted to a PDF name.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.String)">
            <summary>
            Gets the PDF name at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a PDF name.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetName(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.String@,System.Boolean)">
            <summary>
            Tries to get the PDF name at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted to a PDF name.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a PDF name, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.String[]@)">
            <summary>
            Tries to get the array of PDF name at the specified index.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <returns>True if the value can be converted to an array of PDF names, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to PDF names,
            and copies the converted values to a new string array.
            <para>Throws an exception if any value cannot be converted to a PDF name.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A string array containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.String)">
            <summary>
            Converts all elements of this PDF array to PDF names,
            and copies the converted values to a new string array.
            <para>
            Uses <paramref name="defItemValue"/> for values that cannot be converted to PDF names.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="defItemValue">The default value for items that cannot be converted to PDF names.</param>
            <returns>A string array containing values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to PDF names,
            and copies the converted values to a new string array.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A string array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the PDF string at the specified index.
            <para>Throws an exception if the value cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,System.String)">
            <summary>
            Gets the string at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a string.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetString(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfString@,System.Boolean)">
            <summary>
            Tries to get the PDF string at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted to a PDF string, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfString[]@)">
            <summary>
            Tries to get the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> objects at the specified index.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <returns>True if the value can be converted, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToPdfStringArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> objects,
            and copies the converted values to a new array.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A PDF string array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToStringArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to strings,
            and copies the converted values to a new array.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A string array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetRef(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> at the specified index.
            <para>Throws an exception if the value cannot be converted.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetRef(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfRef@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the value at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.ToRefArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>s,
            and copies the converted values to a new array.
            <para>Throws an exception if any value cannot be converted.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> array containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryToRefArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>s,
            and copies the converted values to a new array.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> array containing all values from this array, or <c>null</c>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.AsRealValueArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> to array of objects, throws an exception if
            some elements can not be converted.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.AsDictArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Object)">
            <summary>
            Convert this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> to array of objects,
            uses <paramref name="defItemValue"/> for items which can not be converted to float.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryAsRealValueArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> to array of objects,
            returns null if some items can not be converted to int.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetDict(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object at the specified index.
            <para>Throws an exception if the value cannot be converted.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <returns>The object at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.GetDict(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The object at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetDict(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the object at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryGetStream(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> object at the specified index,
            optionally adding a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if the value cannot be converted.
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="index">The index of the item to return.</param>
            <param name="value">OUT: the object at the specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</param>
            <returns>True if the value can be converted, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.AsDictArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Converts all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects,
            and copies the converted values to a new array.
            <para>Throws an exception if any value cannot be converted.</para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects containing all items from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.AsDictArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Converts all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects,
            and copies the converted values to a new array.
            <para>
            Uses <paramref name="defItemValue"/> for items that cannot be converted.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <param name="defItemValue">The default value for items that cannot be converted.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects containing items from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolderExt.TryAsDictArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Tries to convert all elements of this PDF array to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects,
            and copies the converted values to a new array.
            <para>
            If any item cannot be converted, returns <c>null</c>.
            </para>
            </summary>
            <param name="pah">The current PDF array holder.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects containing all items from this array, or <c>null</c>.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder">
            <summary>
            Allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder.Value">
            <summary>
            Gets the dictionary of properties.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder.ObjID">
            <summary>
            Gets the PDF object's ID, returns <see cref="F:GrapeCity.Documents.Pdf.PdfObjID.Empty"/> in case of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder.CloneForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            For internal use.
            Clones the object when PDF documents are merged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt">
            <summary>
            Provides extension methods for working with <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.Clear(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Clears the dictionary.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.HasValue(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Checs whether the dictionary contains a value with specified key and this value is not null.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>true if value exists; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetValue(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: The value associated with the key.</param>
            <returns>true if the IPdfDictHolder contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.CopyTo(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.Spec.PdfDict@,System.String[])">
            <summary>
            Copies from the current dictionary to <paramref name="dest"/> properties
            specified in <paramref name="propNames"/>.
            <para><paramref name="dest"/> can be <c>null</c>, in that case it will be initialized
            if there are any properties to copy.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="dest">The target PDF dictionary object (can be <c>null</c>).</param>
            <param name="propNames">The names of properties to copy.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.CopyToExcluding(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.Spec.PdfDict@,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Copies from the current dictionary to <paramref name="dest"/> all properties
            except those specified in <paramref name="propsToExclude"/>.
            <para><paramref name="dest"/> can be <c>null</c>, in that case it will be initialized
            if there are any properties to copy.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="dest">The target PDF dictionary object (can be <c>null</c>).</param>
            <param name="propsToExclude">The names of properties to exclude.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetRealValue(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object@)">
            <summary>
            Tries to get the value associated with the specified key.
            If the value is a reference to an indirect PDF object,
            resolves the reference and gets the value of the indirect object.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the resolved value, or null if the key was not found.</param>
            <returns>True if the key was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetObject``3(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.GcPdfDocument,System.String,GrapeCity.Documents.Pdf.Parser.PdfObjParser{``1,``2})">
            <summary>
            For internal use.
            Converts value of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> with key <paramref name="key"/>
            to real object using <paramref name="parser"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetObject``3(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,GrapeCity.Documents.Pdf.GcPdfDocument,System.String,GrapeCity.Documents.Pdf.Parser.PdfObjParser{``1,``2},GrapeCity.Documents.Pdf.Parser.PdfParser.SetReferenceDelegate)">
            <summary>
            For internal use.
            Converts value of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> with key <paramref name="key"/>
            to real object using <paramref name="parser"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the Boolean value associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to a Boolean.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the Boolean value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a Boolean.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a Boolean.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Boolean})">
            <summary>
            Gets the Boolean value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a Boolean.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a Boolean.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetBool(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean@)">
            <summary>
            Tries to get the Boolean value associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a Boolean.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a Boolean, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetBool(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets a Boolean value associated with the specified key,
            or removes the existing key if <paramref name="value"/> is equal to <paramref name="defValue"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> value of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.String"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:System.String"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetPdfString(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetString(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfString@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object associated with the specified key.
            <para>
            Optionally adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="addWarning">Specifies whether to add a warning if the value could not be converted.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetNonEmptyString(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String)">
            <summary>
            Sets a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> value associated with the specified key,
            or removes the existing key if <paramref name="value"/> is null or empty.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetStringOrName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the string associated with the specified key.
            The string can be specified in the PDF as a PDF string or a PDF name.
            <para>Throws an exception if the value does not exist or cannot be converted to a string.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetStringOrName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String)">
            <summary>
            Gets the string associated with the specified key.
            The string can be specified in the PDF as a PDF string or a PDF name.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a string.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a string.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetStringOrName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String@,System.Boolean)">
            <summary>
            Tries to get the string associated with the specified key.
            The string can be specified in the PDF as a PDF string or a PDF name.
            <para>
            Optionally adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="addWarning">Specifies whether to add a warning if the value could not be converted.</param>
            <returns>True if the key was found and the value could be converted to a Boolean, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetLang(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> object associated with the specified key
            (in the PDF the <c>PdfLang</c> object should be represented as a PDF string).
            <para>Throws an exception if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetLang(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.PdfLang)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> object associated with the specified key
            (in the PDF the <c>PdfLang</c> object should be represented as a PDF string).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the integer value associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to an integer.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Int32)">
            <summary>
            Gets the integer value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an integer.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an integer.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the integer value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an integer.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an integer.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetInt(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Int32@)">
            <summary>
            Tries to get the integer value associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an integer.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an integer, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetInt(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Int32,System.Int32)">
            <summary>
            Sets an integer value associated with the specified key,
            or removes the existing key if <paramref name="value"/> is equal to <paramref name="defValue"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the float value associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to a float.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Single)">
            <summary>
            Gets the float value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a float.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a float.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Single})">
            <summary>
            Gets the float value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a float.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a float.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Single@)">
            <summary>
            Tries to get the float value associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a float.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a float, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Single,System.Single)">
            <summary>
            Sets a float value associated with the specified key,
            or removes the existing key if <paramref name="value"/> is equal to <paramref name="defValue"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the PDF name value associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to a PDF name.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String)">
            <summary>
            Gets the PDF name value associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a PDF name.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a PDF name.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String@,System.Boolean)">
            <summary>
            Tries to get the PDF name value associated with the specified key.
            <para>
            Optionally adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a PDF name.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="addWarning">Specifies whether to add a warning if the value could not be converted.</param>
            <returns>True if the key was found and the value could be converted to a PDF name, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetName(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String,System.String)">
            <summary>
            Sets or removes the PDF name value associated with a specified <paramref name="key"/>.
            <para>
            If the specified <paramref name="value"/> is equal to <paramref name="defValue"/>,
            the value is removed from the current dictionary.
            Otherwise (if it is different from the default), the value is set.
            </para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetNameNotEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String)">
            <summary>
            Sets or removes the PDF name value associated with a specified <paramref name="key"/>.
            <para>
            If the specified <paramref name="value"/> is <see langword="null"/> or empty,
            the value is removed from the current dictionary.
            Otherwise the value is set.
            </para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,``0)">
            <summary>
            Gets the enum value associated with the specified key
            (in a PDF enum values should be represented by PDF names).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <typeparamref name="T"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <typeparamref name="T"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{``0})">
            <summary>
            Gets the enum value associated with the specified key
            (in a PDF enum values should be represented by PDF names).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <typeparamref name="T"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <typeparamref name="T"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,``0@)">
            <summary>
            Tries to get the enum value associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <typeparamref name="T"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to <typeparamref name="T"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Util.EnumMap{``0},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,``0,GrapeCity.Documents.Pdf.Util.EnumMap{``0},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,``0)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct should be represented by a PDF name).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{``0})">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct should be represented by a PDF name).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.PdfEnum{``0}@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{``0}},System.Nullable{``0})">
            <summary>
            Sets a value with specified key,
            the value will be removed from dictionary if <paramref name="value"/> equals to
            <paramref name="defValue"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetDict(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetDict(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.IsArrayContainsItem(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object)">
            <summary>
            Returns a value indicating whether the array with name key contains a specified item.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of array property.</param>
            <param name="item">The item to check.</param>
            <returns>true if array contains item false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.AddArrayItem(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Adds an item to the array property with specified name,
            creates an array with specified key if it does not exist.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of array property.</param>
            <param name="item">The item to add.</param>
            <param name="indirect">Indicates whether array should be created as indirect object if it does not exist.</param>
            <param name="onlyIfNotExists">Indicates whether to add item if it does not exists already.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.RemoveArrayItem(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object,System.Boolean)">
            <summary>
            Removes an item from the array property with specified name.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of array property.</param>
            <param name="item">The item to remove.</param>
            <param name="removeEmptyArray">Indicates whether to remove the empty array from dict.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/> object associated with the specified key.
            <para>Throws an exception if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/> object associated with the specified key.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/> object associated with the specified key.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder)">
            <summary>
            Sets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/> object associated with the specified key,
            removes a value if <paramref name="value"/> is null.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the integer array associated with the specified key
            (in a PDF an integer array should be represented as a PDF array containing integers).
            Optionally converts a single integer value to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to an integer array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single integer value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Int32[]@,System.Boolean)">
            <summary>
            Tries to get the integer array associated with the specified key
            (in a PDF an integer array should be represented as a PDF array containing integers).
            Optionally converts a single integer value to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an integer array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single integer value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an integer array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the float array associated with the specified key
            (in a PDF a float array should be represented as a PDF array containing floats).
            Optionally converts a single float value to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to a float array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single float value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Single[]@,System.Boolean)">
            <summary>
            Tries to get the float array associated with the specified key
            (in a PDF a float array should be represented as a PDF array containing floats).
            Optionally converts a single float value to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a float array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single float value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to a float array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the Boolean array associated with the specified key
            (in a PDF a Boolean array should be represented as a PDF array containing Booleans).
            Optionally converts a single Boolean value to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to a Boolean array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single Boolean value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean[]@,System.Boolean)">
            <summary>
            Tries to get the Boolean array associated with the specified key
            (in a PDF a Boolean array should be represented as a PDF array containing Booleans).
            Optionally converts a single Boolean value to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a Boolean array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single Boolean value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to a Boolean array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfString[]@,System.Boolean)">
            <summary>
            Tries to get the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> objects associated with the specified key
            (in a PDF a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> array should be represented as a PDF array containing PDF strings).
            Optionally converts a single PDF string to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single PDF string should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String[]@,System.Boolean)">
            <summary>
            Tries to get the array of PDF strings associated with the specified key, converting all PDF strings to <see cref="T:System.String"/> objects.
            Optionally converts a single PDF string to a string array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single PDF string should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the array of strings associated with the specified key
            (in a PDF an array of strings should be represented as a PDF array containing PDF names).
            Optionally converts a single PDF name to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to an array of strings.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single PDF name should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String[],System.Boolean)">
            <summary>
            Gets the array of strings associated with the specified key
            (in a PDF an array of strings should be represented as a PDF array containing PDF names).
            Optionally converts a single PDF name to an array.
            <para>Returns a default value if the value does not exist or cannot be converted to an array of strings.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <param name="singleToArray">Specifies whether a single PDF name should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String[]@,System.Boolean)">
            <summary>
            Tries to get the array of strings associated with the specified key
            (in a PDF an array of strings should be represented as a PDF array containing PDF names).
            Optionally converts a single PDF name to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an array of strings.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single PDF name should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.SetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.String[],System.Boolean)">
            <summary>
            Sets or removes the PDF name array associated with a specified <paramref name="key"/>.
            <para>
            If the specified <paramref name="value"/> is <see langword="null"/>,
            the value is removed from the current dictionary.
            Otherwise the value is set.
            </para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to set or remove.</param>
            <param name="value">The value to set.</param>
            <param name="singleToArray">If <see langword="true"/> and <paramref name="value"/> contains exactly one element,
            the array will be stored as a simple PDF name object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetRealValueArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the array associated with the specified key, resolving any references to indirect PDF objects.
            Optionally converts a single value to an array.
            <para>Throws an exception if the value does not exists.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetRealValueArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Object[]@,System.Boolean)">
            <summary>
            Tries to get the array associated with the specified key, resolving any references to indirect PDF objects.
            Optionally converts a single value to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetDictArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects associated with the specified key.
            Optionally converts a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetDictArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.IPdfDictHolder[]@,System.Boolean)">
            <summary>
            Tries to get the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> objects associated with the specified key.
            Optionally converts a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> array.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetRefArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Boolean)">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> structures associated with the specified key.
            Optionally converts a single value to an array.
            <para>Throws an exception if the value does not exist or cannot be converted to an array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> structures.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="singleToArray">Specifies whether a single value should be converted to an array.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetRefArray(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfRef[]@,System.Boolean)">
            <summary>
            Tries to get the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> structures associated with the specified key.
            Optionally converts a single PDF reference value to an array.
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to an array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> structures.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="singleToArray">Specifies whether a single value should be converted to an array.</param>
            <returns>True if the key was found and the value could be converted to an array, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetDateTime(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime})">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> object associated with the specified key
            (in a PDF a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> should be represented as a PDF string).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetDateTime(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.PdfDateTime@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> object associated with the specified key
            (in a PDF a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> should be represented as a PDF string).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetDeviceRGBColor(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.Color)">
            <summary>
            Gets the RGB <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF an RGB <see cref="T:System.Drawing.Color"/> should be represented as an array of 3 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetDeviceRGBColor(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.Color@)">
            <summary>
            Tries to get the RGB <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF an RGB <see cref="T:System.Drawing.Color"/> should be represented as an array of 3 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.Color"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.Color"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetColor(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.Color)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetColor(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Drawing.Color})">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetColor(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.Color@)">
            <summary>
            Tries to get the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.Color"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.Color"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetRect(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.RectangleF)">
            <summary>
            Gets the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetRect(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Drawing.RectangleF})">
            <summary>
            Gets the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetRect(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Drawing.RectangleF@)">
            <summary>
            Tries to get the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.RectangleF"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.RectangleF"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Common.Offsets)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF a <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{GrapeCity.Documents.Common.Offsets})">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Common.Offsets@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Numerics.Matrix3x2)">
            <summary>
            Gets the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.GetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Nullable{System.Numerics.Matrix3x2})">
            <summary>
            Gets the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,System.Numerics.Matrix3x2@)">
            <summary>
            Tries to get the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Numerics.Matrix3x2"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetPdfValueObject(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfObject@)">
            <summary>
            Assumes that <paramref name="key"/> is a reference to another object,
            returns referenced object, if referenced object is a PdfRefObject itself
            then reference resolved and returned referenced object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetPdfStreamObject(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfStreamObject@)">
            <summary>
            Assumes that <paramref name="key"/> is a reference to another object,
            returns referenced object, if referenced object is a PdfRefObject itself
            then reference resolved and returned referenced object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictHolderExt.TryGetRef(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder,System.String,GrapeCity.Documents.Pdf.Spec.PdfRef@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> associated with the specified key.
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>.
            </summary>
            <param name="pdh">The current PDF dictionary holder.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key, or null if the key was not found.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>, false otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfObject">
            <summary>
            Base abstract class for objects representing PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfObject.ObjID">
            <summary>
            The object's ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> class.
            </summary>
            <param name="objID">The object's ID.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes the object to the PDF stream, assumes that object was already started with BeginObj() method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObject.GetValue">
            <summary>
            Returns value of this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfObject`1">
            <summary>
            Base abstract generic class for all PDF objects.
            </summary>
            <typeparam name="T">The type of underlying value.</typeparam>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfObject`1.Value">
            <summary>
            The object's value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObject`1.#ctor(GrapeCity.Documents.Pdf.PdfObjID,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject`1"/> class.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObject`1.GetValue">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject">
            <summary>
            Represents the PDF Bool object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBoolObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfIntObject">
            <summary>
            Represents the PDF Int object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIntObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIntObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfFloatObject">
            <summary>
            Represents the PDF Number object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfFloatObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfFloatObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject">
            <summary>
            Represents the PDF String object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNullObject">
            <summary>
            Represents the PDF Null object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNullObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNullObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNullObject.GetValue">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject">
            <summary>
            Represents the PDF Name object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNameObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject">
            <summary>
            Represents the PDF Reference object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRefObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfRef)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRefObject.GetValue">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfRefObject.Doc">
            <summary>
            Gets the owning <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject">
            <summary>
            Represents the PDF Array object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArrayObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject">
            <summary>
            Represents the PDF Dictionary object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDictObject.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> type.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase">
            <summary>
            For internal use.
            Base class for PDF streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.EncryptionStreamType">
            <summary>
            The type of PDF stream in context of encryption.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> class.
            </summary>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetStream">
            <summary>
            For internal use.
            Returns the <see cref="T:GrapeCity.Documents.Pdf.PdfMemoryStream"/> containing data of this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>
            NOTE! Image filters: CCITTFaxDecode, JBIG2Decode, DCTDecode, JPXDecode are NOT applied,
            if these filters used somewhere *within* Filter array (not the last in this array) then
            NotImplemented exception occurs.
            NOTE! Returned stream should be disposed after usage.
            NOTE! This method affects <see cref="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position"/> of <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/> object producing this
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetUndecodedStream">
            <summary>
            For internal use.
            Returns the <see cref="T:System.IO.MemoryStream"/> containing data of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>
            WITHOUT applying filters.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDetachedStreamObject">
            <summary>
            Represents the PDF Stream detached from a PDF document, created when
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> is cloned during document merge operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDetachedStreamObject.#ctor(System.Byte[],GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> type.
            </summary>
            <param name="data">The stream data.</param>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject">
            <summary>
            Represents the PDF Stream object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Offset">
            <summary>
            The offset of the object's content in the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Int64,GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> type.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.</param>
            <param name="offset">The offset of the object in the document stream.</param>
            <param name="objID">The object's ID.</param>
            <param name="value">The object's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.IsCrossReferenceStream">
            <summary>
            Returns true if this object is a Cross-Reference stream object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfTypeName">
            <summary>
            Specifies the string constants defining the names of PDF types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Bool">
            <summary>The Boolean type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.NullableBool">
            <summary>The nullable Boolean type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Int">
            <summary>The integer type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.String">
            <summary>The string type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Name">
            <summary>The name type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Float">
            <summary>The floating point type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.NullableFloat">
            <summary>The nullable floating point type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Dict">
            <summary>The dictionary type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Array">
            <summary>The array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.DateTime">
            <summary>The DateTime type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.IntArray">
            <summary>The integer array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.FloatArray">
            <summary>The floating point array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.BoolArray">
            <summary>The Boolean array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.NameArray">
            <summary>The name array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.StringArray">
            <summary>The string array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.RealObjArray">
            <summary>The object array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.DictArray">
            <summary>The dictionary array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.ReferenceArray">
            <summary>The reference array type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.DeviceRGBColor">
            <summary>The device RGB color type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Color">
            <summary>The color type.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfTypeName.Reference">
            <summary>The reference type.</summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNull">
            <summary>
            Represents the PDF Null type.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNull.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfString">
            <summary>
            Represents the PDF String type.
            </summary>
            <remarks>
            Technically a PDF string is an array of bytes. Its interpretation depends on the context.
            The PDF specification describes the following types:
            <list type="bullet">
            <item>byte string</item>
            <item>text string</item>
            <item>unicode string</item><description>Starts with Unicode Prefix, two bytes 254 and 254.</description>
            <item>etc.</item><description>See more details in the PDF specification.</description>
            </list>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The initial value</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The initial value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.AsString">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object to the unicode string.
            </summary>
            <returns>The string representing this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfRef">
            <summary>
            Represents a PDF Reference type.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfRef.RefID">
            <summary>
            The ID of the referenced PDF object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfRef.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns the current object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.#ctor(GrapeCity.Documents.Pdf.PdfObjID,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> object.
            </summary>
            <param name="refID">The ID of referenced PDF object.</param>
            <param name="doc">The parsed <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.TryGetReferencedObj(GrapeCity.Documents.Pdf.Spec.PdfObject@)">
            <summary>
            Tries to get the referenced <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> references a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/>,
            all references in the chain are resolved until the actual referenced object is found.
            </summary>
            <param name="obj">OUT: the referenced object, or null if it could not be found.</param>
            <returns>True if the referenced object was found (then <paramref name="obj"/> contains that object),
            or false if the referenced object could not be found.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.IsObjReferenced(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Returns a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>
            references an object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.GetReferencedObj">
            <summary>
            Gets the referenced <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/>.
            If the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> references a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/>,
            all references in the chain are resolved until the actual referenced object is found.
            </summary>
            <returns>The actual referenced object, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.TryGetValue(System.Object@)">
            <summary>
            Tries to get the referenced value, returns false if a value cannot be returned.
            <para>
            In the output <paramref name="value"/> parameter an object of one of the following types can be returned:
            <list type="bullet">
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/></item>
            <item><see cref="T:System.Boolean"/></item>
            <item><see cref="T:System.Int32"/></item>
            <item><see cref="T:System.Single"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/></item>
            </list>
            </para>
            </summary>
            <returns>True if the value was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.GetValue">
            <summary>
            Returns the referenced value, null indicates that reference can not be resolved.
            If the value was found, it can be of one of the following types:
            <list type="bullet">
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/></item>
            <item><see cref="T:System.Boolean"/></item>
            <item><see cref="T:System.Int32"/></item>
            <item><see cref="T:System.Single"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder"/></item>
            <item><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/></item>
            </list>
            </summary>
            <returns>The referenced value, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.TryGetReferencedDict(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder@)">
            <summary>
            Tries to get the referenced PDF dictionary, returns false if a value cannot be returned.
            </summary>
            <param name="obj">OUT: the referenced dictionary, or null.</param>
            <returns>True if the referenced dictionary was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.TryGetReferencedArray(GrapeCity.Documents.Pdf.Spec.IPdfArrayHolder@)">
            <summary>
            Tries to get the referenced PDF array, returns false if a value cannot be returned.
            </summary>
            <param name="obj">OUT: the referenced array, or null.</param>
            <returns>True if the referenced array was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.TryGetReferencedStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject@)">
            <summary>
            Tries to get the referenced PDF stream, returns false if a value cannot be returned.
            </summary>
            <param name="obj">OUT: the referenced stream , or null.</param>
            <returns>True if the referenced stream was found, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfRef.Parser">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/> object used by the owner <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.AreRefsSame(GrapeCity.Documents.Pdf.Spec.PdfRef,GrapeCity.Documents.Pdf.Spec.PdfRef)">
            <summary>
            Checks whether two <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> objects are the same.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfArray">
            <summary>
            Represents a PDF Array type object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to encode as array.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDict">
            <summary>
            Represents a PDF Dictionary type object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.StandardFonts">
            <summary>
            Contains 14 Standard PDF fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Helvetica">
            <summary>
            Helvetica Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaItalic">
            <summary>
            Helvetica Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaBold">
            <summary>
            Helvetica Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaBoldItalic">
            <summary>
            Helvetica Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Times">
            <summary>
            Times Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesItalic">
            <summary>
            Times Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesBold">
            <summary>
            Times Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesBoldItalic">
            <summary>
            Times Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Courier">
            <summary>
            Courier Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierItalic">
            <summary>
            Courier Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierBold">
            <summary>
            Courier Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierBoldItalic">
            <summary>
            Courier Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Symbol">
            <summary>
            Symbol Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats">
            <summary>
            Wingding Regular font.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.StandardFonts.FontInfo">
            <summary>
            Contains information about PDF standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.FontName">
            <summary>
            The name of standard font: "Times-Roman", "Helvetica-Oblique"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Type1Font">
            <summary>
            The Type1 font representing this standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Font">
            <summary>
            The <see cref="T:GrapeCity.Documents.Text.Font"/> representing this standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.FontTables">
            <summary>
            The <see cref="T:GrapeCity.Documents.Text.FontTables"/> created from <see cref="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Font"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length1">
            <summary>
            The length in bytes of the clear-text portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length2">
            <summary>
            The length in bytes of the encrypted portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length3">
            <summary>
            The length in bytes of the fixed-content portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Data">
            <summary>
            The font's data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.FromStream(System.IO.Stream)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.StandardFonts.Type1Font"/> object from stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPdfStream">
            <summary>
            Represents a PDF stream object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfStream.FilterType">
            <summary>
            Gets format of the data in underlying stream, the name of the filter which should be used to decode data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfStream.DecodeParams">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> providing additional decode parameters used if <see cref="P:GrapeCity.Documents.Pdf.IPdfStream.FilterType"/> is not Raw,
            can be null.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfStream.Stream">
            <summary>
            Gets an underlying <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPdfStreamProvider">
            <summary>
            Provides access to a <see cref="T:GrapeCity.Documents.Pdf.IPdfStream"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfStreamProvider.GetPdfStream">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.IPdfStream"/> object containing stream data.
            Note! Returned object should be disposed after usage.
            Note! Returned <see cref="P:GrapeCity.Documents.Pdf.IPdfStream.Stream"/> should be used for reading only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfStreamProvider.GetStream">
            <summary>
            Returns a <see cref="T:System.IO.Stream"/> object containing stream data.
            Note! Returned object should be disposed after usage.
            Note! Returned object should be used for reading only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfStreamProvider.CloneForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Creates a clone of this <see cref="T:GrapeCity.Documents.Pdf.IPdfStreamProvider"/>, to insert into
            destination document when GcPdfDocument.MergeWithDocument() is called.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPdfStreamProviderExt">
            <summary>
            Provides extension and utility methods for <see cref="T:GrapeCity.Documents.Pdf.IPdfStreamProvider"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfStreamProviderExt.IsSame(GrapeCity.Documents.Pdf.IPdfStreamProvider,GrapeCity.Documents.Pdf.IPdfStreamProvider)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.IPdfStreamProvider"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfFileStream">
            <summary>
            Represents PDF file stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfFileStream.FilterType">
            <summary>
            The format of the data in the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfFileStream.DecodeParams">
            <summary>
            The decode params for <see cref="F:GrapeCity.Documents.Pdf.PdfFileStream.FilterType"/>, can be null.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfFileStreamProvider">
            <summary>
            Represents PDF file stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfFileStreamProvider.FileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfMemoryStream">
            <summary>
            Represents PDF memory stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfMemoryStream.FilterType">
            <summary>
            The format of the data in the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfMemoryStream.DecodeParams">
            <summary>
            The decode params for <see cref="F:GrapeCity.Documents.Pdf.PdfMemoryStream.FilterType"/>, can be null.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfMemoryStreamProvider">
            <summary>
            Represents PDF memory stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfMemoryStreamProvider.FilterType">
            <summary>
            The format of the data in the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfMemoryStreamProvider.DecodeParams">
            <summary>
            The decode parameters for <see cref="F:GrapeCity.Documents.Pdf.PdfMemoryStreamProvider.FilterType"/>, can be null.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfMemoryStreamProvider.Data">
            <summary>
            The underlying data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfStreamProvider">
            <summary>
            Implements <see cref="T:GrapeCity.Documents.Pdf.IPdfStreamProvider"/> over standard <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfStreamProvider.Stream">
            <summary>
            The underlying stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfWrapperStream">
            <summary>
            Wrapper around standard <see cref="T:System.IO.Stream"/> object.
            Note! <see cref="T:GrapeCity.Documents.Pdf.PdfWrapperStream"/> does NOT dispose underlying <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfWrapperStream.FilterType">
            <summary>
            The format of the data in the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfWrapperStream.DecodeParams">
            <summary>
            The decode params for <see cref="F:GrapeCity.Documents.Pdf.PdfWrapperStream.FilterType"/>, can be null.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfWrapperStream.BaseStream">
            <summary>
            The underlying <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfWrapperStream.OwnsBaseStream">
            <summary>
            Indicates whether <see cref="F:GrapeCity.Documents.Pdf.PdfWrapperStream.BaseStream"/> will be disposed when this <see cref="T:GrapeCity.Documents.Pdf.PdfWrapperStream"/> disposed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ByteRange">
            <summary>
            Represents the range of bytes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RangeStream">
            <summary>
            Defines the stream that allows accessing some range within another stream,
            does not support writing.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrCollection.OnChanged">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.Attr">
            <summary>
            Represents a base structure attribute.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.Attr.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision">
            <summary>
            Contains a structure attribute's (<see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object) class name and its revision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> class.
            </summary>
            <param name="attrClsName">The attribute class name.</param>
            <param name="revision">The revision of attribute, 0 by default.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.AttrClsName">
            <summary>
            Gets the attribute class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.Revision">
            <summary>
            Gets or sets the attribute's revision.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection.Add(System.String)">
            <summary>
            Adds a attribute class to the collection with default zero revision.
            </summary>
            <param name="attrCls">The attribute class to add.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> object.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection.Owner">
            <summary>
            Gets the owning <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrRevision">
            <summary>
            Represents a structure attribute (<see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object) and its revision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevision.#ctor(GrapeCity.Documents.Pdf.Structure.Attr,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> class.
            </summary>
            <param name="attr">The underlying <see cref="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Attr"/> object.</param>
            <param name="revision">The revision of the attribute, 0 by default.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Attr">
            <summary>
            Gets the underlying <see cref="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Attr"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Revision">
            <summary>
            Gets or sets the attribute's revision.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection.Add">
            <summary>
            Adds an empty attribute to the collection with default zero revision.
            </summary>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection.Add(GrapeCity.Documents.Pdf.Structure.Attr)">
            <summary>
            Adds an attribute to the collection with default zero revision.
            </summary>
            <param name="attr">The <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object to add.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> object.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection.Owner">
            <summary>
            Gets the owning <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.IContentItem">
            <summary>
            Common interface for objects which can be added to a document's Structure Tree
            as content items, these include <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>, <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.IContentItem.DocID">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.IContentItem.StructParent">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.IContentItem.StructParents">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ContentItemLinkCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ContentItemLinkCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink">
            <summary>
            Abstract base class for types representing a content item in a PDF document's structure tree.
            Each <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> is associated with a document object 
            that supports the <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> interface, typically it is <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>, <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ContentItemLink.GetContentItem">
            <summary>
            Returns the document's object associated with the <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/>,
            it can be Page, FormXObject, AnnotationBase, Image etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ContentItemLink.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLinkCollection"/> collection containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ContentItemLink.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink">
            <summary>
            Represents a content item specified via MCID and owning a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.McidContentItemLink.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink"/> class.
            </summary>
            <param name="mcid">The identificator of a Marked Content Sequence in the page specified by <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McidContentItemLink.MCID">
            <summary>
            Gets the identificator of a Marked Content Sequence in the page specified by <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.RContentItemLink">
            <summary>
            Abstract base class for <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> representing MCR and OBJR PDF objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.RContentItemLink.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this content item is located.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink">
            <summary>
            Represents a Marked-Content Sequence as a Content Item in a PDF structure tree (MCR PDF object).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.FormXObject">
            <summary>
            Gets or sets the content stream containing the marked-content sequence.
            This entry should be present only if the marked-content sequence resides in a content stream other
            than the content stream for the page - for example,
            in a form XObject or an annotation’s appearance stream.
            If this entry is absent, the marked-content sequence is contained in the content stream of the page
            identified by <see cref="T:GrapeCity.Documents.Pdf.Page"/>
            (either in the marked-content reference dictionary or in the parent structure element).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.ContentStreamOwner">
            <summary>
            Gets or sets the object owning the content stream identified by the <see cref="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.FormXObject"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.MCID">
            <summary>
            Gets or sets the marked-content identifier of the marked-content sequence within its content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink">
            <summary>
            Represents a custom PDF object as a Content Item in a PDF structure tree (OBJR PDF object).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.#ctor(GrapeCity.Documents.Pdf.Structure.IContentItem)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> class.
            </summary>
            <param name="contentItem">The associated <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.SetObj(GrapeCity.Documents.Pdf.Structure.IContentItem)">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.Obj"/> without firing an event.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.Obj">
            <summary>
            Gets or sets the referenced object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.MarkInfo">
            <summary>
            Represents a mark information dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.Marked">
            <summary>
            Gets or sets a flag indicating whether the document conforms to Tagged PDF conventions.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.UserProperties">
            <summary>
            Gets or sets a flag indicating the presence of structure elements that contain user properties attributes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.Suspects">
            <summary>
            Gets or sets a flag indicating the presence of tag suspects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructElementCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElementCollection.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElementCollection.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElementCollection.InsertItem(System.Int32,GrapeCity.Documents.Pdf.Structure.StructElement)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElementCollection.SetItem(System.Int32,GrapeCity.Documents.Pdf.Structure.StructElement)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElementCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.IStructElement"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructElement">
            <summary>
            Represents a PDF tag (structure element) in a document's structure tree.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> class.
            </summary>
            <param name="type">The element's type.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElementCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type">
            <summary>
            Gets or sets the structure type, 
            which is a string identifying the nature 
            of the structure element and its role within the document,
            such as chapter, paragraph, or footnote.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.StructTreeRoot">
            <summary>
            Gets the root <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.StructTreeRoot"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ID">
            <summary>
            Gets or sets the element identifier, a byte array designating this structure element.
            The value must be unique among all elements in the document’s structure hierarchy.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object used as the default page
            for the content items owned by this <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasContentItems">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.ContentItems"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ContentItems">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasChildren">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Children"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Children">
            <summary>
            Gets the collection of child <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasAttrs">
            <summary>
            Gets a value indicating whether <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Attrs"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Attrs">
            <summary>
            Gets the collection of attributes associated with this structure element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasAttrClasses">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.AttrClasses"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AttrClasses">
            <summary>
            Gets the collection of attribute classes associated with this element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Revision">
            <summary>
            Gets or sets the current revision number of this structure element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Title">
            <summary>
            Gets or sets the title of the structure element, 
            which is a text string representing it in human-readable form.
            The title should characterize the specific structure element, such as Chapter 1,
            rather than merely a generic element type, such as Chapter.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AlternateDescription">
            <summary>
            Gets or sets the alternate description of the structure element and its children in human-readable form,
            which is useful when extracting a document’s content in support of accessibility to users with
            disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ExpandedAbbreviation">
            <summary>
            Gets or sets the expanded form of an abbreviation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ActualText">
            <summary>
            Gets or sets a text that is an exact replacement for the structure element and its children.
            This replacement text (which should apply to as small a piece of content as possible)
            is useful when extracting a document’s content in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes">
            <summary>
            The standard structure types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.Artifact">
            <summary>
            Artifact.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements">
            <summary>
            Grouping elements are used solely to group other structure elements;
            they are not directly associated with content items.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Document">
            <summary>
            Document. A complete document.
            This is the root element of any structure tree containing multiple parts or multiple articles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Part">
            <summary>
            Part. A large-scale division of a document.
            This type of element is appropriate for grouping articles or sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Art">
            <summary>
            A relatively self-contained body of text constituting a single narrative or exposition.
            Articles should be disjoint; that is, they should not contain other articles as constituent elements.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.IStructElement">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot">
            <summary>
            Represents the logical structure of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot._unresolvedObjrLinks">
            <summary>
            Used while loading and contains <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> objects
            which reference an objects not loaded during document parsing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.RoleMap">
            <summary>
            Gets the dictionary that maps the names of structure types used in a document to their approximate equivalents in the set of standard structure types.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Children">
            <summary>
            Gets the collection of nested <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ClassMap">
            <summary>
            Gets the dictionary that maps name objects designating attribute classes to the corresponding
            attribute objects or arrays of attribute objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeItem.ContentItem">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> associated with this item,
            it can be Page, AnnotationBase etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeItem.Key">
            <summary>
            Represents the key in ParentTree dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ObjParentTreeItem">
            <summary>
            Object Reference content item.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ObjParentTreeItem.StructElement">
            <summary>
            The parent <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object used if <b>whole</b> object is a content item,
            referenced via StructParent entry in ContentObj.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.McidParentTreeItem">
            <summary>
            Marked Content item.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.McidParentTreeItem.MCIDs">
            <summary>
            Associates MCID with <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary.SetStructParentToContentItems">
            <summary>
            Assigns StructParent and StructParents to linked <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary.Compare(GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary)">
            <summary>
            Compares this object with another, returns true if equals.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary.Build(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Structure.StructElementCollection)">
            <summary>
            Builds <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeObj"/> on the base of <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeObj.StructTreeRoot">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeObj.OldDictionary">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary"/> created immediate after document's loading.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeObj.NewDictionary">
            <summary>
            The actual <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ParentTreeDictionary"/> created when document is saved.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo">
            <summary>
            Represents hit test info in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Pos">
            <summary>
            The logical position in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Bounds">
            <summary>
            The bounds of <see cref="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Pos"/> on the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.IsInside">
            <summary>
            Indicates whether the hit test location is inside the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            If <b>false</b>, the position nearest to the text's edge is returned.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextAttrs">
            <summary>
            Defines text formatting attributes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.FontSize">
            <summary>
            Gets the font size.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode">
            <summary>
            Gets the PDF text rendering mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.StrokeColor">
            <summary>
            Gets the stroke color used if <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke"/>, <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip"/>
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Stroke"/> or <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.StrokeClip"/>.
            <para>
            Note that this can return null if the stroke method cannot be converted to a single color
            (e.g. if the stroke is specified as a pattern).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.NonstrokeColor">
            <summary>
            Gets the non-stroke (fill) color used if <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill"/>, <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillClip"/>
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke"/> or <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip"/>.
            <para>
            Note that this can return null if the stroke method cannot be converted to a single color
            (e.g. if the stroke is specified as a pattern).
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextChar">
            <summary>
            Represents a single character in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            <para>
            Note that an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> can be represented by several UTF-16 character codes,
            e.g. some Unicode ranges use two UTF-16 codes to represent a single character.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextChar.Index">
            <summary>
            Gets the start index of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the text of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextChar.Length">
            <summary>
            Gets the length of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> (the count of UTF-16 characters that represent it).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextLine">
            <summary>
            Represents a single continuous line of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.Paragraph">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> object that owns this line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.RunFragments">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetCoords(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetCoords">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetPoints(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The array of points specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetPoints">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The array of points specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetText(System.Int32,System.Int32)">
            <summary>
            Returns the text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The text of specified range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.FindTextCallback">
            <summary>
            Defines the callback method used in text search (see <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)"/>).
            </summary>
            <param name="fp">The position of the found instance.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextMap">
            <summary>
            Represents the text map of a page or of a portion of a page.
            Provides methods for text searching, hit testing etc.
            <para>
            The pixel values used by the text map's methods and properties are determined
            by the X and Y resolution passed to the <see cref="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)"/>
            method to create the text map.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextMap.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object producing this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextMap.Paragraphs">
            <summary>
            Gets the list of text paragraphs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetCoords(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the coordinates of a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> containing the text coordinates.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetPoints(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the array of points defining a polygon with coordinates of a 
            <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>An array of points defining the polygon of the fragment on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetText(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the text of a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.
            </summary>
            <param name="br">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>The text of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetText">
            <summary>
            Gets the whole text represented by this map.
            </summary>
            <returns>The map text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.HitTest(System.Single,System.Single)">
            <summary>
            Performs hit testing on the map.
            <para>
            This method accepts a pixel location relative to the top left corner of the page,
            and provides info about the text in that location.
            </para>
            </summary>
            <param name="x">The X pixel location relative to the top left corner of the page.</param>
            <param name="y">The Y pixel location relative to the top left corner of the page.</param>
            <returns><see cref="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo"/> containing the hit test result.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetWord(GrapeCity.Documents.Pdf.TextMap.MapPos,System.Int32@,System.Int32@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Gets the info about a word at a specified position in a line.
            </summary>
            <param name="pos">A <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying a position in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="start">OUT: the start index of the word in the line.</param>
            <param name="length">OUT: the length of the word in characters.</param>
            <param name="bounds">OUT: the geometric bounds of the word.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)">
            <summary>
            Performs a text search within this text map.
            The <paramref name="callback"/> is called for each found instance.
            </summary>
            <param name="tp">A <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> specifying the search parameters.</param>
            <param name="callback">The callback method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragment(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            within a specified range (from <paramref name="startPos"/> to <paramref name="endPos"/>).
            </summary>
            <param name="startPos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the start of the range.</param>
            <param name="endPos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the end of the range.</param>
            <param name="range">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the range's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragmentToPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            from the start of the page to <paramref name="pos"/>.
            </summary>
            <param name="pos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the end of the range.</param>
            <param name="range">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the range's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragmentFromPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            from <paramref name="pos"/> to the end of the page.
            </summary>
            <param name="pos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the start of the range.</param>
            <param name="range">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the range's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragment(GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text of the whole page.
            </summary>
            <param name="range">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text on the page.</param>
            <param name="text">OUT: the range's text.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph">
            <summary>
            Represents a paragraph of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.TextMap">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> containing this paragraph.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> containing this paragraph.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs">
            <summary>
            Gets the list of text runs that comprise this paragraph.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetText">
            <summary>
            Returns the paragraph text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetCoords">
            <summary>
            Returns a quadrilateral that specifies the bounds
            of this paragraph (relative to the top left corner of the page).
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> that specifies the bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetPoints">
            <summary>
            Returns the list of point arrays that specify the bounds
            of text fragments in this paragraph
            (relative to the top left corner of the page).
            </summary>
            <returns>The list of point arrays that specify the bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetTextRuns(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the first and last <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> objects in the <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> collection of this paragraph
            that contain a specified fragment in this paragraph's whole text (as returned by <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetText"/>).
            The fragment is specified by the starting index of its first character in the paragraph text, 
            and the total number of characters in the fragment.
            </summary>
            <param name="startIndex">The zero-based index of the fragment's starting character in this paragraph's text.</param>
            <param name="length">The total number of characters in the fragment.</param>
            <param name="firstRunIndex">OUT: The index of the run in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> that contains the beginning of the specified text fragment.</param>
            <param name="indexInFirstRun">OUT: The index of the text fragment's first character in the run at <paramref name="firstRunIndex"/> position in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/>.</param>
            <param name="lastRunIndex">OUT: The index of the run in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> that contains the end of the specified text fragment.</param>
            <param name="indexInLastRun">OUT: The index of the text fragment's last character in the run at <paramref name="lastRunIndex"/> position in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/>.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRun">
            <summary>
            Represents a portion of a text paragraph with the same formatting,
            possibly spanning several lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRun.Paragraph">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> that contains this run.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRun.Attrs">
            <summary>
            Gets the formatting attributes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRun.GetText">
            <summary>
            Returns the text of this run.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment">
            <summary>
            Represents a fragment of a text run that resides on a single text line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.Line">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> that contains this run fragment.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.Run">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> that contains this run fragment.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.GetText">
            <summary>
            Returns the text of this run fragment.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragmentExt">
            <summary>
            Provides extension methods for the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRunFragmentExt.GetPoints(GrapeCity.Documents.Pdf.TextMap.ITextRunFragment)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.
            </summary>
            <param name="runFragment">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.</param>
            <returns>The array of points specifying the coordinates of this run fragment on the page.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.MapPos">
            <summary>
            Represents a logical position in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.LineIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.CharIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.IsTrailing">
            <summary>
            Indicates whether the hit test location is at the leading or the trailing
            side of the character.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.MapPos.PosInLine">
            <summary>
            Gets the position within the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> depending on <see cref="F:GrapeCity.Documents.Pdf.TextMap.MapPos.IsTrailing"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment">
            <summary>
            Represents a range of characters in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.LineIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex">
            <summary>
            The index of the first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Length">
            <summary>
            The number of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>s in this fragment.
            A value of <b>-1</b> indicates that this fragment includes all characters
            from <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex"/> to the end of the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Equals(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.op_Equality(GrapeCity.Documents.Pdf.TextMap.TextLineFragment,GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Tests whether two specified <see cref='T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment'/> objects are equivalent.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.op_Inequality(GrapeCity.Documents.Pdf.TextMap.TextLineFragment,GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Tests whether two specified <see cref='T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment'/> objects are NOT equivalent.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment">
            <summary>
            Represents a fragment of text in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.#ctor(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> to add to <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.AreSame(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Checks whether two <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> objects are the same.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont">
            <summary>
            Base abstract class representing CID-keyed font in PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.m_BaseFont">
            <summary>
            The PostScript name of the CIDFont.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.CIDSystemInfo">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDSystemInfo"/> object
            defines the character collection of the CIDFont.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.m_Descriptor">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object describing the CIDFont’s default metrics other than its glyph widths.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.DW">
            <summary>
            The default width for glyphs in the CIDFont, default value is 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.W">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont.WidthList"/> list containing width for individual glyphs.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.DW2">
            <summary>
            The default vertical metrics.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.W2">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont.Width2List"/> list containing vertical metrics for individual glyphs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.BaseFont">
            <summary>
            Gets the PostScript name of the CIDFont.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.Descriptor">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object describing the CIDFont’s default metrics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.IsEmbedded">
            <summary>
            Gets a value indicating whether the font is embedded.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CIDFont.GetNativeFont">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Text.Font"/> object created on the base of embedded data.
            Note! Method returns null if font is NOT embedded.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Text.Font"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CIDFont.GetFontDescriptor">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object defining font attributes.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.DefaultGlyphVerticalMetrics">
            <summary>
            Defines default vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics">
            <summary>
            Defines vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.WidthList">
            <summary>
            Collection of horizontal glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.Width2List">
            <summary>
            Collection of vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFontType0">
            <summary>
            Represents a CID-keyed font containing glyph descriptions based on the Adobe Type 1 font format.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFontType2">
            <summary>
            Represents a CID-keyed font containing glyph descriptions based on the TrueType font format
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFontType2.CIDToGIDMap">
            <summary>
            A table defines mapping from CID (PDF character code) to glyph index,
            if this value is null then identity mapping is used <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFontType2.PdfIdentityMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFontType2.PdfCIDToGIDMap.Mapping">
            <summary>
            The mapping table.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDSystemInfo">
            <summary>
            Defines character collection assumed by the CIDFont.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.AdobeIdentity">
            <summary>
            Defines Adobe-Identity collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.AdobeUCS">
            <summary>
            Defines Adobe-UCS collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Registry">
            <summary>
            Gets a string identifying the issuer of the character collection—for example, Adobe.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Ordering">
            <summary>
            Gets a string that uniquely names the character collection within the specified registry for example, Japan1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Supplement">
            <summary>
            Gets the supplement number of the character collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap">
            <summary>
            Represents a CMap table.
            <para>
            A CMap specifies the mapping from character codes to character selectors,
            it is used to extract Unicode text from PDF documents.
            In most cases CMaps are fully embedded into the PDF document.
            But in rare cases a CMap in a PDF is specified by a PDF name object,
            where this name identifies a predefined CMap that should be known to the PDF processor.
            </para>
            GrapeCity.Documents.Pdf contains the following predefined CMaps:
            <list type="bullet">
            <item>90ms-RKSJ-H</item>
            <item>90ms-RKSJ-V</item>
            <item>90msp-RKSJ-H</item>
            <item>90msp-RKSJ-V</item>
            <item>Identity-H</item>
            <item>Identity-V</item>
            <item>UniCNS-UCS2-H</item>
            <item>UniCNS-UCS2-V</item>
            <item>UniGB-UCS2-H</item>
            <item>UniGB-UCS2-V</item>
            <item>UniJIS-UCS2-H</item>
            <item>UniJIS-UTF16-H</item>
            <item>UniJIS-UTF16-V</item>
            <item>UniKS-UCS2-H</item>
            <item>UniKS-UCS2-V</item>
            </list>
            The optional GrapeCity.Documents.Pdf.Resources package contains many other
            less common predefined CMap files.
            See <see cref="T:GrapeCity.Documents.Pdf.ICMapProvider"/> and <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CMapProvider"/> for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.Compile(System.IO.Stream,System.IO.Stream,System.Boolean)">
            <summary>
            For internal use.
            Converts the text CMap file into binary form.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.LoadBinary(System.IO.Stream,System.Boolean)">
            <summary>
            For internal use.
            Loads CMap from binary format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> from a specified stream.
            <para>See the PDF spec for the description of the CMap format.</para>
            If <paramref name="compressed"/> is true then the content of the stream will be
            decompressed using <see cref="T:System.IO.Compression.DeflateStream"/>.
            <para>This method will throw an exception if the stream content has unknown or unsupported format.</para>
            </summary>
            <param name="stream">The stream containing the CMap definition.</param>
            <param name="compressed">Indicates whether the stream content is compressed and <see cref="T:System.IO.Compression.DeflateStream"/> should be used to decompress.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.Load(System.String,System.Boolean)">
            <summary>
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> from a specified file.
            <para>See the PDF spec for the description of the CMap format.</para>
            If <paramref name="compressed"/> is true then the content of the file will be
            decompressed using <see cref="T:System.IO.Compression.DeflateStream"/>.
            <para>This method will throw an exception if the file content has unknown or unsupported format.</para>
            </summary>
            <param name="fileName">The file containing the CMap definition.</param>
            <param name="compressed">Indicates whether the stream content is compressed and <see cref="T:System.IO.Compression.DeflateStream"/> should be used to decompress.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMapBase">
            <summary>
            The base abstract class for classes representing CMaps.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CMapType">
            <summary>
            The /CMapType entry
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase._name">
            <summary>
            The name of CMap.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CIDSystemInfo">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDSystemInfo"/> defines the character collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.WMode">
            <summary>
            A code that determines the writing mode for any CIDFont with which this CMap is combined.
            The possible values are 0 for horizontal and 1 for vertical. Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRanges">
            <summary>
            An array of <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRange"/> objects defines the chars for specified range.
            CodeSpaceRanges[0] defines one byte chars
            CodeSpaceRanges[1] defines two byte chars
            etc
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.ReadPdfCode(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,System.UInt32@)">
            <summary>
            Used to enumerate PDF string, sequentially reads PDF chars from PDF string
            using information specified in begincodespacerange / endcodespacerange sections.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Returns UTF-16 string for specified code obtained from PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.TryGetCID(System.UInt32,System.UInt32@)">
            <summary>
            Converts PDF code to CID.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.Name">
            <summary>
            Gets or sets the CMap name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.IsPredefined">
            <summary>
            Gets a value indicating whether the CMap is predefined and is specified by name in a PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.IsUnknown">
            <summary>
            Gets a value indicating whether the CMap is predefined but unknown to GcPdf.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CMapParser.Doc">
            <inheritdoc/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CMapParser.Range.CharMapping">
            <summary>
            The mapping defined via beginbfchar/endbfchar and beginbfrange/endbfrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CMapParser.Range.CidMapping">
            <summary>
            The mapping defined via begincidchar/endcidchar and begincidrange/endcidrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CMapParser.Range.NotDefMapping">
            <summary>
            The mapping defined via beginnotdefchar/endnotdefchar and beginnotdefrange/endnotdefrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.Range.Start">
            <summary>
            The start of the range.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.Range.Count">
            <summary>
            The length of the range.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRange">
            <summary>
            Defines the range of the codes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRange.CharMapping">
            <summary>
            The mapping defined via beginbfchar/endbfchar and beginbfrange/endbfrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRange.CidMapping">
            <summary>
            The mapping defined via begincidchar/endcidchar and begincidrange/endcidrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapBase.CodeSpaceRange.NotDefMapping">
            <summary>
            The mapping defined via beginnotdefchar/endnotdefchar and beginnotdefrange/endnotdefrange sections.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.UnknownCMap">
            <summary>
            Represents unknown Standard CMap defined in PDF using PdfName object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramType.Type1">
            <summary>
            Type 1 font program, in the original (noncompact) format described in Adobe Type 1 Font Format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramType.TrueType">
            <summary>
            TrueType font program, as described in the TrueType Reference Manual.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramType.Type1C">
            <summary>
            Type 1-equivalent font program represented in the Compact Font Format (CFF),
            as described in Adobe Technical Note #5176, The Compact Font Format Specification.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramType.CIDFontType0C">
            <summary>
            Type 0 CIDFont program represented in the Compact Font Format (CFF),
            as described in Adobe Technical Note #5176, The Compact Font Format Specification.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramType.OpenType">
            <summary>
            OpenType font program, as described in the OpenType Font Specification (see the Bibliography).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase">
            <summary>
            Base class for classes defining PDF embedded font program, see PDF1.7 (5.8 Embedded Font Programs) for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram">
            <summary>
            Defines PDF embedded font program loaded from PDF content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.ProgramType">
            <summary>
            The type of font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length1">
            <summary>
            (Required for Type 1 and TrueType fonts)
            The length in bytes of the clear-text portion of the Type 1 font program (see below),
            or the entire TrueType font program, after it has been decoded using the filters specified by the stream’s
            Filter entry, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length2">
            <summary>
            (Required for Type 1 fonts)
            The length in bytes of the encrypted portion of the Type 1 font program (see below)
            after it has been decoded using the filters specified by the stream’s Filter entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length3">
            <summary>
            (Required for Type 1 fonts)
            The length in bytes of the fixed-content portion of the Type 1 font program (see below)
            after it has been decoded using the filters specified by the stream’s Filter entry.
            If Length3 is 0, it indicates that the 512 zeros and cleartomark have not been included in
            the FontFile font program and must be added.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.#ctor(GrapeCity.Documents.Pdf.IPdfStreamProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram"/>.
            </summary>
            <param name="data">The <see cref="T:GrapeCity.Documents.Pdf.IPdfStreamProvider"/> containing font's data.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Type">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.AdobeStandardEncoding">
            <summary>
            Adobe standard Latin-text encoding.
            This is the built-in encoding defined in Type 1 Latin-text font programs
            (but generally not in TrueType font programs).
            PDF does not have a predefined encoding named StandardEncoding.
            However, it is useful to describe this encoding, since a font’s built-in encoding can be
            used as the base encoding from which differences are specified in an encoding dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding">
            <summary>
            Custom encoding, see details in PDF 1.7 427 page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.BaseEncoding">
            <summary>
            The base <see cref="T:GrapeCity.Documents.Pdf.Text.Encodings.Encoding"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.Differences">
            <summary>
            The differences from <see cref="F:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.BaseEncoding"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.Update">
            <summary>
            Should be called if <see cref="F:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.BaseEncoding"/> or <see cref="F:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.Differences"/> were
            changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.DocEncoding">
            <summary>
            Encoding for text strings in a PDF document outside the document’s content streams.
            This is one of two encodings (the other being Unicode) that can be used to represent text strings;
            see Section , “Text String Type.” PDF does not have a predefined encoding named PDFDocEncoding;
            it is not customary to use this encoding to show text from fonts.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.s_GlyphNameToUnicode">
            <summary>
            Returns UTF-16 character code by glyph's name, based on "Adobe Glyph List", 
            glyphlist.txt distributed by Adobe.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.CodeToGlyphName">
            <summary>
            Returns the glyph's name by character code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.GlyphNameToCode">
            <summary>
            Returns the character's code by glyph name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.CodeToUnicode">
            <summary>
            Returns the unicode by character's code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Converts PDF code to UTF-16 string, can return false if 
            specified string can not be converted using this encoding.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.Encoding.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <summary>
            Converts a Unicode value to PDF code.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.MacRomanEncoding">
            <summary>
            Mac OS standard encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named MacRomanEncodingthat can be used with both
            Type 1 and TrueType fonts.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.WinAnsiEncoding">
            <summary>
            Windows Code Page 1252, often called the “Windows ANSI” encoding.
            This is the standard Windows encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named WinAnsiEncoding that can be used with both
            Type 1 and TrueType fonts.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.ZapfDingbatsEncoding">
            <summary>
            The encoding from standard ZapfDingbats font.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDef">
            <summary>
            Defines PDF font and size this combination of font's properties
            occurs very often in PDF specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDef.Size">
            <summary>
            Gets the font size, units depend on context in most cases it is text space units.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.ISystemFontProvider">
            <summary>
            Allows getting a system font that can be used instead of a font which is not embedded into the PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Font">
            <summary>
            The base abstract class representing a font in a PDF document.
            </summary>
            <summary>
            The base abstract class representing a font in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetGlyphWidth(System.UInt32,System.Single@)">
            <summary>
            Tries to get glyph width from PDF font, in some cases the width can be NOT specified in a font,
            in this case the method returns false.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.ReadChar(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,System.UInt32@,System.Int32@)">
            <summary>
            Reads char from PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.ReadChar(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,GrapeCity.Documents.Pdf.Text.Font.CharInfo@)">
            <summary>
            Reads PDF code from the string in specified position, advances position and returns <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/>
            corresponding specified PDF code.
            </summary>
            <param name="str"></param>
            <param name="p"></param>
            <param name="ci"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFallbackFont(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Selects best <see cref="T:GrapeCity.Documents.Text.Font"/> which can be used to render text of this PDF font.
            
            Unfortunately PDF spec does not contain exact algorithm which should be used
            to determine a font to use when no embedded data. 
            So, this method is a compilation of various "tricks" and "magic" :(.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.ToUnicode">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CCustomMap"/> defines ToUnicode mapping.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.Subtype">
            <summary>
            The font's type. (Type0, Type1 etc).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.Vertical">
            <summary>
            Indicates whether font is used for vertical drawing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.EmbeddedFontProgram">
            <summary>
            Gets  or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase"/> object containing font's embedded data,
            can be null if font is not embedded.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.BaseFont">
            <summary>
            Gets or sets the PostScript name of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.IsEmbedded">
            <summary>
            Gets a value indicating whether the font is embedded.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetEmbeddedData">
            <summary>
            Returns the stream containing the embedded font data, returns null if the font is not embedded,
            the stream should be disposed after usage.
            </summary>
            <returns>The stream with font data or null if the font is not embedded.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFontAttributes(System.String@,System.Nullable{GrapeCity.Documents.Pdf.Text.FontWeight}@,System.Nullable{GrapeCity.Documents.Pdf.Text.FontStretch}@,System.Nullable{System.Boolean}@)">
            <summary>
            Extracts the attributes of the current font.
            If a specific attribute cannot be determined,
            the corresponding output value is set to null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFontDescriptor">
            <summary>
            Gets an <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object that describes the font.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.CreateNativeFont">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Text.Font"/> object created from the embedded font data.
            <para>
            Note that this method will return <b>null</b> if the font is not embedded
            or does not support this operation (e.g. Type3 fonts).
            </para>
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Text.Font"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Converts a character's PDF code to its Unicode value.
            <para>
            Note that this method can fail if the font does not contain the necessary info for the conversion.
            </para>
            <para>
            Note also that this method can be slow as it uses large font tables like /Encoding, /ToUnicode etc.,
            so the returned results better be cached by the caller.
            </para>
            </summary>
            <param name="pdfCode">The character PDF code.</param>
            <param name="unicode">OUT: The character Unicode.</param>
            <returns>True if the conversion was successful, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <summary>
            Tries to convert a Unicode value to the character's PDF code.
            <para>
            Note that this method can fail if the font does not contain the necessary info for the conversion
            or does not contain the specified Unicode value.
            </para>
            <para>
            Note also that this method can be slow as it uses large font tables like /Encoding, /ToUnicode etc.,
            so it is recommended that the returned results are cached by the caller.
            </para>
            </summary>
            <param name="unicode">The character Unicode.</param>
            <param name="pdfCode">OUT: The character PDF code.</param>
            <param name="pdfCodeLength">OUT: The length of <paramref name="pdfCode"/> in bytes.</param>
            <returns><see langword="true"/> if the conversion was successful, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo">
            <summary>
            Contains information about char used to build text map.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.PdfCode">
            <summary>
            The PDF code of the char as it specified in TJ or Tj commands.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.PdfCodeLength">
            <summary>
            The length of PDF code in bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Text">
            <summary>
            The string representing char, typically it has 1 char length.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Width">
            <summary>
            The width of the char divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.IsSpace">
            <summary>
            Indicates whether this char is a space and word spacing(Tw) should be applied to it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.W1">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.W1"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Vx">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.Vx"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Vy">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.Vy"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.CID">
            <summary>
            Has valid value only for <see cref="T:GrapeCity.Documents.Pdf.Text.FontType0"/>, contains CID for PDF code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.GlyphIndex">
            <summary>
            The glyph's index in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphWidth">
            <summary>
            The glyph's width in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphHeight">
            <summary>
            The glyph's height in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphBounds">
            <summary>
            The glyph's bounds relative to baseline, all coordinates divided by 1000.
            Note! All coordinates corrected if FontGlyphWidth does not match Width,
            it is possible if substitute font is used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.m_Renderer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.Renderer"/> used to render text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Draw(GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Renders text specified by <paramref name="str"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.CreateCharInfo(System.UInt32,System.Int32)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> object describing properties of specified PDF code.
            NOTE! This method is for internal usage and called from <see cref="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetCharInfo(System.UInt32,System.Int32)"/>
            if char does not exist in the cache.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetCharInfo(System.UInt32,System.Int32)">
            <summary>
            Gets <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> for specified PDF code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetMapFontMetrics(System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets font's metrics used while building <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension">
            <summary>
            The width for the horizontal item and height for vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing">
            <summary>
            The spacing after the item, calculated on the base of Text Character Spacing, Text Word Spacing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.CharInfo">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> describing this char.
            This property can be null if item was created from number when "Tj" command is used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlock.Matrix">
            <summary>
            The text matrix used to display this <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlock.Renderer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.Renderer"/> used to process this block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetBounds">
            <summary>
            Returns the block's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetSize">
            <summary>
            Returns sum of <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension"/> and <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing"/> for all items.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetSize(System.Int32,System.Int32)">
            <summary>
            Returns sum of <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension"/> and <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing"/> for range of items.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetText">
            <summary>
            Returns the text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.FontAscent">
            <summary>
            The font ascent, used to calculate height of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.FontDescent">
            <summary>
            The font descent, used to calculate height of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.Tx">
            <summary>
            The horizontal offset of the current text position after rendering this text block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.GetBounds">
            <inheritdoc/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.LeftOffset">
            <summary>
            The offset relative to baseline to the left edge, used to calculate width of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.RightOffset">
            <summary>
            The offset relative to baseline to the right edge, used to calculate width of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.Ty">
            <summary>
            The vertical offset of the current text position after rendering this text block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.GetBounds">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags">
            <summary>
            Specifies various characteristics of the font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch fonts,
            which have different widths).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and bottom
            of glyph stems. (Sans serif fonts do not have serifs.)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set.
            This flag and the <see cref="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Nonsymbolic"/> flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            This flag and the <see cref="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Symbolic"/> flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.AllCap">
            <summary>
            Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.SmallCap">
            <summary>
            Font contains both uppercase and lowercase letters.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.ForceBold">
            <summary>
            See PDF1.7 specification, page 459.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontStretch">
            <summary>
            Defines possible font stretch values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.UltraCondensed">
            <summary>
            UltraCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.ExtraCondensed">
            <summary>
            ExtraCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Condensed">
            <summary>
            Condensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.SemiCondensed">
            <summary>
            SemiCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.SemiExpanded">
            <summary>
            SemiExpanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Expanded">
            <summary>
            Expanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.ExtraExpanded">
            <summary>
            ExtraExpanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.UltraExpanded">
            <summary>
            UltraExpanded.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontWeight">
            <summary>
            Defines possible font weight values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Thin">
            <summary>
            Thin.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.ExtraLight">
            <summary>
            ExtraLight.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.UltraLight">
            <summary>
            UltraLight.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Light">
            <summary>
            Light.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.DemiBold">
            <summary>
            DemiBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.SemiBold">
            <summary>
            SemiBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Bold">
            <summary>
            Bold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.ExtraBold">
            <summary>
            ExtraBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Heavy">
            <summary>
            Heavy.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDescriptor">
            <summary>
            Specifies metrics and other attributes of a <see cref="T:GrapeCity.Documents.Pdf.Text.FontSimple"/> or a <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont"/> as a whole,
            as distinct from the metrics of individual glyphs.
            These font metrics provide information that enables a consumer application to synthesize a substitute font or
            select a similar font when the font program is unavailable.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontName">
            <summary>
            The PostScript name of the font.
            This name should be the same as the value of BaseFont in the font or CIDFont dictionary
            that refers to this font descriptor.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_FontFamily">
            <summary>
            The preferred font family name.
            For example, for the font Times Bold Italic, the FontFamily is Times.
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_FontStretch">
            <summary>
            The font stretch value.
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_FontWeight">
            <summary>
            The weight (thickness) component of the fully-qualified font name or font specifier.
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_Flags">
            <summary>
            The flags defining various characteristics of the font.
            (Required) 
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_FontBBox">
            <summary>
            A rectangle expressed in the glyph coordinate system, specifying the font bounding box.
            This is the smallest rectangle enclosing the shape that would result if all
            of the glyphs of the font were placed with their origins coincident and then filled.
            (Required, except for Type 3 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_ItalicAngle">
            <summary>
            The angle, expressed in degrees counterclockwise from the vertical,
            of the dominant vertical strokes of the font.
            (Required)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_Ascent">
            <summary>
            The maximum height above the baseline reached by glyphs in this font,
            excluding the height of glyphs for accented characters.
            (Required, except for Type 3 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_Descent">
            <summary>
            The maximum depth below the baseline reached by glyphs in this font.
            The value is a negative number.
            (Required, except for Type 3 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_Leading">
            <summary>
            The spacing between baselines of consecutive lines of text. 
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_CapHeight">
            <summary>
            The vertical coordinate of the top of flat capital letters, measured from the baseline.
            (Required for fonts that have Latin characters, except for Type 3 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_XHeight">
            <summary>
            The font’s x height: the vertical coordinate of the top of flat nonascending lowercase letters
            (like the letter x), measured from the baseline, in fonts that have Latin characters.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_StemV">
            <summary>
            The thickness, measured horizontally, of the dominant vertical stems of glyphs in the font.
            (Required, except for Type 3 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_StemH">
            <summary>
            The thickness, measured vertically, of the dominant horizontal stems of glyphs in the font.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_AvgWidth">
            <summary>
            The average width of glyphs in the font.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.m_MaxWidth">
            <summary>
            The maximum width of glyphs in the font.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.MissingWidth">
            <summary>
            The width to use for character codes whose widths are not specified
            in a font dictionary’s Widths array.
            This has a predictable effect only if all such codes map to glyphs
            whose actual widths are the same as the value of the MissingWidth entry.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.CharSet">
            <summary>
            The listing the character names defined in a font subset
            (Optional; meaningful only in Type 1 fonts; PDF 1.1)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptor.EmbeddedFontProgram">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase"/> defining embedded font's data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontFamily">
            <summary>
            Gets the preferred font family name.
            For example, for the font Times Bold Italic, the FontFamily is Times.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontStretch">
            <summary>
            Gets the font stretch value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontWeight">
            <summary>
            Gets the weight (thickness) component of the fully-qualified font name or font specifier.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Flags">
            <summary>
            Gets the flags defining various characteristics of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontBBox">
            <summary>
            Gets a rectangle expressed in the glyph coordinate system, specifying the font bounding box.
            This is the smallest rectangle enclosing the shape that would result if all
            of the glyphs of the font were placed with their origins coincident and then filled.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.ItalicAngle">
            <summary>
            Gets the angle, expressed in degrees counterclockwise from the vertical,
            of the dominant vertical strokes of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Ascent">
            <summary>
            Gets the maximum height above the baseline reached by glyphs in this font,
            excluding the height of glyphs for accented characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Descent">
            <summary>
            Gets the maximum depth below the baseline reached by glyphs in this font.
            The value is a negative number.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Leading">
            <summary>
            Gets the spacing between baselines of consecutive lines of text. 
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.CapHeight">
            <summary>
            Gets the vertical coordinate of the top of flat capital letters, measured from the baseline.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.XHeight">
            <summary>
            Gets the font’s x height: the vertical coordinate of the top of flat nonascending lowercase letters
            (like the letter x), measured from the baseline, in fonts that have Latin characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.StemV">
            <summary>
            Gets the thickness, measured horizontally, of the dominant vertical stems of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.StemH">
            <summary>
            Gets the thickness, measured vertically, of the dominant horizontal stems of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.AvgWidth">
            <summary>
            Gets the average width of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.MaxWidth">
            <summary>
            Gets the maximum width of glyphs in the font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphIndex">
            <summary>
            The glyph index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphWidth">
            <summary>
            Glyph width in font EM units.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphHeight">
            <summary>
            Glyph height in font EM units, used in vertical drawing to compare with GlyphAdvance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.PdfGlyphWidth">
            <summary>
            <see cref="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphWidth"/> scaled to range 0..1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.W1">
            <summary>
            <see cref="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphHeight"/> scaled to range 0..1000, PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.Vx">
            <summary>
            PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.Vy">
            <summary>
            PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo.GlyphInfo">
            <summary>
            Associated glyph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo.Font">
            <summary>
            The pdf font used to draw this char.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder">
            <summary>
            Encodes PDF font data and writes it to PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.FontHandler">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.GetGlyphInfo(System.UInt16)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> for specified glyph index,
            can return null if <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> does not exists.
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.AddGlyphInfo(System.UInt16)">
            <summary>
            Builds <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> for specified glyph.
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.HasPdfFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder"/> owns specified PDF font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.BeforeSave">
            <summary>
            Called before saving the document.
            Can be used to prepare internal objects, for example embedded data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.GetCharInfo(System.UInt16,System.Boolean)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph which belongs to the underlying <see cref="T:RawFont"/>,
            returns null if <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph does not exist.
            </summary>
            <param name="glyphIndex"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.AddCharInfo(System.UInt16,System.String,System.Boolean)">
            <summary>
            Builds <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph.
            </summary>
            <param name="glyphIndex"></param>
            <param name="unicodes"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.PdfCharInfoCollection">
            <summary>
            Collection of the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/>, PdfCharInfo.GlyphInfo.GlyphIndex is used as key.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.StandardFontEncoder">
            <summary>
            Uses following rules:
            -) written as Type1 font
            -) all unicodes with code less than 127 written as is 
            -) all other unicodes will be encoded via custom encoding using /Differences 
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder">
            <summary>
            Uses following rules:
            -) each PDF code has two byte length
            -) PDF code is same as glyph index
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder.Type0FontWrapper.Chars">
            <summary>
            The collection of characters used by this font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder.Type0FontWrapper.Font">
            <summary>
            The underlying <see cref="T:GrapeCity.Documents.Pdf.Text.FontType0"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder">
            <summary>
            Base class for encoders based on Type0 PDF font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.CIDFont">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFontType2"/> defining CID font referenced from Type0 fonts.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.EmbeddedFontProgram">
            <summary>
            Defines PDF embedded font program created during encoding of <see cref="T:GrapeCity.Documents.Text.Font"/> by the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontSimple">
            <summary>
            The base abstract class representing a simple font in a PDF document.
            <para>See the PDF specification for more info about PDF simple fonts.</para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontSimple.FirstChar">
            <summary>
            The first character code defined in the font’s Widths array.
            (Required except for the standard 14 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontSimple.LastChar">
            <summary>
            The last character code defined in the font’s Widths array.
            (Required except for the standard 14 fonts)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontSimple.Widths">
            <summary>
            An array of (LastChar − FirstChar + 1) widths, each element being the glyph width for
            the character code that equals FirstChar plus the array index. For character codes outside
            the range FirstChar to LastChar, the value of MissingWidthfrom the FontDescriptor entry for this font is used.
            (Required except for the standard 14 fonts; indirect reference preferred)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontSimple.Encoding">
            <summary>
            The encoding used by the font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontSimple.m_Descriptor">
            <summary>
            A font descriptor describing the font’s metrics other than its glyph widths.
            (Required except for the standard 14 fonts; must be an indirect reference)
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.Descriptor">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object describing the font's metrics.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.TryGetUnicode(System.UInt32,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.GetFontDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontTrueType">
            <summary>
            Represents True Type font in PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontTrueType.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontTrueType.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontTrueType.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType0">
            <summary>
            Represents Type0 font in PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.Vertical">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.DescendantFont">
            <summary>
            Gets or sets the underlying <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.Encoding">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapBase"/> object that maps character codes to font numbers and CIDs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.GetFontDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.TryGetUnicode(System.UInt32,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType1">
            <summary>
            Represents Type1 font in PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType1.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType1.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType1.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType3">
            <summary>
            Represents Type3 font in PDF document.
            Type 3 fonts differ from the other fonts supported by PDF.
            In Type 3 fonts, glyphs are defined by streams of PDF graphics operators. These streams are associated with character names.
            Note! <see cref="T:GrapeCity.Documents.Pdf.Text.FontType3"/> does not support <see cref="M:GrapeCity.Documents.Pdf.Text.FontType3.CreateNativeFont"/> method, it returns null.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontType3.FontBBox">
            <summary>
            A <see cref="T:System.Drawing.RectangleF"/> expressed in the glyph coordinate system,
            specifying the font bounding box.
            This is the smallest rectangle enclosing the shape that would result if all of the glyphs
            of the font were placed with their origins coincident and then filled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontType3.FontMatrix">
            <summary>
            A <see cref="T:System.Numerics.Matrix3x2"/> mapping glyph space to text space.
            A common practice is to define glyphs in terms of a 1000-unit glyph coordinate system,
            in which case the font matrix is [ 0.001 0 0 0.001 0 0 ].
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontType3.CharProcs">
            <summary>
            The characters' content streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontType3.ResourceDictionary">
            <summary>
            The resources used by the font's glyphs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType3.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType3.CharProcsDef">
            <summary>
            Defines collection of charaters content streams.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType3.CharContentStream">
            <summary>
            Defines character content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionStyle">
            <summary>
            Defines the possible transition styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Split">
            <summary>
            Two lines sweep across the screen, revealing the new page.
            The lines may be either horizontal or vertical and may move inward from the edges
            of the page or outward from the center, as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension"/> and
            <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> properties, respectively.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Blinds">
            <summary>
            Multiple lines, evenly spaced across the screen, synchronously sweep in the same direction
            to reveal the new page.
            The lines may be either horizontal or vertical, as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension"/>.
            Horizontal lines move downward; vertical lines move to the right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Box">
            <summary>
            A rectangular box sweeps inward from the edges of the page or outward from the center,
            as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> property, revealing the new page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Wipe">
            <summary>
            A single line sweeps across the screen from one edge
            to the other in the direction specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> entry,
            revealing the new page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Dissolve">
            <summary>
            The old page dissolves gradually to reveal the new one.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Glitter">
            <summary>
            Similar to Dissolve, except that the effect sweeps across the page in a wide band moving from one side of the screen to the other
            in the direction specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.R">
            <summary>
            The new page simply replaces the old one with no special transition effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly">
            <summary>
            Changes are flown out or in (as specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/>),
            in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            to or from a location that is off-screen except when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionDirection.None"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Push">
            <summary>
            The old page slides off the screen while the new page slides in,
            pushing the old page out in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Cover">
            <summary>
            The new page slides on to the screen in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            covering the old page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Uncover">
            <summary>
            The old page slides off the screen in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            uncovering the new page in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Fade">
            <summary>
            The new page gradually becomes visible through the old one.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionDimension">
            <summary>
            Defines the possible dimensions in which the transition effect shall occur.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Horizontal">
            <summary>
            Horizontal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Vertical">
            <summary>
            Vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionDirection">
            <summary>
            Defines the possible directions in which the specified transition effect shall moves.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.LeftToRight">
            <summary>
            The direction is left to right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.BottomToTop">
            <summary>
            The direction is bottom to top.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.RightToLeft">
            <summary>
            The direction is right to left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.TopToBottom">
            <summary>
            The direction is top to bottom.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.TopLeftToBottomRight">
            <summary>
            The direction is Top-left to bottom-right. (Used only when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Glitter"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.None">
            <summary>
            Used only when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionMotionDirection">
            <summary>
            Defines the possible directions of motion for a transition effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward">
            <summary>
            Inward from the edges of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Outward">
            <summary>
            Outward from the center of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionEffect">
            <summary>
            Represents a page transition effect,
            describing the style and duration of the visual transition to use when moving
            from another page to the given page during a presentation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TransitionEffect"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Style">
            <summary>
            Gets or sets the transition style that shall be used when moving to this page from another
            during a presentation. Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.R"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Duration">
            <summary>
            Gets or sets the duration of transition effect, in seconds.
            Default value: 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension">
            <summary>
            Gets or sets the dimension in which the specified transition effect shall occur.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionDimension.Horizontal"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection">
            <summary>
            Gets or sets the direction of motion for the specified transition effect.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction">
            <summary>
            Gets or sets the direction in which the specified transition effect shall moves,
            expressed in degrees counterclockwise starting from a left-to-right direction.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionDirection.LeftToRight"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale">
            <summary>
            Gets or sets the starting or ending scale at which the changes shall be drawn.
            If <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> specifies an inward transition (<see cref="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward"/>),
            the scale of the changes drawn shall progress from <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale"/> to 1.0 over the course
            of the transition.
            If <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> specifies an outward transition,
            the scale of the changes drawn shall progress from 1.0 to <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale"/> over the course of the transition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.FlyRectangularAndOpaque">
            <summary>
            Gets or sets a value indicating whether the area that shall be flown in is rectangular and opaque,
            used only if <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly"/>.
            Default: false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TriggerEvents">
            <summary>
            Abstract base class for all classes defining set of events associated with some PDF object: annotation, AcroForm field etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TriggerEvents.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})">
            <summary>
            Enumerates all nested objects supporting <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface,
            referenced from this <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TriggerEvents.OnActionChanged(System.String)">
            <summary>
            Called when action with specified name is changed.
            </summary>
            <param name="propName"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TriggerEvents.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> for specified event.
            </summary>
            <param name="key">The event type.</param>
            <returns>Returns the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> associated with specified event.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcGraphicsExt">
            <summary>
            Provides extension methods that draw certain PDF elements
            (such as AcroForm fields) on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.InitTextLayout(GrapeCity.Documents.Text.TextLayout,System.Nullable{System.Single},System.Nullable{System.Single},GrapeCity.Documents.Text.TextFormat,System.String,System.Boolean,GrapeCity.Documents.Text.TextAlignment,GrapeCity.Documents.Text.ParagraphAlignment,System.Boolean)">
            <summary>
            Initializes the <see cref="T:GrapeCity.Documents.Text.TextLayout"/> using specified TextFormat and text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.InitTextLayout(GrapeCity.Documents.Text.TextLayout,System.Nullable{System.Single},System.Nullable{System.Single},GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.String,System.Boolean,GrapeCity.Documents.Text.TextAlignment,GrapeCity.Documents.Text.ParagraphAlignment,System.Boolean)">
            <summary>
            Initializes the <see cref="T:GrapeCity.Documents.Text.TextLayout"/> using specified TextFormat and text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawStamp(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Draws Stamp annotation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPdfPage(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean,System.Boolean)">
            <summary>
            Draws a PDF page.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="page">The page to draw.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="drawAnnotations">Indicates whether to draw annotations.</param>
            <param name="drawFormFields">Indicates whether to draw form fields.</param>
            <param name="renderingCache">A <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object that is used to cache objects created during rendering.</param>
            <param name="print">Indicates whether the image is generated for printing.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in the PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCheckBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single,System.String)">
            <summary>
            Draws a PDF check mark.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The check mark bounds.</param>
            <param name="value">The check mark value.</param>
            <param name="font">The font to use, can be null in which case <see cref="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats"/> will be used.</param>
            <param name="fontSize">The font size, can be 0 in which case it will be selected automatically to fit into the specified bounds.</param>
            <param name="foreColor">The foreground color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="checkMark">The text to use for the check mark.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCheckBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.String)">
            <summary>
            Draws a PDF check mark.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The check mark bounds.</param>
            <param name="value">The check mark value.</param>
            <param name="font">The font to use, can be null in which case <see cref="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats"/> will be used.</param>
            <param name="fontSize">The font size, can be 0 in which case it will be selected automatically to fit into the specified bounds.</param>
            <param name="foreColor">The foreground color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="checkMark">The text to use for the check mark.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawDropDownButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF)">
            <summary>
            Draws a combo box drop-down button.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawImage(GrapeCity.Documents.Drawing.GcGraphics,System.Object,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.ImageScale)">
            <summary>
            Draws an image represented by an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="image">The image object (an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>).</param>
            <param name="bounds">The image bounds.</param>
            <param name="imageScale">The image alignment and scaling.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawRichTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a text box containing a rich text.
            <para>
            Note that all rich text formatting is ignored, just the text is drawn using a predefined format
            within specified bounds.
            </para>
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="richText">The rich text to draw.</param>
            <param name="styleString">The style string specified for the control.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawRichText(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String)">
            <summary>
            Draws rich text at specified bounds.
            <para>
            Note that all rich text formatting is ignored, just the text is drawn using a predefined format
            within specified bounds.
            </para>
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="richText">The rich text to draw.</param>
            <param name="styleString">The style string specified for the control.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPdfLine(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.PointF[],System.Single,System.Drawing.Color,System.Single[],GrapeCity.Documents.Pdf.Annotations.LineEndingStyle,GrapeCity.Documents.Pdf.Annotations.LineEndingStyle,System.Drawing.Color)">
            <summary>
            Draws a line composed of several segments, with start and end markers.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="points">An array of points defining the line.</param>
            <param name="lineWidth">The line width.</param>
            <param name="lineColor">The line color.</param>
            <param name="lineDashPattern">The dash pattern, null indicates a solid line.</param>
            <param name="lineStartStyle">The style of the start marker.</param>
            <param name="lineEndStyle">The style of the end marker.</param>
            <param name="lineEndingsFillColor">The fill color used to render the markers.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDashPattern">
            <summary>
            Defines PDF dash pattern.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDashPattern.Solid">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> defining solid line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDashPattern.#ctor(System.Single[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> class.
            </summary>
            <param name="dashes"></param>
            <param name="phase"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDashPattern.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> class.
            </summary>
            <param name="dashes"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDashPattern.Dashes">
            <summary>
            Gets the dash's array .
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDashPattern.Phase">
            <summary>
            Gets the dash phase specifies the distance into the dash pattern at which to start the dash.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageLayout">
            <summary>
            Specifies the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.SinglePage">
            <summary>
            Display one page at a time.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoPageLeft">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoPageRight">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageMode">
            <summary>
            Specifies how the document should be displayed when opened.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.Automatic">
            <summary>
            Document outline visible if available.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseOC">
            <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseAttachments">
            <summary>
            (PDF 1.6) Attachments panel visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NonFullScreenPageMode">
            <summary>
            Specifies how the document should be displayed on exiting full-screen mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseOC">
            <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PrintScaling">
            <summary>
            (PDF 1.6) The page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PrintScaling.None">
            <summary>
            Indicates that the print dialog should reflect no page scaling.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PrintScaling.AppDefault">
            <summary>
            Indicates that applications should use the current print scaling.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Duplex">
            <summary>
            (PDF 1.7) The paper handling option to use when printing the file from the print dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.Simplex">
            <summary>
            Print single sided.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.DuplexFlipShortEdge">
            <summary>
            Duplex and flip on the short edge of the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.DuplexFlipLongEdge">
            <summary>
            Duplex and flip on the long edge of the sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ReadingDirection">
            <summary>
            Specifies the possible predominant reading order for text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ReadingDirection.L2R">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ReadingDirection.R2L">
            <summary>
            Right to left (including vertical writing systems, such as Chinese, Japanese, and Korean).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageBoundary">
            <summary>
            Specifies the types of page boundaries. See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.CropBox">
            <summary>
            The region to which the contents of the page are to be clipped (cropped) when displayed or printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.MediaBox">
            <summary>
            The boundaries of the physical medium on which the page is to be printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.BleedBox">
            <summary>
            The region to which the contents of the page should be clipped when output in a production environment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.TrimBox">
            <summary>
            The intended dimensions of the finished page after trimming.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.ArtBox">
            <summary>
            The extent of the page�s meaningful content (including potential white space) as intended by the page�s creator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ViewerPreferences">
            <summary>
            Represents viewer preferences to be used when displaying the document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ViewerPreferences.DictionaryShouldWritten">
            <summary>
            Returns a value indicating whether object is not default and its dictionary should be written to PDF.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ViewerPreferences.Reset">
            <summary>
            Resets properties of this <see cref="T:GrapeCity.Documents.Pdf.ViewerPreferences"/> to default values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageMode">
            <summary>
            Gets or sets how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageLayout">
            <summary>
            Gets or sets the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideToolbar">
            <summary>
            Gets or sets whether to hide the viewer tool bars when the document is active.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideMenubar">
            <summary>
            Gets or sets whether to hide the viewer menu bar when the document is active.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.FitWindow">
            <summary>
            Gets or sets whether to resize the document's window to fit the size of the first displayed page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.CenterWindow">
            <summary>
            Gets or sets whether to position the document's window in the center of the screen.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideWindowUI">
            <summary>
            Gets or sets whether to hide user interface elements in the document�s window (such as scroll bars and navigation controls),
            leaving only the document�s contents displayed.
            <para>Default value: false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.DisplayDocTitle">
            <summary>
            Gets or sets whether the window�s title bar should display the document title taken from the Title entry of the document information dictionary.
            <para>Default value: false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.NonFullScreenPageMode">
            <summary>
            Specifies how to display the document on exiting full-screen mode.
            Ignored unless <see cref="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageMode"/> is <see cref="F:GrapeCity.Documents.Pdf.PageMode.FullScreen"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.Direction">
            <summary>
            Gets or sets the predominant reading order for text.
            </summary>
            <remarks>
            This property has no direct effect on the document�s contents or page numbering but
            can be used to determine the relative positioning of pages when displayed side by side or printed n-up.
            Default value: L2R.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.ViewArea">
            <summary>
            Gets or sets the name of the page boundary representing the area of a page to be displayed when viewing
            the document on the screen.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.ViewClip">
            <summary>
            Gets or sets the name of the page boundary to which the contents of a page are to be clipped when viewing
            the document on the screen.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintArea">
            <summary>
            Gets or sets the name of the page boundary representing the area of a page to be rendered when
            printing the document.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintClip">
            <summary>
            Gets or sets the name of the page boundary to which the contents of a page are
            to be clipped when printing the document.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintScaling">
            <summary>
            Specifies the page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.Duplex">
            <summary>
            Specifies the page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PickTrayByPDFSize">
            <summary>
            (PDF 1.7) A flag specifying whether the PDF page size is used to select the input paper tray.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.NumCopies">
            <summary>
            (PDF 1.7) The number of copies to be printed when the print dialog is opened for this file.
            Supported values are the integers 2 through 5. Values outside this range are ignored.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintPageRange">
            <summary>
            (PDF 1.7) The page numbers used to initialize the print dialog box when the file is printed.
            This is a comma-delimited list of inidvidual page numbers and/or dash-delimited page ranges.
            <para>
            Setting this property to a value that cannot be parsed will be ignored.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter">
            <summary>
            FDF writer used to build FDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter.BeginObjFDF(System.Int32)">
            <summary>
            Starts writing new pdf object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter.EndObjFDF">
            <summary>
            Ends PDF object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.OldObjID">
            <summary>
            The object's ID in parsed PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Loaded(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Called when object's parsing is finished.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WasLoaded">
            <summary>
            Indicates whether the object was loaded from PDF stream, used when document is saved
            with incremental update.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Indirect">
            <summary>
            Indicates whether the object should be written as PDF indirect object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID">
            <summary>
            The object's ID in generated PDF content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Empty">
            <summary>
            Indicates whether the object is empty and its content can be skipped when generate PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.DocID">
            <summary>
            See comments for <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Returns a value indicating whether the object's content was changed and
            should be written to the output stream in case of incremental updates.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ResetContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Should mark content of the object as unchanged, after calling this method the
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/> should return false.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes the PDF object representing this <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>.
            NOTE 1. When this method is called <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/>
                    contains correct value if <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Indirect"/> is true.
            NOTE 2. Nested indirect <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> objects
                    should NOT be written in this method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes the indirect PDF object representing this <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>.
            This method can be used to write the object as several PDF objects,
            for example, see how implemented <see cref="M:GrapeCity.Documents.Pdf.EmbeddedFilesEntry.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})">
            <summary>
            Enumerates nested <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> objects.
            Enumeration should be stopped if <paramref name="callback"/> returns false.
            Method should return true if all callback methods returned true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.ObjIDs">
            <summary>
            Used to manage objects IDs of offsets in stream during generating PDF content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> using this <see cref="T:GrapeCity.Documents.Pdf.Writer.ObjIDs"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs._objPositions">
            <summary>
            Used only when document saved in linearized form contains about positions of objects
            and references to objects in the PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.WrittenObjectCounter">
            <summary>
            Increment each time when offset was specified for object, i.e.
            when it was written to the output stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.FirstWrittenObjectID">
            <summary>
            Updated only if it is less or equal to zero, and can be used to determine ID
            of first written object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.SkipValidIDs(System.Int32)">
            <summary>
            Skips all ID's with offset greater or equal to 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.SkipInvalidIDs(System.Int32)">
            <summary>
            Skips all ID's with offset less than 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.Clear">
            <summary>
            Called when saving of document is finished.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.Init">
            <summary>
            Called when saving of document is started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.AddObjHeaderPosition(GrapeCity.Documents.Pdf.PdfObjID,System.Int64)">
            <summary>
            Linearized mode only.
            Called from PdfDocStreamWriter.BeginObj(...) methods when generating linearized document
            used to store position in document's stream where object with specified ID is started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.AddObjRefPosition(GrapeCity.Documents.Pdf.PdfObjID,System.Int64)">
            <summary>
            Linearized mode only.
            Called from PdfDocStreamWriter.WriteRef(...) methods when generating linearized document
            used to store position of reference to the object in document's stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObjPosition(System.Int32)">
            <summary>
            Linearized mode only.
            Returns <see cref="T:GrapeCity.Documents.Pdf.Writer.ObjIDs.ObjPos"/> containing positions in the stream where 
            are references to object with ID <paramref name="objID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.UpdateObjPositions(System.Int32,System.Int64)">
            <summary>
            Linearized mode only.
            Updates all positions of object with specified ID on specified value (<paramref name="delta"/>).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetWrittenObjectIDs">
            <summary>
            Linearized mode only.
            Get IDs of the objects which were actually written into stream,
            i.e. their offset currently not -1.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObjID">
            <summary>
            Generates new object ID.
            NOTE! This method should be called by each PDF object only ONCE.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GenerateObjID(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            For internal use only.
            Generates the object ID for specified <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>,
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObjID(System.Int64)">
            <summary>
            Generates new object ID and sets it's offset to specified value.
            NOTE! This method should be called each PDF object only ONCE.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObjOffset(System.Int32)">
            <summary>
            Returns position of object in the PDF stream, returns -1 if object was not written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObjOffset(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Returns position of object in the PDF stream, returns -1 if object was not written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.GetObj(System.Int32)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> associated with specified ID, returns null if there are NO objects with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.SetObjOffset(System.Int32,System.Int64)">
            <summary>
            Sets position of the object in the PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.ObjIDs.AfterSave">
            <summary>
            Called when document is saved.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.ObjIDs.ObjPos">
            <summary>
            Contains info about object's position in generated PDF file.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.ObjPos.Gen">
            <summary>
            Object's generation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.ObjPos.HeaderPosition">
            <summary>
            Offset of object's header, i.e. where is 10 0 obj
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.ObjIDs.ObjPos.RefPositions">
            <summary>
            Positions of references to the object, i.e. where is 10 0 R
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter">
            <summary>
            PDF writer used to build PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.CurrentGraphicsState">
            <summary>
            The current graphics state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            Note! <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> does not montais graphics state stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            Note! <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> does not montain graphics state stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpClosePath">
            <summary>
            "n"
            Closes current path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineCapStyle(GrapeCity.Documents.Pdf.LineCapStyle)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineJoinStyle(GrapeCity.Documents.Pdf.LineJoinStyle)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeColor(System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "RG"
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Note! This methods sets stroke alpha value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetSMask(GrapeCity.Documents.Pdf.Graphics.SoftMaskBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set the Soft Mask.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetBlendMode(GrapeCity.Documents.Pdf.PdfBlendMode,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set the blend mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set non-stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpFillRectangle(System.Drawing.RectangleF)">
            <summary>
            Fills a rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "rg"
            Set the non stroking color space to DeviceRGB.
            Note! This methods sets non stroke alpha value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetGraphicsStateParameters(System.Single,System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeAlpha(System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeAlpha(System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(System.String,GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "cs", "scn"
            Set pattern non stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(System.String,GrapeCity.Documents.Pdf.Graphics.Patterns.PatternBase,System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "cs", "scn"
            Set uncolored pattern non stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextFontAndSize(GrapeCity.Documents.Pdf.Text.Font,System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font subdictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextRenderingMode(GrapeCity.Documents.Pdf.TextRenderingMode)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteString(System.Byte[],System.Int32)">
            <summary>
            Writes string in format "(blabla)".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteContentFragment(System.Byte[])">
            <summary>
            Writes bytes which determines fragment of page content, it can contains one or more operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteContentFragment(System.IO.Stream,System.Boolean)">
            <summary>
            Writes another content stream to this content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginOperator">
            <summary>
            Begins writing of page content operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndOperator(System.Byte[])">
            <summary>
            Ends writing of page content operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginArray">
            <summary>
            Begins array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndArray">
            <summary>
            Ends array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginDict">
            <summary>
            Begins dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndDict">
            <summary>
            Ends dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginDictEntry(System.String)">
            <summary>
            Begins an entry containing a subdictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndDictEntry">
            <summary>
            Ends dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(System.String,System.Single)">
            <summary>
            Adds float dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(System.String,System.Double)">
            <summary>
            Adds double dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(System.String,System.Int32)">
            <summary>
            Adds integer dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntryName(System.String,System.String)">
            <summary>
            Adds name dict entry, entry added only if value is not empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(System.String,System.Boolean)">
            <summary>
            Adds bool dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntryNull(System.String)">
            <summary>
            Adds NULL entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntryString(System.String,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Adds string dict entry, string is written as PDF string i.e. like (BlaBla).
            If string contains chars with code greater than 126 it encoded as unicode.
            String is encoded if encoding specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(System.String,System.Drawing.RectangleF)">
            <summary>
            Adds PDF array dict entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteObject(System.Object)">
            <summary>
            Writes a custom object, following rules are used:
            Numeric types (int, float, byte etc) are written as PDF number or integer
            <see cref="T:System.String"/> - PDF name
            <see cref="T:System.Boolean"/> - PDF bool
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> - PDF null
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> - PDF string
            <see cref="T:System.Collections.IList"/> - PDF array
            IDictionary{string, object} - PDF dictionary
            <see cref="T:System.Drawing.RectangleF"/> - PDF array of four numbers.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteList(System.Collections.IList)">
            <summary>
            Writes a list of objects, PDF array should be started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginArrayEntry(System.String)">
            <summary>
            Starts an array dict entry, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndArrayEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndArrayEntry">
            <summary>
            Ends an array dict entry, should be called after <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginArrayEntry(System.String)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntryObject(System.String,System.Object)">
            <summary>
            Adds a dict entry with object value,
            see <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteObject(System.Object)"/> about writing rules.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntries(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            Adds dict entries from specified collection, PDF dict should be started.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject">
            <summary>
            For internal use.
            Represents a wrapper over <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> interface.
            Implements <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.mi_PdfFlags">
            <summary>
            The field of bit flags, can be used by derived classes to hold custom information.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.mi_Dict">
            <summary>
            The underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDictHolder"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject._valuesWrapper">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.DictWrapper"/> object that allows working with underlying dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.ObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.DocID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            By default implemented as:
            if (w.Doc.WriteComments)
                w.WriteComment(this.GetType().Name);
            w.BeginObj();
            this.Write(w);
            w.EndObj();
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Empty">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Empty"/>
            By default calls the <see cref="M:GrapeCity.Documents.Pdf.Parser.PdfWrapperUtils.IsDictEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDictHolder)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Indirect">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Indirect"/>.
            By default implemented as:
            return mi_Dict is PdfObject;
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Loaded(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Loaded(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            By default resets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Changed"/> to false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Changed">
            <summary>
            Gets or sets a value indicating whether the object's property was changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.WasLoaded">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WasLoaded"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.OnChanged">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Changed"/> to true, should be called when
            public property is changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDictWrapperObject.Properties">
            <summary>
            Gets a dictionary containing attribute's properties.
            Value of property can be:
            <list type="bullet">
            <item><description><term>number</term></description></item>
            <item><description><term>bool</term></description></item>
            <item><description><term><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/></term></description></item>
            <item><description><term><see cref="T:System.String"/></term> represents PDF name.</description></item>
            <item><description><term><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/></term></description></item>
            <item><description><term><see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/></term></description></item>
            </list>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter">
            <summary>
            PDF writer used to build PDF document content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.GetStreamLength(System.Byte[],GrapeCity.Documents.Pdf.Security.EncryptionStreamType)">
            <summary>
            Returns value of "Length" key in PDF dictionary for stream object depending on encrypting.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.CurrentObjID">
            <summary>
            Gets an ID of the PDF object currently written with BeginObj() method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteComment(System.String)">
            <summary>
            Writes comment string to the stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Starts writing new pdf object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(GrapeCity.Documents.Pdf.PdfObjID,System.String)">
            <summary>
            Starts writing new pdf object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.String)">
            <summary>
            Starts writing new pdf object, returns its ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.Int32)">
            <summary>
            Starts writing pdf object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.Int32,System.String)">
            <summary>
            Starts writing pdf object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndObj">
            <summary>
            Ends PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(GrapeCity.Documents.Pdf.IPdfStream,System.Boolean,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            Finishes currently started indirect PDF object.
            If <paramref name="stream"/> is not empty then writes PDF stream,
            including "Length" and "Filter" dictionary properties.
            NOTE! This method assumes that PDF dictionary already started with BeginDict() method.
            </summary>
            <param name="stream">The data to write.</param>
            <param name="useCompression">Indicates whether to compress data if compression specified for this GcPdfDocument</param>
            <param name="est">The stream type, indicates whether to encrypt data.</param>
            <param name="forceLengthAsDirectValue">If true then Length entry will be written as DIRECT VALUE.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(GrapeCity.Documents.Pdf.IPdfStreamProvider,System.Boolean,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(GrapeCity.Documents.Pdf.IPdfStream,System.Boolean,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.IsExistInDocument(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Checks whether the object will be in the output PDF stream.
            Usually this method returns true if object will be written to the PDF stream, but
            in case of incremental update it is possible that object
            will NOT be written to the output PDF when GcPdfDocument.Save(...) called
            but its old copy referenced.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.Write(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Writes the <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> object
            if <paramref name="value"/> is indirect object then reference to this object will be written
            otherwise <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/> will be
            called to write value representing an object.
            If <paramref name="value"/> is null or <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Empty"/> is true
            then PDF NULL value will be written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Adds dict entry with value representing <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.ShouldBeWritten(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Checks whether the indirect object should be written to the output stream,
            generates the object's ID if it was not generated before.
            Note! In case of incremental update OLD instance of object can be referenced,
            i.e. it will NOT be written when <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.GenerateObjID(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)">
            <summary>
            Checks whether the indirect object will be in the output PDF stream,
            generates the object's ID if it was not generated before.
            Note! In case of incremental update OLD instance of object can be referenced,
            i.e. it will NOT be written when <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean)">
            <summary>
            Writes <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/>, generates 
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/> if it is empty.
            The object is written only if it is was NOT written before.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteRef(System.Int32)">
            <summary>
            Writes a PDF reference like "10 0 R".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteRef(GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Writes a PDF reference like "10 0 R".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryObjRef(System.String,System.Int32)">
            <summary>
            Adds a dictionary entry with PDF reference.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryObjRef(System.String,GrapeCity.Documents.Pdf.PdfObjID)">
            <summary>
            Adds a dictionary entry with PDF reference.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginDict">
            <summary>
            Starts a dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndDict">
            <summary>
            Ends a dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginArray">
            <summary>
            Begins array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndArray">
            <summary>
            Ends array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryPlaceHolder(System.String,System.Int32,System.Int64@)">
            <summary>
            Adds a dict entry with "placeholder" (spaces) the actual value should be written later,
            used when generating linearized PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryRaw(System.String,System.String)">
            <summary>
            Adds a dict entry with "raw" value, passed value is written as is,
            each char converted to byte using (byte)value[...].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry``1(System.String,GrapeCity.Documents.Pdf.PdfEnum{``0})">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry``1(System.String,System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{``0}})">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryString(System.String,System.String)">
            <summary>
            Adds a dict entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.PdfLang)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.PdfLang"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryString(System.String,System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Adds a dict entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryStringNotEmpty(System.String,System.String)">
            <summary>
            Adds a dict entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryNull(System.String)">
            <summary>
            Adds a dict entry with PDF null value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryHexString(System.String,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Adds a dict entry with PDF string value written as HEX string: &lt;F1A0&gt;
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Numerics.Matrix3x2)">
            <summary>
            Adds a dict entry with <see cref="T:System.Numerics.Matrix3x2"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorPoint"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorMatrix"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.FileID)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.FileID"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Boolean)">
            <summary>
            Adds a dict entry with PDF bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Int32)">
            <summary>
            Adds a dict entry with PDF integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Int64)">
            <summary>
            Adds a dict entry with PDF integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Single)">
            <summary>
            Adds a dict entry with PDF number value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Double)">
            <summary>
            Adds a dict entry with PDF number value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Single},System.Single)">
            <summary>
            Adds a dict entry with PDF number value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Single})">
            <summary>
            Adds a dict entry with PDF number value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds a dict entry with PDF integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a dict entry with PDF integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a dict entry with PDF bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a dict entry with PDF bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry``1(System.String,System.Nullable{``0},``0)">
            <summary>
            Adds a dict entry with PDF name valuem, the PDF name obtained as value.ToString().
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Common.Offsets)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Common.Offsets"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{GrapeCity.Documents.Common.Offsets})">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Common.Offsets"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Drawing.RectangleF})">
            <summary>
            Adds a dict entry with <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{System.Drawing.RectangleF},System.Drawing.RectangleF)">
            <summary>
            Adds a dict entry with <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Drawing.RectangleF)">
            <summary>
            Adds a dict entry with <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Drawing.Color)">
            <summary>
            Adds a dict entry with <see cref="T:System.Drawing.Color"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime})">
            <summary>
            Adds a dict entry with <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryRichString(System.String,System.String)">
            <summary>
            Adds a dict entry with PDF rich string value, see PDF specification for details about Rich text in PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryName(System.String,System.String)">
            <summary>
            Adds a dict entry with PDF name value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single})">
            <summary>
            Adds a dict entry with float array value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a dict entry with integer array value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryNameArray(System.String,System.String[])">
            <summary>
            Adds a dict entry with PDF name array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryNames(System.String,System.String[],System.String[])">
            <summary>
            Adds a dict entry with PDF name array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Single[],System.Single)">
            <summary>
            Adds a dict entry with line style value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(System.String,System.Collections.Generic.IList{System.Drawing.PointF},System.Func{System.Drawing.PointF,System.Drawing.PointF})">
            <summary>
            Adds a dict entry with array of points.
            <paramref name="convertMethod"/> is called for each item in <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginEntry(System.String)">
            <summary>
            Stats a dict entry, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndEntry">
            <summary>
            Ends a dict entry, should be called after <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginEntry(System.String)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginDictEntry(System.String)">
            <summary>
            Starts a dict entry with a nested dictionary, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndDictEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndDictEntry">
            <summary>
            Ends a nested dictionary entry, should be called after <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginDictEntry(System.String)"/>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginArrayEntry(System.String)">
            <summary>
            Starts an array dict entry, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndArrayEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndArrayEntry">
            <summary>
            Ends an array dict entry, should be called after <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginArrayEntry(System.String)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginStream(System.Int64@,System.IO.Stream@,System.Boolean@)">
            <summary>
            Starts a stream, PDF stream dictionary should be already started.
            Should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(System.Int64)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(System.Int64)">
            <summary>
            Ends a PDF stream started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginStream(System.Int64@,System.IO.Stream@,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.ResolveUnknownReference(GrapeCity.Documents.Pdf.Spec.PdfRef,GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject@)">
            <summary>
            Returns a value of PDF reference in generated PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.ResolveUnknownPdfObject(GrapeCity.Documents.Pdf.Spec.PdfObject)">
            <summary>
            Returns an new object ID of specified <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> in generated PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteObject(System.Object)">
            <summary>
            Writes a custom object, following rules are used:
            Numeric types (int, float, byte etc) are written as PDF number or integer
            <see cref="T:System.String"/> - PDF name
            <see cref="T:System.Boolean"/> - PDF bool
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> - PDF null
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> - PDF string
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> - PDF reference, if the reference points to an unknown object it will be added to <see cref="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter._currentObjUnknownObjects"/> collection and written after current object.
            <see cref="T:System.Collections.IList"/> - PDF array
            IDictionary{string, object} - PDF dictionary
            <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> - <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.Write(GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject)"/> is used
            <see cref="T:System.Drawing.RectangleF"/> - PDF array of four numbers.
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObject"/> - indirect PDF object, 
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryObject(System.String,System.Object)">
            <summary>
            Adds a dict entry with value defined by a custom object,
            see <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteObject(System.Object)"/> about writing rules.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteList(System.Collections.IList)">
            <summary>
            Writes a list of objects, PDF array should be started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntries(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])">
            <summary>
            Adds dict entries from specified collection, PDF dict should be started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntries(System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{System.String,System.Object,System.Boolean})">
            <summary>
            Adds dict entries from specified collection, PDF dict should be started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndUnknownStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.String[])">
            <summary>
            Writes an "unknown" <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/>.
            The method simply copies a content on underlying PDF stream, its content is not decoded.
            PDF object and dict should be started with BeginObj() and BeginDict(),
            object should be finished with EndObject().
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndUnknownStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Func{System.String,System.Object,System.Boolean})">
            <summary>
            Writes an "unknown" <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/>.
            The method simply copies a content on underlying PDF stream, its content is not decoded.
            PDF object and dict should be started with BeginObj() and BeginDict(),
            object should be finished with EndObject().
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableHeader(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes start of "xref" table.
            </summary>
            <param name="firstObjectID"></param>
            <param name="objectCount"></param>
            <param name="writeZeroEntry"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableItem(System.Int32)">
            <summary>
            Writes item of "xref" table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableTrailer(System.Int64,System.Int32,System.Int64,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Writes trailer of "xref" table.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized">
            <summary>
            PDF writer used to build PDF document content in linearized form.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized.WriteEmbeddedFileStreams">
            <summary>
            Indicates whether <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> objects should be processed as regular objects,
            otherwise they will be NOT written but added to the <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizedEmbeddedFileStreams"/> list.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject">
            <summary>
            For internal use.
            Implements <see cref="T:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject"/> interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.mi_PdfFlags">
            <summary>
            The field of bit flags, can be used by derived classes to hold custom information.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.OldObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.OldObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.ObjID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ObjID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.DocID">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Loaded(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Loaded(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            By default resets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Changed"/> to false.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Write(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            By default implemented as:
            if (w.Doc.WriteComments)
                w.WriteComment(this.GetType().Name);
            w.BeginObj();
            this.Write(w);
            w.EndObj();
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.EnumerateNestedObjects(GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject,System.Boolean})"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Empty">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Empty"/>
            By default returns false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Indirect">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.Indirect"/>.
            By default implemented as:
            return !WasLoaded || !OldObjID.IsEmpty();
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.IsContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            By default returns <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Changed"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.ResetContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.ResetContentChanged(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            by default sets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Changed"/> to false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.Changed">
            <summary>
            Gets or sets a value indicating whether the object's property was changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.WasLoaded">
            <summary>
            <see cref="P:GrapeCity.Documents.Pdf.Writer.IPdfIndirectSerializableObject.WasLoaded"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfIndirectSerializableObject.ParsedObjID">
            <summary>
            For internal use.
            Gets the object's ID in parsed PDF document, can be <see cref="F:GrapeCity.Documents.Pdf.PdfObjID.Empty"/> if
            object was created and added to the document after loading.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase">
            <summary>
            Base class for PDF writers: <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/>, <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EncryptHandler">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to encrypt strings and streams.
            By default returns m_Doc.Security.EncryptHandler.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Writes DateTime value to dictionary, value is encoded as it defined
            in chapter 3.8.3 Dates of PdfSpec 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.Single)">
            <summary>
            Writes float.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.Double)">
            <summary>
            Writes the double.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.Int64)">
            <summary>
            Writes long.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.UInt32)">
            <summary>
            Writes uint.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.Int32)">
            <summary>
            Writes integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNameInt(System.String)">
            <summary>
            Writes name value as "/name".
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteStringInt(System.String)">
            <summary>
            Writes a string as PDF string i.e. like (BlaBla).
            If string contains chars with code greater than 126 it encoded as unicode.
            String is encrypted if encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteStringInt(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes string already encoded as byte array, string is written as PDF string i.e. like (BlaBla).
            String is encoded if encoding specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteHexStringInt(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Writes string value in format &lt;FF01&gt;.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.CurrentObjID">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.PdfObjID"/> structure defining ID of PDF object currently written to the stream,
            used to encrypt strings.
            By default returns <see cref="F:GrapeCity.Documents.Pdf.PdfObjID.Empty"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Stream">
            <summary>
            Gets or sets the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteDelim">
            <summary>
            Writes delimiter (space) if <see cref="F:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.m_NeedDelimiter"/> is true, resets <see cref="F:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.m_NeedDelimiter"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteCRLF">
            <summary>
            Writes delimiter CRLF resets <see cref="F:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.m_NeedDelimiter"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Flush">
            <summary>
            Flushes all data to the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.GetPosition">
            <summary>
            For internal use only. Gets the Position on the page stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.IO.Stream)">
            <summary>
            Writes content of specified stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteBytes(System.Byte,System.Int32)">
            <summary>
            Writes specified count of bytes to the stream.
            </summary>
            <param name="b"></param>
            <param name="count"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteString(System.String)">
            <summary>
            Writes string, string is written as PDF string i.e. like (BlaBla).
            If string contains chars with code greater than 126 it encoded as unicode.
            String is encoded if encoding specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteString(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes string already encoded as byte array, string is written as PDF string i.e. like (BlaBla).
            String is encoded if encoding specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteHexString(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Writes string value in format &lt;FF01&gt;.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNull">
            <summary>
            Writes NULL value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.String)">
            <summary>
            Writes string using ASCII encoding, each char converted to byte as (byte)s[i].
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.String,System.Int32)">
            <summary>
            Writes string using ASCII encoding, each char converted to byte as (byte)s[i],
            with padding, spaces added at right.
            </summary>
            <param name="value"></param>
            <param name="length"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Byte[])">
            <summary>
            Writes bytes array.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteByte(System.Byte)">
            <summary>
            Writes single byte.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Writes DateTime value, value is encoded as it defined
            in chapter 3.8.3 Dates of PdfSpec 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.UInt32)">
            <summary>
            Writes the uint value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Single)">
            <summary>
            Writes the float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Double)">
            <summary>
            Writes the double value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Nullable{System.Single})">
            <summary>
            Writes the nullable float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Int64)">
            <summary>
            Writes the long value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WritePlaceHolder(System.Int32,System.Int64@)">
            <summary>
            Writes placeholder to the PDF stream and returns its offset.
            </summary>
            <param name="placeHolderLength"></param>
            <param name="placeHolderOffset"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Int32)">
            <summary>
            Writes the integer value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Boolean)">
            <summary>
            Writes bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Numerics.Matrix3x2)">
            <summary>
            Writes the matrix.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Drawing.Color)">
            <summary>
            Writes the color value as sequence of 3 numbers R, G, B. NOTE! alpha channel is NOT written.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteName(System.String)">
            <summary>
            Writes name value as "/name".
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Drawing.RectangleF)">
            <summary>
            Writes rect value as Left, Top, Right, Bottom.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteRect(System.Drawing.RectangleF)">
            <summary>
            Writes rect value as Left, Top, Width, Heigth.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(GrapeCity.Documents.Common.Offsets)">
            <summary>
            Writes offsets value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Drawing.PointF)">
            <summary>
            Writes point value.
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtDouble(System.Single)">
            <summary>
            Converts specified float to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtDouble(System.Double)">
            <summary>
            Converts specified float to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtLong(System.Int64)">
            <summary>
            Convertes specified long to string which can be written to PDF stream.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtUint(System.UInt32)">
            <summary>
            Convertes specified uint to string which can be written to PDF stream.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtInteger(System.Int32)">
            <summary>
            Convertes specified integer to string which can be written to PDF stream.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:org.jpedal.jbig2.decoders.MMRDecoder.whiteTable1">
            <summary>
            white run lengths
            </summary>
        </member>
        <member name="F:org.jpedal.jbig2.decoders.MMRDecoder.blackTable1">
            <summary>
            black run lengths
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.image.JBIG2Bitmap.setPixel(System.Int32,System.Int32,org.jpedal.jbig2.image.JBIG2Bitmap.FastBitSet,System.Int32)">
            <summary>
            private static void setPixel(int col, int row, FastBitSet data, int value) {
            if (value == 1)
            	data.set(row, col);
            else
            	data.clear(row, col);
            }/*
            </summary>
        </member>
        <member name="T:org.jpedal.jbig2.image.JBIG2Bitmap.FastBitSet">
            <summary>
            Faster BitSet implementation. Does not perfom any bound checks.
             
            @author Boris von Loesch
            
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.JBIG2Exception.#ctor">
            <summary>
            Constructs a <CODE>JBIGException</CODE> whithout a message.
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.JBIG2Exception.#ctor(System.String)">
            <summary>
            Constructs a <code>JBIGException</code> with a message.
            </summary>
            <param name="message">A message describing the exception</param>
        </member>
    </members>
</doc>
