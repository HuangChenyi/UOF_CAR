<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblEmpDisplayContentResource1.Text" xml:space="preserve">
    <value>After checking, when the user checks other people's personal detailed information, he can see the content of the field, otherwise he will see "Not displayed".</value>
  </data>
  <data name="lblEmpDisplayContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblEmpDisplayContentTipResource1.Text" xml:space="preserve">
    <value>*System administrator is not subject to this restriction and can view it</value>
  </data>
  <data name="lblEmpDisplayContentTipResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblEmpDisplayTitleResource1.Text" xml:space="preserve">
    <value>Can be displayed</value>
  </data>
  <data name="lblEmpDisplayTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblEmpUserModifyContentResource1.Text" xml:space="preserve">
    <value>After checking, the user can modify the content of this field in [Background information setup] of "Profile".</value>
  </data>
  <data name="lblEmpUserModifyContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblEmpUserModifyTitleResource1.Text" xml:space="preserve">
    <value>user editable</value>
  </data>
  <data name="lblEmpUserModifyTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblLimitViewContentResource1.Text" xml:space="preserve">
    <value>When the field is set to "Displayable" and "View restriction" is checked, when the user checks other people's personal detailed information, it will follow the [Internal Staff Information] setting in "System Management→General Setup" Determine whether the user can view the field content of this person.</value>
  </data>
  <data name="lblLimitViewContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblLimitViewTitleResource1.Text" xml:space="preserve">
    <value>View Restriction</value>
  </data>
  <data name="lblLimitViewTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrDisplayContentResource1.Text" xml:space="preserve">
    <value>After checking, when the user checks external member's personal detailed information, he can see the content of the field, otherwise he will see "Not displayed".</value>
  </data>
  <data name="lblMbrDisplayContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrDisplayContentTip2Resource1.Text" xml:space="preserve">
    <value>*System administrator is not subject to this restriction and can view it</value>
  </data>
  <data name="lblMbrDisplayContentTip2Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrDisplayContentTipResource1.Text" xml:space="preserve">
    <value>*When [External Member Group Selection Permission] is enabled in "System Management→General Setup", the personal data query permission of external members will follow the content set in "System Management→External Group Maintenance Setup" , all internal staff inquiries are not open​</value>
  </data>
  <data name="lblMbrDisplayContentTipResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrDisplayTitleResource1.Text" xml:space="preserve">
    <value>Can be displayed</value>
  </data>
  <data name="lblMbrDisplayTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrUserModifyContentResource1.Text" xml:space="preserve">
    <value>After checking, the external member can modify the content of this field in [Background information setup] of "Profile".</value>
  </data>
  <data name="lblMbrUserModifyContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblMbrUserModifyTitleResource1.Text" xml:space="preserve">
    <value>user editable</value>
  </data>
  <data name="lblMbrUserModifyTitleResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lbtnGoToBasicModuleSettingResource1.Text" xml:space="preserve">
    <value>Go to General Setup</value>
  </data>
  <data name="lbtnGoToBasicModuleSettingResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>Description of field permission settings</value>
  </data>
  <data name="pnlEmployeeResource1.GroupingText" xml:space="preserve">
    <value />
  </data>
  <data name="pnlEmployeeResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="pnlMemberResource1.GroupingText" xml:space="preserve">
    <value />
  </data>
  <data name="pnlMemberResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
</root>