<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label1Resource1.Text" xml:space="preserve">
    <value>請選擇站點類型</value>
  </data>
  <data name="Label1Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label2Resource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="Label2Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_CondResource1.Text" xml:space="preserve">
    <value>新增條件式站點</value>
  </data>
  <data name="lblAddMsg_CondResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_CustGroupResource1.Text" xml:space="preserve">
    <value>新增自選流程站點</value>
  </data>
  <data name="lblAddMsg_CustGroupResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_ExternalResource1.Text" xml:space="preserve">
    <value>新增應用程式站點</value>
  </data>
  <data name="lblAddMsg_ExternalResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_FieldResource1.Text" xml:space="preserve">
    <value>新增組織欄位站點</value>
  </data>
  <data name="lblAddMsg_FieldResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_FlowResource1.Text" xml:space="preserve">
    <value>新增流程站點</value>
  </data>
  <data name="lblAddMsg_FlowResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_SignResource1.Text" xml:space="preserve">
    <value>新增簽核式站點</value>
  </data>
  <data name="lblAddMsg_SignResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAlertSiteMsgResource1.Text" xml:space="preserve">
    <value>僅提供知會，不需設定簽核人員</value>
  </data>
  <data name="lblAlertSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblCondSiteMsgResource1.Text" xml:space="preserve">
    <value>判斷條件設定，因為是條件設定所以要先選擇要判斷的條件，選好後，再選擇判斷條件所要跑的副流程，一個判斷條件只能搭配一個副流程</value>
  </data>
  <data name="lblCondSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblCustGroupSiteMsgResource1.Text" xml:space="preserve">
    <value>由使用者在表單進行時，自行設定簽核流程</value>
  </data>
  <data name="lblCustGroupSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblExternalSiteMsgResource1.Text" xml:space="preserve">
    <value>提供接口，可設定呼叫外部應用程式(DLL)，由DLL決定站點流程</value>
  </data>
  <data name="lblExternalSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblFieldSiteMsgResource1.Text" xml:space="preserve">
    <value>選擇表單組織人員型態的欄位，簽核時由欄位選擇的內容進行簽核</value>
  </data>
  <data name="lblFieldSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblFlowSiteMsgResource1.Text" xml:space="preserve">
    <value>副流程站點設定，在副流程列表挑選要使用的副流程</value>
  </data>
  <data name="lblFlowSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblGroupSiteMsgResource1.Text" xml:space="preserve">
    <value>由表單設計者設定好副流程，再由使用者自行選擇一個以上的副流程來作為簽核流程</value>
  </data>
  <data name="lblGroupSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblSignSiteMsgResource1.Text" xml:space="preserve">
    <value>單一站點設定，可直接設定特殊人員或是挑選一般簽核人員</value>
  </data>
  <data name="lblSignSiteMsgResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>站點類型選擇</value>
  </data>
  <data name="rbAlertSiteResource1.Text" xml:space="preserve">
    <value>知會站點</value>
  </data>
  <data name="rbAlertSiteResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rbAssignableSiteResource1.Text" xml:space="preserve">
    <value>簽核站點</value>
  </data>
  <data name="rbAssignableSiteResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rbBranchSite_assignResource1.Text" xml:space="preserve">
    <value>分岔式站點 ( 指定 )</value>
  </data>
  <data name="rbBranchSite_assignResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rbBranchSite_conditionResource1.Text" xml:space="preserve">
    <value>分岔式站點 ( 條件 )</value>
  </data>
  <data name="rbBranchSite_conditionResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblAddMsg_AlertResource1.Text" xml:space="preserve">
    <value>新增知會站點</value>
  </data>
  <data name="lblAddMsg_AlertResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
</root>