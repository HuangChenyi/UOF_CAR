<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnInsertCanMSGResource1.Text" xml:space="preserve">
    <value>Insert Standard SMS</value>
  </data>
  <data name="btnInsertCanMSGResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label1Resource1.Text" xml:space="preserve">
    <value>Send date</value>
  </data>
  <data name="Label1Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label2Resource1.Text" xml:space="preserve">
    <value>Send time</value>
  </data>
  <data name="Label2Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label3Resource1.Text" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Label3Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label4Resource1.Text" xml:space="preserve">
    <value>※ {#user} is variable, it will replace by selected name when sending SMSs.</value>
  </data>
  <data name="Label4Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label5Resource1.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Label5Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label7Resource1.Text" xml:space="preserve">
    <value>SMSs sent.</value>
  </data>
  <data name="Label7Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label8Resource1.Text" xml:space="preserve">
    <value>※In order to display SMS in the cell phone normally，Special symbols like ~ ` ^ { } [ ] | &lt; &gt; is prohibited。</value>
  </data>
  <data name="Label8Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label9Resource1.Text" xml:space="preserve">
    <value>characters.</value>
  </data>
  <data name="Label9Resource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lbcounterResource1.Text" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lbcounterResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="lblSendSMSTip1Resource1.Text" xml:space="preserve">
    <value>1. {#user} is a variable and will be replaced by the selected person's name when sending.</value>
  </data>
  <data name="lblSendSMSTip2Resource1.Text" xml:space="preserve">
    <value>2. In order to make the content of the SMS appear on the mobile phone normally, please do not fill in special symbols such as ~ ` ^ { } [ ] | &lt; &gt; in the content of the SMS.</value>
  </data>
  <data name="lblSendSMSTip3Resource1.Text" xml:space="preserve">
    <value>3. The maximum length of a text message is 333 characters. If it exceeds, it will be split and sent.</value>
  </data>
  <data name="lblSendSMSTip4Resource1.Text" xml:space="preserve">
    <value>4.International SMS (not starting with +886) is calculated by three times the number of points.</value>
  </data>
  <data name="lblSendSMSTipTitleResource1.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblSMSConnectFailResource1.Text" xml:space="preserve">
    <value>Reservation SMS failed, please check the connection in SMS Management.</value>
  </data>
  <data name="lblTipPoint1Resource1.Text" xml:space="preserve">
    <value>1 point</value>
  </data>
  <data name="lblTipPoint2Resource1.Text" xml:space="preserve">
    <value>2 points</value>
  </data>
  <data name="lblTipPoint3Resource1.Text" xml:space="preserve">
    <value>3 points</value>
  </data>
  <data name="lblTipPoint4Resource1.Text" xml:space="preserve">
    <value>4 points</value>
  </data>
  <data name="lblTipPoint5Resource1.Text" xml:space="preserve">
    <value>5 points</value>
  </data>
  <data name="lblTipText1Resource1.Text" xml:space="preserve">
    <value>1~70 characters</value>
  </data>
  <data name="lblTipText2Resource1.Text" xml:space="preserve">
    <value>71~134 characters</value>
  </data>
  <data name="lblTipText3Resource1.Text" xml:space="preserve">
    <value>135~201 characters</value>
  </data>
  <data name="lblTipText4Resource1.Text" xml:space="preserve">
    <value>202~268 characters</value>
  </data>
  <data name="lblTipText5Resource1.Text" xml:space="preserve">
    <value>269~333 characters</value>
  </data>
  <data name="lblTipTitle1Resource1.Text" xml:space="preserve">
    <value>Numbers of character</value>
  </data>
  <data name="lblTipTitle2Resource1.Text" xml:space="preserve">
    <value>Point used</value>
  </data>
  <data name="lblYearResource1.Text" xml:space="preserve">
    <value>(Year:{0})</value>
  </data>
  <data name="lbsmscnts_needResource1.Text" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lbsmscnts_needResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="rdbtnCurrentResource1.Text" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="rdbtnCurrentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rdbtnOtherResource1.Text" xml:space="preserve">
    <value>Specify date</value>
  </data>
  <data name="rdbtnOtherResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="rfvContentResource1.ErrorMessage" xml:space="preserve">
    <value>Content cannot be blank</value>
  </data>
  <data name="rfvContentResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rfvContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="txtContentResource1.Text" xml:space="preserve">
    <value />
  </data>
  <data name="txtContentResource1.ToolTip" xml:space="preserve">
    <value />
  </data>
</root>