<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnWKFAddNewResource1.Text" xml:space="preserve">
    <value>フローを追加する</value>
  </data>
  <data name="chkBorrowResource1.Text" xml:space="preserve">
    <value>閲覧申請を確認する</value>
  </data>
  <data name="ckAuthorDefResource.Text" xml:space="preserve">
    <value>作成者はファイルによって設定することができます</value>
  </data>
  <data name="ckChangeToChildResource1.Text" xml:space="preserve">
    <value>変更されました内容はディレクトリやサブディレクトリに保存</value>
  </data>
  <data name="ckInheritParentResource1.Text" xml:space="preserve">
    <value>主要なディレクトリチェック設定を使う</value>
  </data>
  <data name="CustomValidator4Resource1.ErrorMessage" xml:space="preserve">
    <value>チェックするメンバーを選択してください</value>
  </data>
  <data name="labApproveHelpResource1.Text" xml:space="preserve">
    <value>下記の管理者により審査完成したらリリースできます</value>
  </data>
  <data name="labDefApproveResource1.Text" xml:space="preserve">
    <value>下記の管理者により審査完成したらリリースできます</value>
  </data>
  <data name="labDocStoreResource1.Text" xml:space="preserve">
    <value>データベース</value>
  </data>
  <data name="Label16Resource1.Text" xml:space="preserve">
    <value>フロー</value>
  </data>
  <data name="Label1Resource3.Text" xml:space="preserve">
    <value>ディレクトリ</value>
  </data>
  <data name="Label20Resource1.Text" xml:space="preserve">
    <value>閲覧することを申請する</value>
  </data>
  <data name="labShowParentResource1.Text" xml:space="preserve">
    <value>現在使用し続きの主なフォルダー：</value>
  </data>
  <data name="labUseWKFResource1.Text" xml:space="preserve">
    <value>Eサインを使います。フローを選択してください</value>
  </data>
  <data name="lanNoApproveResource1.Text" xml:space="preserve">
    <value>この部分が管理者の設定がいないので、審査設定ができません</value>
  </data>
  <data name="lblCheckDeleteChildDocDataResource1.Text" xml:space="preserve">
    <value>続きできますか？</value>
  </data>
  <data name="lblEditFormResource1.Text" xml:space="preserve">
    <value>フローを編集する</value>
  </data>
  <data name="lblFolderPathResource1.Text" xml:space="preserve">
    <value>使用したディレクトリ</value>
  </data>
  <data name="lblNoWKFFlowResource1.Text" xml:space="preserve">
    <value>フローがないので、フローを追加してください</value>
  </data>
  <data name="lblShowFormResource1.Text" xml:space="preserve">
    <value>フローを見る</value>
  </data>
  <data name="ListItemResource1.Text" xml:space="preserve">
    <value>全てのメンバーを承認する</value>
  </data>
  <data name="ListItemResource2.Text" xml:space="preserve">
    <value>下記のメンバーを承認する</value>
  </data>
  <data name="ListItemResource3.Text" xml:space="preserve">
    <value>下記のメンバーを承認しない</value>
  </data>
  <data name="ListItemResource4.Text" xml:space="preserve">
    <value>簡単なフロー</value>
  </data>
  <data name="ListItemResource5.Text" xml:space="preserve">
    <value>電子サイン</value>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>フロー</value>
  </data>
  <data name="wibtnSelectFlowResource1.Text" xml:space="preserve">
    <value>フローを編集する</value>
  </data>
  <data name="wibtnWKFFlowInfoResource1.Text" xml:space="preserve">
    <value>フロー情報</value>
  </data>
</root>